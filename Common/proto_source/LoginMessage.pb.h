// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LoginMessage.proto

#ifndef PROTOBUF_LoginMessage_2eproto__INCLUDED
#define PROTOBUF_LoginMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace game {
namespace proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_LoginMessage_2eproto();
void protobuf_AssignDesc_LoginMessage_2eproto();
void protobuf_ShutdownFile_LoginMessage_2eproto();

class PlayerInfo;
class GLRegisterLoginMessage;
class LGRegisterLoginMessage;
class ReqLoginMessage;
class ResLoginMessage;
class ResUpdateServerInfoMessage;
class ReqHeartBeatMessage;
class ResHeartBeatMessage;
class ReqBindUserMessage;
class ResBindUserMessage;
class ReqBindPhoneMessage;
class ResBindPhoneMessage;
class ReqBindZFBMessage;
class ResBindZFBMessage;
class ReqCanEnterSubGameMessage;
class ResCanEnterSubGameMessage;
class ReqLogin4SubGameMessage;
class ReqPhoneVerifyMessage;
class ResLogin4SubGameMessage;
class ReqQuit4SubGameMessage;
class ResQuit4SubGameMessage;
class ResUpdateMoney1Message;
class ResUpdateMoney2Message;
class ReqClientLoadstringMessage;
class ResClientLoadstringMessage;
class ReqChatMessage;
class ResChatMessage;
class ReqTopListDataMessage;
class ResTopListDataMessage;
class MoneyTopData;
class CharmTopData;
class OnlineTopData;
class TotalMoneyTopData;
class ReqGameRecordPanelMessage;
class ResGameRecordPanelMessage;
class GameRecordPanelData;
class ReqGameRecordDataMessage;
class ResGameRecordMessage;
class GameRecordData;
class CardData;
class BetData;
class ReqSaveMoneyMessage;
class ReqDrawMoneyMessage;
class ResNoticeMessage;
class ReqModifyPlayerInfoMessage;
class ResModifyPlayerInfoMessage;
class ReqModifyBankPassWordMessage;
class ResModifyBankPassWordMessage;
class ReqModifyLoginPassWordMessage;
class ResModifyLoginPassWordMessage;
class ReqBindBankCardMessage;
class ResBindBankCardMessage;
class ReqRechargeMessage;
class ResRechargeMessage;
class ReqRechargeIOSMessage;
class ResRechargeIOSMessage;
class ReqWithDrawCashMessage;
class ResWithDrawCashMessage;
class ReqChangeCardBgMessage;
class ResChangeCardBgMessage;
class ReqApplyAgencyMessage;
class ResApplyAgencyMessage;
class ReqChatWithServiceMessage;
class ResChatWithServiceMessage;
class ReqReportAgencyMessage;
class ResReportAgencyMessage;
class ReqWithDrawCashInfoMessage;
class ResWithDrawCashInfoMessage;
class WithDrawCashInfo;
class UpdateWithDrawCashInfoMessage;
class ReqAgencyInfoMessage;
class ResAgencyInfoMessage;
class AgencyInfo;
class UpdateBankWithdrawStateMessage;
class UpdateReferrerInfoMessage;
class ReqTransferReferMoneyMessage;
class ResSystemNoticeMessage;
class ReqReadMailMessage;
class ReqDeleteMailMessage;
class ReqGetMailMoneyMessage;
class UpdateMailMessage;
class MailInfo;
class MailGoods;
class UpdatePlayerRechargeInfoMessage;
class UpdateControllerRechargeMessage;
class ReqChatWithAgentMessage;
class ResChatWithAgentMessage;
class AgentChatInfo;
class ReqAgentChatWithServiceMessage;
class ResAgentChatWithServiceMessage;
class ReqCommonMessage;
class ResCommonMessage;
class RefreshOnlineAwardMessage;
class ReqGetOnlineAwardMessage;
class ResGetOnlineAwardMessage;
class ReqGetBankruptcyAwardMessage;
class ResGetBankruptcyAwardMessage;
class ReqPresentCharmValueMessage;
class ResPresentCharmValueMessage;
class ReqGetStartUpMoneyMessage;
class ReqSignInMessage;
class ResSignInMessage;
class ResSignInDataMessage;
class ResBarrageChangeMessage;
class ResVIPInfoMessage;
class ResCharmInfoMessage;
class ReqTurntableDataMessage;
class ReqTurntableMessage;
class ReqLftfreshMessage;
class ReqLftScratchMessage;
class ReqHftReceiveMessage;
class ReqHftScratchMessage;
class ResHftScratchMessage;
class ReqLftRwScratchMessage;
class ReqLftRwReceiveMessage;
class ResLftRwScratchMessage;
class LftrwInfo;
class ReqhuodongMessage;
class ReshuodongMessage;
class huodonginfo;
class ReqExpandPlayerInfoMessage;
class ReqGetShopGoodsMessage;
class ReqBuyItemMessage;
class ReqRemainderTaskMessage;
class ResRemainderTaskMessage;
class ItemBaseAttribute;
class ResBackpackListMessage;
class ReqReceiveMailItemMessage;
class ReqOpenUpMessage;
class ResOpenUpMessage;
class openupinfo;
class ReqShareInfoMessage;
class ResShareInfoMessage;
class DownShareDesc;
class ReqPubAuctionMessage;
class ReqBuyAuctionMessage;
class ReqAuctionsMessage;
class ResAuctionsMessage;
class ReqMyAuctionHistorysMessage;
class ResMyAuctionHistorysMessage;
class AuctionEntry;
class AuctionLog;
class ReqCancelAuctionMessage;

enum Protos_Login {
  LGRegisterLogin = 101,
  GLRegisterLogin = 102,
  ReqLogin = 103,
  ResLogin = 104,
  ReqPhoneVerify = 105,
  ReqHeartBeat = 115,
  ResHeartBeat = 116,
  ResUpdateServerInfo = 120,
  ReqBindUser = 131,
  ResBindUser = 132,
  ReqBindPhone = 133,
  ResBindPhone = 134,
  ReqBindZFB = 135,
  ResBindZFB = 136,
  ReqCanEnterSubGame = 137,
  ResCanEnterSubGame = 138,
  ReqLogin4SubGame = 141,
  ResLogin4SubGame = 142,
  ReqQuit4SubGame = 143,
  ResQuit4SubGame = 144,
  ResUpdateMoney1 = 151,
  ResUpdateMoney2 = 152,
  ReqClientLoadstring = 161,
  ResClientLoadstring = 162,
  ReqChat = 163,
  ResChat = 164,
  ReqTopListData = 165,
  ResTopListData = 166,
  ReqSaveMoney = 167,
  ReqDrawMoney = 168,
  ReqNotice = 169,
  ResNotice = 170,
  ReqModifyPlayerInfo = 171,
  ResModifyPlayerInfo = 172,
  ReqModifyBankPassWord = 173,
  ResModifyBankPassWord = 174,
  ReqModifyLoginPassWord = 175,
  ResModifyLoginPassWord = 176,
  ReqBindBankCard = 177,
  ResBindBankCard = 178,
  ReqGameRecordPanel = 180,
  ResGameRecordPanel = 181,
  ReqGameRecordData = 182,
  ResGameRecordData = 183,
  ReqRecharge = 200,
  ResRecharge = 201,
  ReqRechargeIOS = 202,
  ResRechargeIOS = 203,
  ReqWithDrawCash = 250,
  ResWithDrawCash = 251,
  ReqChangeCardBg = 301,
  ResChangeCardBg = 302,
  ReqApplyAgency = 310,
  ResApplyAgency = 311,
  ReqChatWithService = 312,
  ResChatWithService = 313,
  ReqReportAgency = 314,
  ResReportAgency = 315,
  ReqWithDrawCashInfo = 316,
  ResWithDrawCashInfo = 317,
  UpdateWithDrawCashInfo = 318,
  ReqAgencyInfo = 319,
  ResAgencyInfo = 320,
  UpdateBankWithdrawState = 321,
  UpdateReferrerInfo = 322,
  ReqTransferReferMoney = 323,
  ResSystemNotice = 324,
  ReqChatWithAgent = 325,
  ResChatWithAgent = 326,
  ReqAgentChatWithService = 327,
  ResAgentChatWithService = 328,
  ReqDeleteMail = 400,
  ReqReadMail = 401,
  ReqGetMailMoney = 402,
  UpdateMail = 403,
  UpdatePlayerRechargeInfo = 404,
  UpdateControllerRecharge = 405,
  ReqCommon = 410,
  ResCommon = 411,
  RefreshOnlineAward = 601,
  ReqGetOnlineAward = 602,
  ResGetOnlineAward = 603,
  ReqGetBankruptcyAward = 604,
  ResGetBankruptcyAward = 605,
  ReqPresentCharmValue = 606,
  ResPresentCharmValue = 607,
  ReqGetStartUpMoney = 608,
  ReqSignIn = 609,
  ResSignIn = 610,
  ResSignInData = 611,
  ResBarrageChange = 612,
  ResVIPInfo = 613,
  ResCharmInfo = 614,
  ReqTurntableData = 617,
  ReqTurntable = 618,
  ReqLftfresh = 642,
  ReqLftScratch = 640,
  ReqHftReceive = 650,
  ReqHftScratch = 651,
  ResHftScratch = 652,
  ReqLftRwScratch = 660,
  ReqLftRwReceive = 661,
  ResLftRwScratch = 662,
  Reqhuodong = 670,
  Reshuodong = 671,
  ReqExpandPlayerInfo = 672,
  ReqGetShopGoods = 673,
  ReqBuyItem = 674,
  ReqRemainderTask = 675,
  ResRemainderTask = 676,
  ResBackpackList = 677,
  ResAddBackpack = 678,
  ReqReceiveMailItem = 679,
  ReqOpenUp = 680,
  ResOpenUp = 681,
  ReqShareInfo = 682,
  ResShareInfo = 683,
  ReqPubAuction = 684,
  ReqBuyAuction = 685,
  ReqAuctions = 686,
  ResAuctions = 687,
  ReqMyAuctionHistorys = 688,
  ResMyAuctionHistorys = 689,
  ReqCancelAuction = 690
};
bool Protos_Login_IsValid(int value);
const Protos_Login Protos_Login_MIN = LGRegisterLogin;
const Protos_Login Protos_Login_MAX = ReqCancelAuction;
const int Protos_Login_ARRAYSIZE = Protos_Login_MAX + 1;

const ::google::protobuf::EnumDescriptor* Protos_Login_descriptor();
inline const ::std::string& Protos_Login_Name(Protos_Login value) {
  return ::google::protobuf::internal::NameOfEnum(
    Protos_Login_descriptor(), value);
}
inline bool Protos_Login_Parse(
    const ::std::string& name, Protos_Login* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Protos_Login>(
    Protos_Login_descriptor(), name, value);
}
// ===================================================================

class PlayerInfo : public ::google::protobuf::Message {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();
  
  PlayerInfo(const PlayerInfo& from);
  
  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();
  
  void Swap(PlayerInfo* other);
  
  // implements Message ----------------------------------------------
  
  PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int64 userid() const;
  inline void set_userid(::google::protobuf::int64 value);
  
  // optional string username = 2;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 2;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional string bindAlipayName = 4;
  inline bool has_bindalipayname() const;
  inline void clear_bindalipayname();
  static const int kBindAlipayNameFieldNumber = 4;
  inline const ::std::string& bindalipayname() const;
  inline void set_bindalipayname(const ::std::string& value);
  inline void set_bindalipayname(const char* value);
  inline void set_bindalipayname(const char* value, size_t size);
  inline ::std::string* mutable_bindalipayname();
  inline ::std::string* release_bindalipayname();
  
  // optional string bindAlipayAcc = 5;
  inline bool has_bindalipayacc() const;
  inline void clear_bindalipayacc();
  static const int kBindAlipayAccFieldNumber = 5;
  inline const ::std::string& bindalipayacc() const;
  inline void set_bindalipayacc(const ::std::string& value);
  inline void set_bindalipayacc(const char* value);
  inline void set_bindalipayacc(const char* value, size_t size);
  inline ::std::string* mutable_bindalipayacc();
  inline ::std::string* release_bindalipayacc();
  
  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string icon = 7;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 7;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // optional int32 sex = 8;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 8;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional string address = 9;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 9;
  inline const ::std::string& address() const;
  inline void set_address(const ::std::string& value);
  inline void set_address(const char* value);
  inline void set_address(const char* value, size_t size);
  inline ::std::string* mutable_address();
  inline ::std::string* release_address();
  
  // optional int32 vip = 10;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 10;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // optional int32 loginId = 11;
  inline bool has_loginid() const;
  inline void clear_loginid();
  static const int kLoginIdFieldNumber = 11;
  inline ::google::protobuf::int32 loginid() const;
  inline void set_loginid(::google::protobuf::int32 value);
  
  // optional int32 gameId = 12;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 12;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // optional int64 mapId = 13;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 13;
  inline ::google::protobuf::int64 mapid() const;
  inline void set_mapid(::google::protobuf::int64 value);
  
  // optional int32 mapModelId = 14;
  inline bool has_mapmodelid() const;
  inline void clear_mapmodelid();
  static const int kMapModelIdFieldNumber = 14;
  inline ::google::protobuf::int32 mapmodelid() const;
  inline void set_mapmodelid(::google::protobuf::int32 value);
  
  // optional int32 mapLineId = 15;
  inline bool has_maplineid() const;
  inline void clear_maplineid();
  static const int kMapLineIdFieldNumber = 15;
  inline ::google::protobuf::int32 maplineid() const;
  inline void set_maplineid(::google::protobuf::int32 value);
  
  // optional double money1 = 16;
  inline bool has_money1() const;
  inline void clear_money1();
  static const int kMoney1FieldNumber = 16;
  inline double money1() const;
  inline void set_money1(double value);
  
  // optional double money2 = 17;
  inline bool has_money2() const;
  inline void clear_money2();
  static const int kMoney2FieldNumber = 17;
  inline double money2() const;
  inline void set_money2(double value);
  
  // optional int32 cardBg = 18;
  inline bool has_cardbg() const;
  inline void clear_cardbg();
  static const int kCardBgFieldNumber = 18;
  inline ::google::protobuf::int32 cardbg() const;
  inline void set_cardbg(::google::protobuf::int32 value);
  
  // optional string bankCardAcc = 19;
  inline bool has_bankcardacc() const;
  inline void clear_bankcardacc();
  static const int kBankCardAccFieldNumber = 19;
  inline const ::std::string& bankcardacc() const;
  inline void set_bankcardacc(const ::std::string& value);
  inline void set_bankcardacc(const char* value);
  inline void set_bankcardacc(const char* value, size_t size);
  inline ::std::string* mutable_bankcardacc();
  inline ::std::string* release_bankcardacc();
  
  // optional string bankCardName = 20;
  inline bool has_bankcardname() const;
  inline void clear_bankcardname();
  static const int kBankCardNameFieldNumber = 20;
  inline const ::std::string& bankcardname() const;
  inline void set_bankcardname(const ::std::string& value);
  inline void set_bankcardname(const char* value);
  inline void set_bankcardname(const char* value, size_t size);
  inline ::std::string* mutable_bankcardname();
  inline ::std::string* release_bankcardname();
  
  // optional string bankCardBelong = 21;
  inline bool has_bankcardbelong() const;
  inline void clear_bankcardbelong();
  static const int kBankCardBelongFieldNumber = 21;
  inline const ::std::string& bankcardbelong() const;
  inline void set_bankcardbelong(const ::std::string& value);
  inline void set_bankcardbelong(const char* value);
  inline void set_bankcardbelong(const char* value, size_t size);
  inline ::std::string* mutable_bankcardbelong();
  inline ::std::string* release_bankcardbelong();
  
  // optional bool applyAgent = 22;
  inline bool has_applyagent() const;
  inline void clear_applyagent();
  static const int kApplyAgentFieldNumber = 22;
  inline bool applyagent() const;
  inline void set_applyagent(bool value);
  
  // optional int32 titleIndex = 23;
  inline bool has_titleindex() const;
  inline void clear_titleindex();
  static const int kTitleIndexFieldNumber = 23;
  inline ::google::protobuf::int32 titleindex() const;
  inline void set_titleindex(::google::protobuf::int32 value);
  
  // optional double gameMaxWinMoney = 24;
  inline bool has_gamemaxwinmoney() const;
  inline void clear_gamemaxwinmoney();
  static const int kGameMaxWinMoneyFieldNumber = 24;
  inline double gamemaxwinmoney() const;
  inline void set_gamemaxwinmoney(double value);
  
  // optional int32 charmValue = 25;
  inline bool has_charmvalue() const;
  inline void clear_charmvalue();
  static const int kCharmValueFieldNumber = 25;
  inline ::google::protobuf::int32 charmvalue() const;
  inline void set_charmvalue(::google::protobuf::int32 value);
  
  // optional double rechargeMoney = 26;
  inline bool has_rechargemoney() const;
  inline void clear_rechargemoney();
  static const int kRechargeMoneyFieldNumber = 26;
  inline double rechargemoney() const;
  inline void set_rechargemoney(double value);
  
  // optional int32 headIcon = 27;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 27;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);
  
  // optional string signature = 28;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 28;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  
  // optional int32 userType = 29;
  inline bool has_usertype() const;
  inline void clear_usertype();
  static const int kUserTypeFieldNumber = 29;
  inline ::google::protobuf::int32 usertype() const;
  inline void set_usertype(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.PlayerInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_bindalipayname();
  inline void clear_has_bindalipayname();
  inline void set_has_bindalipayacc();
  inline void clear_has_bindalipayacc();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_loginid();
  inline void clear_has_loginid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_mapid();
  inline void clear_has_mapid();
  inline void set_has_mapmodelid();
  inline void clear_has_mapmodelid();
  inline void set_has_maplineid();
  inline void clear_has_maplineid();
  inline void set_has_money1();
  inline void clear_has_money1();
  inline void set_has_money2();
  inline void clear_has_money2();
  inline void set_has_cardbg();
  inline void clear_has_cardbg();
  inline void set_has_bankcardacc();
  inline void clear_has_bankcardacc();
  inline void set_has_bankcardname();
  inline void clear_has_bankcardname();
  inline void set_has_bankcardbelong();
  inline void clear_has_bankcardbelong();
  inline void set_has_applyagent();
  inline void clear_has_applyagent();
  inline void set_has_titleindex();
  inline void clear_has_titleindex();
  inline void set_has_gamemaxwinmoney();
  inline void clear_has_gamemaxwinmoney();
  inline void set_has_charmvalue();
  inline void clear_has_charmvalue();
  inline void set_has_rechargemoney();
  inline void clear_has_rechargemoney();
  inline void set_has_headicon();
  inline void clear_has_headicon();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_usertype();
  inline void clear_has_usertype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 userid_;
  ::std::string* username_;
  ::std::string* bindalipayname_;
  ::std::string* bindalipayacc_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 sex_;
  ::std::string* name_;
  ::std::string* icon_;
  ::std::string* address_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 loginid_;
  ::google::protobuf::int64 mapid_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::int32 mapmodelid_;
  double money1_;
  ::google::protobuf::int32 maplineid_;
  ::google::protobuf::int32 cardbg_;
  double money2_;
  ::std::string* bankcardacc_;
  ::std::string* bankcardname_;
  ::std::string* bankcardbelong_;
  bool applyagent_;
  ::google::protobuf::int32 titleindex_;
  double gamemaxwinmoney_;
  double rechargemoney_;
  ::google::protobuf::int32 charmvalue_;
  ::google::protobuf::int32 headicon_;
  ::std::string* signature_;
  ::google::protobuf::int32 usertype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(29 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class GLRegisterLoginMessage : public ::google::protobuf::Message {
 public:
  GLRegisterLoginMessage();
  virtual ~GLRegisterLoginMessage();
  
  GLRegisterLoginMessage(const GLRegisterLoginMessage& from);
  
  inline GLRegisterLoginMessage& operator=(const GLRegisterLoginMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GLRegisterLoginMessage& default_instance();
  
  void Swap(GLRegisterLoginMessage* other);
  
  // implements Message ----------------------------------------------
  
  GLRegisterLoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GLRegisterLoginMessage& from);
  void MergeFrom(const GLRegisterLoginMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = GLRegisterLogin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string serverInfo = 2;
  inline bool has_serverinfo() const;
  inline void clear_serverinfo();
  static const int kServerInfoFieldNumber = 2;
  inline const ::std::string& serverinfo() const;
  inline void set_serverinfo(const ::std::string& value);
  inline void set_serverinfo(const char* value);
  inline void set_serverinfo(const char* value, size_t size);
  inline ::std::string* mutable_serverinfo();
  inline ::std::string* release_serverinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.GLRegisterLoginMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_serverinfo();
  inline void clear_has_serverinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* serverinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static GLRegisterLoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class LGRegisterLoginMessage : public ::google::protobuf::Message {
 public:
  LGRegisterLoginMessage();
  virtual ~LGRegisterLoginMessage();
  
  LGRegisterLoginMessage(const LGRegisterLoginMessage& from);
  
  inline LGRegisterLoginMessage& operator=(const LGRegisterLoginMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LGRegisterLoginMessage& default_instance();
  
  void Swap(LGRegisterLoginMessage* other);
  
  // implements Message ----------------------------------------------
  
  LGRegisterLoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LGRegisterLoginMessage& from);
  void MergeFrom(const LGRegisterLoginMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = LGRegisterLogin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string serverInfo = 2;
  inline bool has_serverinfo() const;
  inline void clear_serverinfo();
  static const int kServerInfoFieldNumber = 2;
  inline const ::std::string& serverinfo() const;
  inline void set_serverinfo(const ::std::string& value);
  inline void set_serverinfo(const char* value);
  inline void set_serverinfo(const char* value, size_t size);
  inline ::std::string* mutable_serverinfo();
  inline ::std::string* release_serverinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.LGRegisterLoginMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_serverinfo();
  inline void clear_has_serverinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* serverinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static LGRegisterLoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLoginMessage : public ::google::protobuf::Message {
 public:
  ReqLoginMessage();
  virtual ~ReqLoginMessage();
  
  ReqLoginMessage(const ReqLoginMessage& from);
  
  inline ReqLoginMessage& operator=(const ReqLoginMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLoginMessage& default_instance();
  
  void Swap(ReqLoginMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLoginMessage& from);
  void MergeFrom(const ReqLoginMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLogin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required string platform = 3;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 3;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  
  // optional string username = 4;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 4;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // optional string password = 5;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 5;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // optional string verify = 6;
  inline bool has_verify() const;
  inline void clear_verify();
  static const int kVerifyFieldNumber = 6;
  inline const ::std::string& verify() const;
  inline void set_verify(const ::std::string& value);
  inline void set_verify(const char* value);
  inline void set_verify(const char* value, size_t size);
  inline ::std::string* mutable_verify();
  inline ::std::string* release_verify();
  
  // optional string mac64 = 7;
  inline bool has_mac64() const;
  inline void clear_mac64();
  static const int kMac64FieldNumber = 7;
  inline const ::std::string& mac64() const;
  inline void set_mac64(const ::std::string& value);
  inline void set_mac64(const char* value);
  inline void set_mac64(const char* value, size_t size);
  inline ::std::string* mutable_mac64();
  inline ::std::string* release_mac64();
  
  // optional string os = 8;
  inline bool has_os() const;
  inline void clear_os();
  static const int kOsFieldNumber = 8;
  inline const ::std::string& os() const;
  inline void set_os(const ::std::string& value);
  inline void set_os(const char* value);
  inline void set_os(const char* value, size_t size);
  inline ::std::string* mutable_os();
  inline ::std::string* release_os();
  
  // optional string version = 9;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 9;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  
  // optional string fr = 10;
  inline bool has_fr() const;
  inline void clear_fr();
  static const int kFrFieldNumber = 10;
  inline const ::std::string& fr() const;
  inline void set_fr(const ::std::string& value);
  inline void set_fr(const char* value);
  inline void set_fr(const char* value, size_t size);
  inline ::std::string* mutable_fr();
  inline ::std::string* release_fr();
  
  // optional string uuid = 11;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 11;
  inline const ::std::string& uuid() const;
  inline void set_uuid(const ::std::string& value);
  inline void set_uuid(const char* value);
  inline void set_uuid(const char* value, size_t size);
  inline ::std::string* mutable_uuid();
  inline ::std::string* release_uuid();
  
  // optional string uutoken = 12;
  inline bool has_uutoken() const;
  inline void clear_uutoken();
  static const int kUutokenFieldNumber = 12;
  inline const ::std::string& uutoken() const;
  inline void set_uutoken(const ::std::string& value);
  inline void set_uutoken(const char* value);
  inline void set_uutoken(const char* value, size_t size);
  inline ::std::string* mutable_uutoken();
  inline ::std::string* release_uutoken();
  
  // optional string uuchannel = 13;
  inline bool has_uuchannel() const;
  inline void clear_uuchannel();
  static const int kUuchannelFieldNumber = 13;
  inline const ::std::string& uuchannel() const;
  inline void set_uuchannel(const ::std::string& value);
  inline void set_uuchannel(const char* value);
  inline void set_uuchannel(const char* value, size_t size);
  inline ::std::string* mutable_uuchannel();
  inline ::std::string* release_uuchannel();
  
  // optional int32 gameId = 14;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 14;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLoginMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_verify();
  inline void clear_has_verify();
  inline void set_has_mac64();
  inline void clear_has_mac64();
  inline void set_has_os();
  inline void clear_has_os();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_fr();
  inline void clear_has_fr();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_uutoken();
  inline void clear_has_uutoken();
  inline void set_has_uuchannel();
  inline void clear_has_uuchannel();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* platform_;
  ::std::string* username_;
  ::std::string* password_;
  ::std::string* verify_;
  ::std::string* mac64_;
  ::std::string* os_;
  ::std::string* version_;
  ::std::string* fr_;
  ::std::string* uuid_;
  ::std::string* uutoken_;
  ::std::string* uuchannel_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResLoginMessage : public ::google::protobuf::Message {
 public:
  ResLoginMessage();
  virtual ~ResLoginMessage();
  
  ResLoginMessage(const ResLoginMessage& from);
  
  inline ResLoginMessage& operator=(const ResLoginMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResLoginMessage& default_instance();
  
  void Swap(ResLoginMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResLoginMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResLoginMessage& from);
  void MergeFrom(const ResLoginMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResLogin];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  
  // optional .com.game.proto.PlayerInfo playerInfo = 3;
  inline bool has_playerinfo() const;
  inline void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 3;
  inline const ::com::game::proto::PlayerInfo& playerinfo() const;
  inline ::com::game::proto::PlayerInfo* mutable_playerinfo();
  inline ::com::game::proto::PlayerInfo* release_playerinfo();
  
  // optional string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // repeated string serverlist = 5;
  inline int serverlist_size() const;
  inline void clear_serverlist();
  static const int kServerlistFieldNumber = 5;
  inline const ::std::string& serverlist(int index) const;
  inline ::std::string* mutable_serverlist(int index);
  inline void set_serverlist(int index, const ::std::string& value);
  inline void set_serverlist(int index, const char* value);
  inline void set_serverlist(int index, const char* value, size_t size);
  inline ::std::string* add_serverlist();
  inline void add_serverlist(const ::std::string& value);
  inline void add_serverlist(const char* value);
  inline void add_serverlist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& serverlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_serverlist();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResLoginMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_playerinfo();
  inline void clear_has_playerinfo();
  inline void set_has_password();
  inline void clear_has_password();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* error_;
  ::com::game::proto::PlayerInfo* playerinfo_;
  ::std::string* password_;
  ::google::protobuf::RepeatedPtrField< ::std::string> serverlist_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResLoginMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResUpdateServerInfoMessage : public ::google::protobuf::Message {
 public:
  ResUpdateServerInfoMessage();
  virtual ~ResUpdateServerInfoMessage();
  
  ResUpdateServerInfoMessage(const ResUpdateServerInfoMessage& from);
  
  inline ResUpdateServerInfoMessage& operator=(const ResUpdateServerInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResUpdateServerInfoMessage& default_instance();
  
  void Swap(ResUpdateServerInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResUpdateServerInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResUpdateServerInfoMessage& from);
  void MergeFrom(const ResUpdateServerInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateServerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string serverInfo = 2;
  inline bool has_serverinfo() const;
  inline void clear_serverinfo();
  static const int kServerInfoFieldNumber = 2;
  inline const ::std::string& serverinfo() const;
  inline void set_serverinfo(const ::std::string& value);
  inline void set_serverinfo(const char* value);
  inline void set_serverinfo(const char* value, size_t size);
  inline ::std::string* mutable_serverinfo();
  inline ::std::string* release_serverinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResUpdateServerInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_serverinfo();
  inline void clear_has_serverinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* serverinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResUpdateServerInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqHeartBeatMessage : public ::google::protobuf::Message {
 public:
  ReqHeartBeatMessage();
  virtual ~ReqHeartBeatMessage();
  
  ReqHeartBeatMessage(const ReqHeartBeatMessage& from);
  
  inline ReqHeartBeatMessage& operator=(const ReqHeartBeatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHeartBeatMessage& default_instance();
  
  void Swap(ReqHeartBeatMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqHeartBeatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHeartBeatMessage& from);
  void MergeFrom(const ReqHeartBeatMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHeartBeat];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int64 dwTime = 2;
  inline bool has_dwtime() const;
  inline void clear_dwtime();
  static const int kDwTimeFieldNumber = 2;
  inline ::google::protobuf::int64 dwtime() const;
  inline void set_dwtime(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqHeartBeatMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_dwtime();
  inline void clear_has_dwtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 dwtime_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqHeartBeatMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResHeartBeatMessage : public ::google::protobuf::Message {
 public:
  ResHeartBeatMessage();
  virtual ~ResHeartBeatMessage();
  
  ResHeartBeatMessage(const ResHeartBeatMessage& from);
  
  inline ResHeartBeatMessage& operator=(const ResHeartBeatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResHeartBeatMessage& default_instance();
  
  void Swap(ResHeartBeatMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResHeartBeatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResHeartBeatMessage& from);
  void MergeFrom(const ResHeartBeatMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResHeartBeat];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int64 dwTime = 2;
  inline bool has_dwtime() const;
  inline void clear_dwtime();
  static const int kDwTimeFieldNumber = 2;
  inline ::google::protobuf::int64 dwtime() const;
  inline void set_dwtime(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResHeartBeatMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_dwtime();
  inline void clear_has_dwtime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 dwtime_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResHeartBeatMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBindUserMessage : public ::google::protobuf::Message {
 public:
  ReqBindUserMessage();
  virtual ~ReqBindUserMessage();
  
  ReqBindUserMessage(const ReqBindUserMessage& from);
  
  inline ReqBindUserMessage& operator=(const ReqBindUserMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBindUserMessage& default_instance();
  
  void Swap(ReqBindUserMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBindUserMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBindUserMessage& from);
  void MergeFrom(const ReqBindUserMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindUser];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string deviceUniqueIdentifier = 2;
  inline bool has_deviceuniqueidentifier() const;
  inline void clear_deviceuniqueidentifier();
  static const int kDeviceUniqueIdentifierFieldNumber = 2;
  inline const ::std::string& deviceuniqueidentifier() const;
  inline void set_deviceuniqueidentifier(const ::std::string& value);
  inline void set_deviceuniqueidentifier(const char* value);
  inline void set_deviceuniqueidentifier(const char* value, size_t size);
  inline ::std::string* mutable_deviceuniqueidentifier();
  inline ::std::string* release_deviceuniqueidentifier();
  
  // optional string username = 3;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 3;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // optional string password1 = 4;
  inline bool has_password1() const;
  inline void clear_password1();
  static const int kPassword1FieldNumber = 4;
  inline const ::std::string& password1() const;
  inline void set_password1(const ::std::string& value);
  inline void set_password1(const char* value);
  inline void set_password1(const char* value, size_t size);
  inline ::std::string* mutable_password1();
  inline ::std::string* release_password1();
  
  // optional string password2 = 5;
  inline bool has_password2() const;
  inline void clear_password2();
  static const int kPassword2FieldNumber = 5;
  inline const ::std::string& password2() const;
  inline void set_password2(const ::std::string& value);
  inline void set_password2(const char* value);
  inline void set_password2(const char* value, size_t size);
  inline ::std::string* mutable_password2();
  inline ::std::string* release_password2();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBindUserMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_deviceuniqueidentifier();
  inline void clear_has_deviceuniqueidentifier();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password1();
  inline void clear_has_password1();
  inline void set_has_password2();
  inline void clear_has_password2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* deviceuniqueidentifier_;
  ::std::string* username_;
  ::std::string* password1_;
  ::std::string* password2_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBindUserMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResBindUserMessage : public ::google::protobuf::Message {
 public:
  ResBindUserMessage();
  virtual ~ResBindUserMessage();
  
  ResBindUserMessage(const ResBindUserMessage& from);
  
  inline ResBindUserMessage& operator=(const ResBindUserMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBindUserMessage& default_instance();
  
  void Swap(ResBindUserMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBindUserMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBindUserMessage& from);
  void MergeFrom(const ResBindUserMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindUser];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBindUserMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBindUserMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBindPhoneMessage : public ::google::protobuf::Message {
 public:
  ReqBindPhoneMessage();
  virtual ~ReqBindPhoneMessage();
  
  ReqBindPhoneMessage(const ReqBindPhoneMessage& from);
  
  inline ReqBindPhoneMessage& operator=(const ReqBindPhoneMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBindPhoneMessage& default_instance();
  
  void Swap(ReqBindPhoneMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBindPhoneMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBindPhoneMessage& from);
  void MergeFrom(const ReqBindPhoneMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindPhone];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string verify = 3;
  inline bool has_verify() const;
  inline void clear_verify();
  static const int kVerifyFieldNumber = 3;
  inline const ::std::string& verify() const;
  inline void set_verify(const ::std::string& value);
  inline void set_verify(const char* value);
  inline void set_verify(const char* value, size_t size);
  inline ::std::string* mutable_verify();
  inline ::std::string* release_verify();
  
  // optional string password = 4;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 4;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // optional string phone = 5;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 5;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  
  // optional int64 referrerID = 6;
  inline bool has_referrerid() const;
  inline void clear_referrerid();
  static const int kReferrerIDFieldNumber = 6;
  inline ::google::protobuf::int64 referrerid() const;
  inline void set_referrerid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBindPhoneMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_verify();
  inline void clear_has_verify();
  inline void set_has_password();
  inline void clear_has_password();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_referrerid();
  inline void clear_has_referrerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* verify_;
  ::std::string* password_;
  ::std::string* phone_;
  ::google::protobuf::int64 referrerid_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBindPhoneMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResBindPhoneMessage : public ::google::protobuf::Message {
 public:
  ResBindPhoneMessage();
  virtual ~ResBindPhoneMessage();
  
  ResBindPhoneMessage(const ResBindPhoneMessage& from);
  
  inline ResBindPhoneMessage& operator=(const ResBindPhoneMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBindPhoneMessage& default_instance();
  
  void Swap(ResBindPhoneMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBindPhoneMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBindPhoneMessage& from);
  void MergeFrom(const ResBindPhoneMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindPhone];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBindPhoneMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBindPhoneMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBindZFBMessage : public ::google::protobuf::Message {
 public:
  ReqBindZFBMessage();
  virtual ~ReqBindZFBMessage();
  
  ReqBindZFBMessage(const ReqBindZFBMessage& from);
  
  inline ReqBindZFBMessage& operator=(const ReqBindZFBMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBindZFBMessage& default_instance();
  
  void Swap(ReqBindZFBMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBindZFBMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBindZFBMessage& from);
  void MergeFrom(const ReqBindZFBMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindZFB];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBindZFBMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_account();
  inline void clear_has_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* account_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBindZFBMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResBindZFBMessage : public ::google::protobuf::Message {
 public:
  ResBindZFBMessage();
  virtual ~ResBindZFBMessage();
  
  ResBindZFBMessage(const ResBindZFBMessage& from);
  
  inline ResBindZFBMessage& operator=(const ResBindZFBMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBindZFBMessage& default_instance();
  
  void Swap(ResBindZFBMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBindZFBMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBindZFBMessage& from);
  void MergeFrom(const ResBindZFBMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindZFB];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string account = 4;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 4;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBindZFBMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_account();
  inline void clear_has_account();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 code_;
  ::std::string* name_;
  ::std::string* account_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBindZFBMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqCanEnterSubGameMessage : public ::google::protobuf::Message {
 public:
  ReqCanEnterSubGameMessage();
  virtual ~ReqCanEnterSubGameMessage();
  
  ReqCanEnterSubGameMessage(const ReqCanEnterSubGameMessage& from);
  
  inline ReqCanEnterSubGameMessage& operator=(const ReqCanEnterSubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCanEnterSubGameMessage& default_instance();
  
  void Swap(ReqCanEnterSubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqCanEnterSubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCanEnterSubGameMessage& from);
  void MergeFrom(const ReqCanEnterSubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCanEnterSubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqCanEnterSubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqCanEnterSubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResCanEnterSubGameMessage : public ::google::protobuf::Message {
 public:
  ResCanEnterSubGameMessage();
  virtual ~ResCanEnterSubGameMessage();
  
  ResCanEnterSubGameMessage(const ResCanEnterSubGameMessage& from);
  
  inline ResCanEnterSubGameMessage& operator=(const ResCanEnterSubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResCanEnterSubGameMessage& default_instance();
  
  void Swap(ResCanEnterSubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResCanEnterSubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResCanEnterSubGameMessage& from);
  void MergeFrom(const ResCanEnterSubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResCanEnterSubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResCanEnterSubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResCanEnterSubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLogin4SubGameMessage : public ::google::protobuf::Message {
 public:
  ReqLogin4SubGameMessage();
  virtual ~ReqLogin4SubGameMessage();
  
  ReqLogin4SubGameMessage(const ReqLogin4SubGameMessage& from);
  
  inline ReqLogin4SubGameMessage& operator=(const ReqLogin4SubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLogin4SubGameMessage& default_instance();
  
  void Swap(ReqLogin4SubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLogin4SubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLogin4SubGameMessage& from);
  void MergeFrom(const ReqLogin4SubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLogin4SubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // optional int32 isReconnect = 3;
  inline bool has_isreconnect() const;
  inline void clear_isreconnect();
  static const int kIsReconnectFieldNumber = 3;
  inline ::google::protobuf::int32 isreconnect() const;
  inline void set_isreconnect(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLogin4SubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_isreconnect();
  inline void clear_has_isreconnect();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::int32 isreconnect_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLogin4SubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqPhoneVerifyMessage : public ::google::protobuf::Message {
 public:
  ReqPhoneVerifyMessage();
  virtual ~ReqPhoneVerifyMessage();
  
  ReqPhoneVerifyMessage(const ReqPhoneVerifyMessage& from);
  
  inline ReqPhoneVerifyMessage& operator=(const ReqPhoneVerifyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPhoneVerifyMessage& default_instance();
  
  void Swap(ReqPhoneVerifyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqPhoneVerifyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPhoneVerifyMessage& from);
  void MergeFrom(const ReqPhoneVerifyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPhoneVerify];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string phone = 2;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 2;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  
  // required bool isLogin = 3;
  inline bool has_islogin() const;
  inline void clear_islogin();
  static const int kIsLoginFieldNumber = 3;
  inline bool islogin() const;
  inline void set_islogin(bool value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqPhoneVerifyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_islogin();
  inline void clear_has_islogin();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* phone_;
  int msgid_;
  bool islogin_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqPhoneVerifyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResLogin4SubGameMessage : public ::google::protobuf::Message {
 public:
  ResLogin4SubGameMessage();
  virtual ~ResLogin4SubGameMessage();
  
  ResLogin4SubGameMessage(const ResLogin4SubGameMessage& from);
  
  inline ResLogin4SubGameMessage& operator=(const ResLogin4SubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResLogin4SubGameMessage& default_instance();
  
  void Swap(ResLogin4SubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResLogin4SubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResLogin4SubGameMessage& from);
  void MergeFrom(const ResLogin4SubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResLogin4SubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string error = 2;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 2;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  
  // optional int32 gameId = 3;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 3;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // optional int32 isReconnect = 4;
  inline bool has_isreconnect() const;
  inline void clear_isreconnect();
  static const int kIsReconnectFieldNumber = 4;
  inline ::google::protobuf::int32 isreconnect() const;
  inline void set_isreconnect(::google::protobuf::int32 value);
  
  // optional int32 mapModelId = 5;
  inline bool has_mapmodelid() const;
  inline void clear_mapmodelid();
  static const int kMapModelIdFieldNumber = 5;
  inline ::google::protobuf::int32 mapmodelid() const;
  inline void set_mapmodelid(::google::protobuf::int32 value);
  
  // optional string fishIp = 6;
  inline bool has_fiship() const;
  inline void clear_fiship();
  static const int kFishIpFieldNumber = 6;
  inline const ::std::string& fiship() const;
  inline void set_fiship(const ::std::string& value);
  inline void set_fiship(const char* value);
  inline void set_fiship(const char* value, size_t size);
  inline ::std::string* mutable_fiship();
  inline ::std::string* release_fiship();
  
  // optional int32 fishPort = 7;
  inline bool has_fishport() const;
  inline void clear_fishport();
  static const int kFishPortFieldNumber = 7;
  inline ::google::protobuf::int32 fishport() const;
  inline void set_fishport(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResLogin4SubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_isreconnect();
  inline void clear_has_isreconnect();
  inline void set_has_mapmodelid();
  inline void clear_has_mapmodelid();
  inline void set_has_fiship();
  inline void clear_has_fiship();
  inline void set_has_fishport();
  inline void clear_has_fishport();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* error_;
  int msgid_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::int32 isreconnect_;
  ::google::protobuf::int32 mapmodelid_;
  ::std::string* fiship_;
  ::google::protobuf::int32 fishport_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResLogin4SubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqQuit4SubGameMessage : public ::google::protobuf::Message {
 public:
  ReqQuit4SubGameMessage();
  virtual ~ReqQuit4SubGameMessage();
  
  ReqQuit4SubGameMessage(const ReqQuit4SubGameMessage& from);
  
  inline ReqQuit4SubGameMessage& operator=(const ReqQuit4SubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqQuit4SubGameMessage& default_instance();
  
  void Swap(ReqQuit4SubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqQuit4SubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqQuit4SubGameMessage& from);
  void MergeFrom(const ReqQuit4SubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqQuit4SubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqQuit4SubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqQuit4SubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResQuit4SubGameMessage : public ::google::protobuf::Message {
 public:
  ResQuit4SubGameMessage();
  virtual ~ResQuit4SubGameMessage();
  
  ResQuit4SubGameMessage(const ResQuit4SubGameMessage& from);
  
  inline ResQuit4SubGameMessage& operator=(const ResQuit4SubGameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResQuit4SubGameMessage& default_instance();
  
  void Swap(ResQuit4SubGameMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResQuit4SubGameMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResQuit4SubGameMessage& from);
  void MergeFrom(const ResQuit4SubGameMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResQuit4SubGame];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResQuit4SubGameMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResQuit4SubGameMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResUpdateMoney1Message : public ::google::protobuf::Message {
 public:
  ResUpdateMoney1Message();
  virtual ~ResUpdateMoney1Message();
  
  ResUpdateMoney1Message(const ResUpdateMoney1Message& from);
  
  inline ResUpdateMoney1Message& operator=(const ResUpdateMoney1Message& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResUpdateMoney1Message& default_instance();
  
  void Swap(ResUpdateMoney1Message* other);
  
  // implements Message ----------------------------------------------
  
  ResUpdateMoney1Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResUpdateMoney1Message& from);
  void MergeFrom(const ResUpdateMoney1Message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateMoney1];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required double money1 = 2;
  inline bool has_money1() const;
  inline void clear_money1();
  static const int kMoney1FieldNumber = 2;
  inline double money1() const;
  inline void set_money1(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResUpdateMoney1Message)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_money1();
  inline void clear_has_money1();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double money1_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResUpdateMoney1Message* default_instance_;
};
// -------------------------------------------------------------------

class ResUpdateMoney2Message : public ::google::protobuf::Message {
 public:
  ResUpdateMoney2Message();
  virtual ~ResUpdateMoney2Message();
  
  ResUpdateMoney2Message(const ResUpdateMoney2Message& from);
  
  inline ResUpdateMoney2Message& operator=(const ResUpdateMoney2Message& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResUpdateMoney2Message& default_instance();
  
  void Swap(ResUpdateMoney2Message* other);
  
  // implements Message ----------------------------------------------
  
  ResUpdateMoney2Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResUpdateMoney2Message& from);
  void MergeFrom(const ResUpdateMoney2Message& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateMoney2];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required double money2 = 2;
  inline bool has_money2() const;
  inline void clear_money2();
  static const int kMoney2FieldNumber = 2;
  inline double money2() const;
  inline void set_money2(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResUpdateMoney2Message)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_money2();
  inline void clear_has_money2();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double money2_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResUpdateMoney2Message* default_instance_;
};
// -------------------------------------------------------------------

class ReqClientLoadstringMessage : public ::google::protobuf::Message {
 public:
  ReqClientLoadstringMessage();
  virtual ~ReqClientLoadstringMessage();
  
  ReqClientLoadstringMessage(const ReqClientLoadstringMessage& from);
  
  inline ReqClientLoadstringMessage& operator=(const ReqClientLoadstringMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClientLoadstringMessage& default_instance();
  
  void Swap(ReqClientLoadstringMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqClientLoadstringMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClientLoadstringMessage& from);
  void MergeFrom(const ReqClientLoadstringMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqClientLoadstring];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string luals = 2;
  inline bool has_luals() const;
  inline void clear_luals();
  static const int kLualsFieldNumber = 2;
  inline const ::std::string& luals() const;
  inline void set_luals(const ::std::string& value);
  inline void set_luals(const char* value);
  inline void set_luals(const char* value, size_t size);
  inline ::std::string* mutable_luals();
  inline ::std::string* release_luals();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqClientLoadstringMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_luals();
  inline void clear_has_luals();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* luals_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqClientLoadstringMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResClientLoadstringMessage : public ::google::protobuf::Message {
 public:
  ResClientLoadstringMessage();
  virtual ~ResClientLoadstringMessage();
  
  ResClientLoadstringMessage(const ResClientLoadstringMessage& from);
  
  inline ResClientLoadstringMessage& operator=(const ResClientLoadstringMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResClientLoadstringMessage& default_instance();
  
  void Swap(ResClientLoadstringMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResClientLoadstringMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResClientLoadstringMessage& from);
  void MergeFrom(const ResClientLoadstringMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResClientLoadstring];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string luals = 2;
  inline bool has_luals() const;
  inline void clear_luals();
  static const int kLualsFieldNumber = 2;
  inline const ::std::string& luals() const;
  inline void set_luals(const ::std::string& value);
  inline void set_luals(const char* value);
  inline void set_luals(const char* value, size_t size);
  inline ::std::string* mutable_luals();
  inline ::std::string* release_luals();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResClientLoadstringMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_luals();
  inline void clear_has_luals();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* luals_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResClientLoadstringMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqChatMessage : public ::google::protobuf::Message {
 public:
  ReqChatMessage();
  virtual ~ReqChatMessage();
  
  ReqChatMessage(const ReqChatMessage& from);
  
  inline ReqChatMessage& operator=(const ReqChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChatMessage& default_instance();
  
  void Swap(ReqChatMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqChatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChatMessage& from);
  void MergeFrom(const ReqChatMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChat];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 chatType = 2;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChatTypeFieldNumber = 2;
  inline ::google::protobuf::int32 chattype() const;
  inline void set_chattype(::google::protobuf::int32 value);
  
  // optional int64 toPlayerId = 3;
  inline bool has_toplayerid() const;
  inline void clear_toplayerid();
  static const int kToPlayerIdFieldNumber = 3;
  inline ::google::protobuf::int64 toplayerid() const;
  inline void set_toplayerid(::google::protobuf::int64 value);
  
  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqChatMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_toplayerid();
  inline void clear_has_toplayerid();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 chattype_;
  ::google::protobuf::int64 toplayerid_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResChatMessage : public ::google::protobuf::Message {
 public:
  ResChatMessage();
  virtual ~ResChatMessage();
  
  ResChatMessage(const ResChatMessage& from);
  
  inline ResChatMessage& operator=(const ResChatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResChatMessage& default_instance();
  
  void Swap(ResChatMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResChatMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResChatMessage& from);
  void MergeFrom(const ResChatMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResChat];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 chatType = 2;
  inline bool has_chattype() const;
  inline void clear_chattype();
  static const int kChatTypeFieldNumber = 2;
  inline ::google::protobuf::int32 chattype() const;
  inline void set_chattype(::google::protobuf::int32 value);
  
  // optional int64 toPlayerId = 3;
  inline bool has_toplayerid() const;
  inline void clear_toplayerid();
  static const int kToPlayerIdFieldNumber = 3;
  inline ::google::protobuf::int64 toplayerid() const;
  inline void set_toplayerid(::google::protobuf::int64 value);
  
  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // optional int32 vip = 6;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 6;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int64 playerId = 8;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 8;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResChatMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_chattype();
  inline void clear_has_chattype();
  inline void set_has_toplayerid();
  inline void clear_has_toplayerid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 chattype_;
  ::google::protobuf::int64 toplayerid_;
  ::std::string* content_;
  ::std::string* icon_;
  ::std::string* name_;
  ::google::protobuf::int64 playerid_;
  ::google::protobuf::int32 vip_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResChatMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqTopListDataMessage : public ::google::protobuf::Message {
 public:
  ReqTopListDataMessage();
  virtual ~ReqTopListDataMessage();
  
  ReqTopListDataMessage(const ReqTopListDataMessage& from);
  
  inline ReqTopListDataMessage& operator=(const ReqTopListDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTopListDataMessage& default_instance();
  
  void Swap(ReqTopListDataMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqTopListDataMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTopListDataMessage& from);
  void MergeFrom(const ReqTopListDataMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTopListData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqTopListDataMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqTopListDataMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResTopListDataMessage : public ::google::protobuf::Message {
 public:
  ResTopListDataMessage();
  virtual ~ResTopListDataMessage();
  
  ResTopListDataMessage(const ResTopListDataMessage& from);
  
  inline ResTopListDataMessage& operator=(const ResTopListDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResTopListDataMessage& default_instance();
  
  void Swap(ResTopListDataMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResTopListDataMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResTopListDataMessage& from);
  void MergeFrom(const ResTopListDataMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResTopListData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // repeated .com.game.proto.MoneyTopData moneyTopData = 3;
  inline int moneytopdata_size() const;
  inline void clear_moneytopdata();
  static const int kMoneyTopDataFieldNumber = 3;
  inline const ::com::game::proto::MoneyTopData& moneytopdata(int index) const;
  inline ::com::game::proto::MoneyTopData* mutable_moneytopdata(int index);
  inline ::com::game::proto::MoneyTopData* add_moneytopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MoneyTopData >&
      moneytopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MoneyTopData >*
      mutable_moneytopdata();
  
  // repeated .com.game.proto.CharmTopData charmTopData = 4;
  inline int charmtopdata_size() const;
  inline void clear_charmtopdata();
  static const int kCharmTopDataFieldNumber = 4;
  inline const ::com::game::proto::CharmTopData& charmtopdata(int index) const;
  inline ::com::game::proto::CharmTopData* mutable_charmtopdata(int index);
  inline ::com::game::proto::CharmTopData* add_charmtopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::CharmTopData >&
      charmtopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::CharmTopData >*
      mutable_charmtopdata();
  
  // repeated .com.game.proto.OnlineTopData onlineTopData = 5;
  inline int onlinetopdata_size() const;
  inline void clear_onlinetopdata();
  static const int kOnlineTopDataFieldNumber = 5;
  inline const ::com::game::proto::OnlineTopData& onlinetopdata(int index) const;
  inline ::com::game::proto::OnlineTopData* mutable_onlinetopdata(int index);
  inline ::com::game::proto::OnlineTopData* add_onlinetopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::OnlineTopData >&
      onlinetopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::OnlineTopData >*
      mutable_onlinetopdata();
  
  // repeated .com.game.proto.TotalMoneyTopData totalMoneyTopData = 6;
  inline int totalmoneytopdata_size() const;
  inline void clear_totalmoneytopdata();
  static const int kTotalMoneyTopDataFieldNumber = 6;
  inline const ::com::game::proto::TotalMoneyTopData& totalmoneytopdata(int index) const;
  inline ::com::game::proto::TotalMoneyTopData* mutable_totalmoneytopdata(int index);
  inline ::com::game::proto::TotalMoneyTopData* add_totalmoneytopdata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::TotalMoneyTopData >&
      totalmoneytopdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::TotalMoneyTopData >*
      mutable_totalmoneytopdata();
  
  // optional double selfWin = 7;
  inline bool has_selfwin() const;
  inline void clear_selfwin();
  static const int kSelfWinFieldNumber = 7;
  inline double selfwin() const;
  inline void set_selfwin(double value);
  
  // optional int32 selfCharm = 8;
  inline bool has_selfcharm() const;
  inline void clear_selfcharm();
  static const int kSelfCharmFieldNumber = 8;
  inline ::google::protobuf::int32 selfcharm() const;
  inline void set_selfcharm(::google::protobuf::int32 value);
  
  // optional int64 selfOnlineTime = 9;
  inline bool has_selfonlinetime() const;
  inline void clear_selfonlinetime();
  static const int kSelfOnlineTimeFieldNumber = 9;
  inline ::google::protobuf::int64 selfonlinetime() const;
  inline void set_selfonlinetime(::google::protobuf::int64 value);
  
  // optional double selfTotalMoney = 10;
  inline bool has_selftotalmoney() const;
  inline void clear_selftotalmoney();
  static const int kSelfTotalMoneyFieldNumber = 10;
  inline double selftotalmoney() const;
  inline void set_selftotalmoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResTopListDataMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_selfwin();
  inline void clear_has_selfwin();
  inline void set_has_selfcharm();
  inline void clear_has_selfcharm();
  inline void set_has_selfonlinetime();
  inline void clear_has_selfonlinetime();
  inline void set_has_selftotalmoney();
  inline void clear_has_selftotalmoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::MoneyTopData > moneytopdata_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::CharmTopData > charmtopdata_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::OnlineTopData > onlinetopdata_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::TotalMoneyTopData > totalmoneytopdata_;
  double selfwin_;
  ::google::protobuf::int64 selfonlinetime_;
  double selftotalmoney_;
  ::google::protobuf::int32 selfcharm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResTopListDataMessage* default_instance_;
};
// -------------------------------------------------------------------

class MoneyTopData : public ::google::protobuf::Message {
 public:
  MoneyTopData();
  virtual ~MoneyTopData();
  
  MoneyTopData(const MoneyTopData& from);
  
  inline MoneyTopData& operator=(const MoneyTopData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyTopData& default_instance();
  
  void Swap(MoneyTopData* other);
  
  // implements Message ----------------------------------------------
  
  MoneyTopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyTopData& from);
  void MergeFrom(const MoneyTopData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);
  
  // required double money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline double money() const;
  inline void set_money(double value);
  
  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // required int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // required int32 vip = 7;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 7;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // required int32 headIcon = 8;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 8;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.MoneyTopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_headicon();
  inline void clear_has_headicon();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  double money_;
  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 sex_;
  ::std::string* icon_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 headicon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyTopData* default_instance_;
};
// -------------------------------------------------------------------

class CharmTopData : public ::google::protobuf::Message {
 public:
  CharmTopData();
  virtual ~CharmTopData();
  
  CharmTopData(const CharmTopData& from);
  
  inline CharmTopData& operator=(const CharmTopData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CharmTopData& default_instance();
  
  void Swap(CharmTopData* other);
  
  // implements Message ----------------------------------------------
  
  CharmTopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharmTopData& from);
  void MergeFrom(const CharmTopData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);
  
  // required int32 charm = 3;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 3;
  inline ::google::protobuf::int32 charm() const;
  inline void set_charm(::google::protobuf::int32 value);
  
  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // required int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // required int32 vip = 7;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 7;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // required int32 headIcon = 8;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 8;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.CharmTopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_headicon();
  inline void clear_has_headicon();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 charm_;
  ::std::string* name_;
  ::std::string* icon_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 headicon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static CharmTopData* default_instance_;
};
// -------------------------------------------------------------------

class OnlineTopData : public ::google::protobuf::Message {
 public:
  OnlineTopData();
  virtual ~OnlineTopData();
  
  OnlineTopData(const OnlineTopData& from);
  
  inline OnlineTopData& operator=(const OnlineTopData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineTopData& default_instance();
  
  void Swap(OnlineTopData* other);
  
  // implements Message ----------------------------------------------
  
  OnlineTopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OnlineTopData& from);
  void MergeFrom(const OnlineTopData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);
  
  // required int64 onlineTime = 3;
  inline bool has_onlinetime() const;
  inline void clear_onlinetime();
  static const int kOnlineTimeFieldNumber = 3;
  inline ::google::protobuf::int64 onlinetime() const;
  inline void set_onlinetime(::google::protobuf::int64 value);
  
  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // required int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // required int32 vip = 7;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 7;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // required double totalMoney = 8;
  inline bool has_totalmoney() const;
  inline void clear_totalmoney();
  static const int kTotalMoneyFieldNumber = 8;
  inline double totalmoney() const;
  inline void set_totalmoney(double value);
  
  // required int32 headIcon = 9;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 9;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.OnlineTopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_onlinetime();
  inline void clear_has_onlinetime();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_totalmoney();
  inline void clear_has_totalmoney();
  inline void set_has_headicon();
  inline void clear_has_headicon();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 onlinetime_;
  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 sex_;
  ::std::string* icon_;
  double totalmoney_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 headicon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static OnlineTopData* default_instance_;
};
// -------------------------------------------------------------------

class TotalMoneyTopData : public ::google::protobuf::Message {
 public:
  TotalMoneyTopData();
  virtual ~TotalMoneyTopData();
  
  TotalMoneyTopData(const TotalMoneyTopData& from);
  
  inline TotalMoneyTopData& operator=(const TotalMoneyTopData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TotalMoneyTopData& default_instance();
  
  void Swap(TotalMoneyTopData* other);
  
  // implements Message ----------------------------------------------
  
  TotalMoneyTopData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TotalMoneyTopData& from);
  void MergeFrom(const TotalMoneyTopData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // required int32 rank = 2;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::int32 rank() const;
  inline void set_rank(::google::protobuf::int32 value);
  
  // required double totalMoney = 3;
  inline bool has_totalmoney() const;
  inline void clear_totalmoney();
  static const int kTotalMoneyFieldNumber = 3;
  inline double totalmoney() const;
  inline void set_totalmoney(double value);
  
  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required string icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // required int32 sex = 6;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 6;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // required int32 vip = 7;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 7;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // required int32 charm = 8;
  inline bool has_charm() const;
  inline void clear_charm();
  static const int kCharmFieldNumber = 8;
  inline ::google::protobuf::int32 charm() const;
  inline void set_charm(::google::protobuf::int32 value);
  
  // required int32 headIcon = 9;
  inline bool has_headicon() const;
  inline void clear_headicon();
  static const int kHeadIconFieldNumber = 9;
  inline ::google::protobuf::int32 headicon() const;
  inline void set_headicon(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.TotalMoneyTopData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_totalmoney();
  inline void clear_has_totalmoney();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_charm();
  inline void clear_has_charm();
  inline void set_has_headicon();
  inline void clear_has_headicon();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  double totalmoney_;
  ::std::string* name_;
  ::google::protobuf::int32 rank_;
  ::google::protobuf::int32 sex_;
  ::std::string* icon_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 charm_;
  ::google::protobuf::int32 headicon_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static TotalMoneyTopData* default_instance_;
};
// -------------------------------------------------------------------

class ReqGameRecordPanelMessage : public ::google::protobuf::Message {
 public:
  ReqGameRecordPanelMessage();
  virtual ~ReqGameRecordPanelMessage();
  
  ReqGameRecordPanelMessage(const ReqGameRecordPanelMessage& from);
  
  inline ReqGameRecordPanelMessage& operator=(const ReqGameRecordPanelMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGameRecordPanelMessage& default_instance();
  
  void Swap(ReqGameRecordPanelMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGameRecordPanelMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGameRecordPanelMessage& from);
  void MergeFrom(const ReqGameRecordPanelMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGameRecordPanel];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated int32 gameIds = 2;
  inline int gameids_size() const;
  inline void clear_gameids();
  static const int kGameIdsFieldNumber = 2;
  inline ::google::protobuf::int32 gameids(int index) const;
  inline void set_gameids(int index, ::google::protobuf::int32 value);
  inline void add_gameids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      gameids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_gameids();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGameRecordPanelMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > gameids_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGameRecordPanelMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResGameRecordPanelMessage : public ::google::protobuf::Message {
 public:
  ResGameRecordPanelMessage();
  virtual ~ResGameRecordPanelMessage();
  
  ResGameRecordPanelMessage(const ResGameRecordPanelMessage& from);
  
  inline ResGameRecordPanelMessage& operator=(const ResGameRecordPanelMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResGameRecordPanelMessage& default_instance();
  
  void Swap(ResGameRecordPanelMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResGameRecordPanelMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResGameRecordPanelMessage& from);
  void MergeFrom(const ResGameRecordPanelMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResGameRecordPanel];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional double maxWinMoney = 2;
  inline bool has_maxwinmoney() const;
  inline void clear_maxwinmoney();
  static const int kMaxWinMoneyFieldNumber = 2;
  inline double maxwinmoney() const;
  inline void set_maxwinmoney(double value);
  
  // repeated .com.game.proto.GameRecordPanelData gameRecordPanelDatas = 3;
  inline int gamerecordpaneldatas_size() const;
  inline void clear_gamerecordpaneldatas();
  static const int kGameRecordPanelDatasFieldNumber = 3;
  inline const ::com::game::proto::GameRecordPanelData& gamerecordpaneldatas(int index) const;
  inline ::com::game::proto::GameRecordPanelData* mutable_gamerecordpaneldatas(int index);
  inline ::com::game::proto::GameRecordPanelData* add_gamerecordpaneldatas();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordPanelData >&
      gamerecordpaneldatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordPanelData >*
      mutable_gamerecordpaneldatas();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResGameRecordPanelMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_maxwinmoney();
  inline void clear_has_maxwinmoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double maxwinmoney_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordPanelData > gamerecordpaneldatas_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResGameRecordPanelMessage* default_instance_;
};
// -------------------------------------------------------------------

class GameRecordPanelData : public ::google::protobuf::Message {
 public:
  GameRecordPanelData();
  virtual ~GameRecordPanelData();
  
  GameRecordPanelData(const GameRecordPanelData& from);
  
  inline GameRecordPanelData& operator=(const GameRecordPanelData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRecordPanelData& default_instance();
  
  void Swap(GameRecordPanelData* other);
  
  // implements Message ----------------------------------------------
  
  GameRecordPanelData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRecordPanelData& from);
  void MergeFrom(const GameRecordPanelData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 gameId = 1;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 1;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // optional double maxWinMoney = 2;
  inline bool has_maxwinmoney() const;
  inline void clear_maxwinmoney();
  static const int kMaxWinMoneyFieldNumber = 2;
  inline double maxwinmoney() const;
  inline void set_maxwinmoney(double value);
  
  // optional int32 winCount = 3;
  inline bool has_wincount() const;
  inline void clear_wincount();
  static const int kWinCountFieldNumber = 3;
  inline ::google::protobuf::int32 wincount() const;
  inline void set_wincount(::google::protobuf::int32 value);
  
  // optional int32 failCount = 4;
  inline bool has_failcount() const;
  inline void clear_failcount();
  static const int kFailCountFieldNumber = 4;
  inline ::google::protobuf::int32 failcount() const;
  inline void set_failcount(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.GameRecordPanelData)
 private:
  inline void set_has_gameid();
  inline void clear_has_gameid();
  inline void set_has_maxwinmoney();
  inline void clear_has_maxwinmoney();
  inline void set_has_wincount();
  inline void clear_has_wincount();
  inline void set_has_failcount();
  inline void clear_has_failcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double maxwinmoney_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::int32 wincount_;
  ::google::protobuf::int32 failcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static GameRecordPanelData* default_instance_;
};
// -------------------------------------------------------------------

class ReqGameRecordDataMessage : public ::google::protobuf::Message {
 public:
  ReqGameRecordDataMessage();
  virtual ~ReqGameRecordDataMessage();
  
  ReqGameRecordDataMessage(const ReqGameRecordDataMessage& from);
  
  inline ReqGameRecordDataMessage& operator=(const ReqGameRecordDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGameRecordDataMessage& default_instance();
  
  void Swap(ReqGameRecordDataMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGameRecordDataMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGameRecordDataMessage& from);
  void MergeFrom(const ReqGameRecordDataMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGameRecordData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGameRecordDataMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGameRecordDataMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResGameRecordMessage : public ::google::protobuf::Message {
 public:
  ResGameRecordMessage();
  virtual ~ResGameRecordMessage();
  
  ResGameRecordMessage(const ResGameRecordMessage& from);
  
  inline ResGameRecordMessage& operator=(const ResGameRecordMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResGameRecordMessage& default_instance();
  
  void Swap(ResGameRecordMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResGameRecordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResGameRecordMessage& from);
  void MergeFrom(const ResGameRecordMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResGameRecordData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 gameId = 2;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameIdFieldNumber = 2;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // repeated .com.game.proto.GameRecordData gameRecordDatas = 3;
  inline int gamerecorddatas_size() const;
  inline void clear_gamerecorddatas();
  static const int kGameRecordDatasFieldNumber = 3;
  inline const ::com::game::proto::GameRecordData& gamerecorddatas(int index) const;
  inline ::com::game::proto::GameRecordData* mutable_gamerecorddatas(int index);
  inline ::com::game::proto::GameRecordData* add_gamerecorddatas();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordData >&
      gamerecorddatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordData >*
      mutable_gamerecorddatas();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResGameRecordMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 gameid_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordData > gamerecorddatas_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResGameRecordMessage* default_instance_;
};
// -------------------------------------------------------------------

class GameRecordData : public ::google::protobuf::Message {
 public:
  GameRecordData();
  virtual ~GameRecordData();
  
  GameRecordData(const GameRecordData& from);
  
  inline GameRecordData& operator=(const GameRecordData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameRecordData& default_instance();
  
  void Swap(GameRecordData* other);
  
  // implements Message ----------------------------------------------
  
  GameRecordData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameRecordData& from);
  void MergeFrom(const GameRecordData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 round = 1;
  inline bool has_round() const;
  inline void clear_round();
  static const int kRoundFieldNumber = 1;
  inline ::google::protobuf::int32 round() const;
  inline void set_round(::google::protobuf::int32 value);
  
  // required double chageMoney = 2;
  inline bool has_chagemoney() const;
  inline void clear_chagemoney();
  static const int kChageMoneyFieldNumber = 2;
  inline double chagemoney() const;
  inline void set_chagemoney(double value);
  
  // optional string positionIds = 3;
  inline bool has_positionids() const;
  inline void clear_positionids();
  static const int kPositionIdsFieldNumber = 3;
  inline const ::std::string& positionids() const;
  inline void set_positionids(const ::std::string& value);
  inline void set_positionids(const char* value);
  inline void set_positionids(const char* value, size_t size);
  inline ::std::string* mutable_positionids();
  inline ::std::string* release_positionids();
  
  // repeated .com.game.proto.CardData cardData = 4;
  inline int carddata_size() const;
  inline void clear_carddata();
  static const int kCardDataFieldNumber = 4;
  inline const ::com::game::proto::CardData& carddata(int index) const;
  inline ::com::game::proto::CardData* mutable_carddata(int index);
  inline ::com::game::proto::CardData* add_carddata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::CardData >&
      carddata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::CardData >*
      mutable_carddata();
  
  // repeated .com.game.proto.BetData betData = 5;
  inline int betdata_size() const;
  inline void clear_betdata();
  static const int kBetDataFieldNumber = 5;
  inline const ::com::game::proto::BetData& betdata(int index) const;
  inline ::com::game::proto::BetData* mutable_betdata(int index);
  inline ::com::game::proto::BetData* add_betdata();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::BetData >&
      betdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::BetData >*
      mutable_betdata();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.GameRecordData)
 private:
  inline void set_has_round();
  inline void clear_has_round();
  inline void set_has_chagemoney();
  inline void clear_has_chagemoney();
  inline void set_has_positionids();
  inline void clear_has_positionids();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double chagemoney_;
  ::std::string* positionids_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::CardData > carddata_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::BetData > betdata_;
  ::google::protobuf::int32 round_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static GameRecordData* default_instance_;
};
// -------------------------------------------------------------------

class CardData : public ::google::protobuf::Message {
 public:
  CardData();
  virtual ~CardData();
  
  CardData(const CardData& from);
  
  inline CardData& operator=(const CardData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardData& default_instance();
  
  void Swap(CardData* other);
  
  // implements Message ----------------------------------------------
  
  CardData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardData& from);
  void MergeFrom(const CardData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 positionId = 2;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 2;
  inline ::google::protobuf::int32 positionid() const;
  inline void set_positionid(::google::protobuf::int32 value);
  
  // optional string cardRecord = 3;
  inline bool has_cardrecord() const;
  inline void clear_cardrecord();
  static const int kCardRecordFieldNumber = 3;
  inline const ::std::string& cardrecord() const;
  inline void set_cardrecord(const ::std::string& value);
  inline void set_cardrecord(const char* value);
  inline void set_cardrecord(const char* value, size_t size);
  inline ::std::string* mutable_cardrecord();
  inline ::std::string* release_cardrecord();
  
  // optional string commonCardRecord = 4;
  inline bool has_commoncardrecord() const;
  inline void clear_commoncardrecord();
  static const int kCommonCardRecordFieldNumber = 4;
  inline const ::std::string& commoncardrecord() const;
  inline void set_commoncardrecord(const ::std::string& value);
  inline void set_commoncardrecord(const char* value);
  inline void set_commoncardrecord(const char* value, size_t size);
  inline ::std::string* mutable_commoncardrecord();
  inline ::std::string* release_commoncardrecord();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.CardData)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_positionid();
  inline void clear_has_positionid();
  inline void set_has_cardrecord();
  inline void clear_has_cardrecord();
  inline void set_has_commoncardrecord();
  inline void clear_has_commoncardrecord();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 positionid_;
  ::std::string* cardrecord_;
  ::std::string* commoncardrecord_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static CardData* default_instance_;
};
// -------------------------------------------------------------------

class BetData : public ::google::protobuf::Message {
 public:
  BetData();
  virtual ~BetData();
  
  BetData(const BetData& from);
  
  inline BetData& operator=(const BetData& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BetData& default_instance();
  
  void Swap(BetData* other);
  
  // implements Message ----------------------------------------------
  
  BetData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BetData& from);
  void MergeFrom(const BetData& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 positionId = 1;
  inline bool has_positionid() const;
  inline void clear_positionid();
  static const int kPositionIdFieldNumber = 1;
  inline ::google::protobuf::int32 positionid() const;
  inline void set_positionid(::google::protobuf::int32 value);
  
  // optional double bettingMoney = 2;
  inline bool has_bettingmoney() const;
  inline void clear_bettingmoney();
  static const int kBettingMoneyFieldNumber = 2;
  inline double bettingmoney() const;
  inline void set_bettingmoney(double value);
  
  // optional string cardType = 3;
  inline bool has_cardtype() const;
  inline void clear_cardtype();
  static const int kCardTypeFieldNumber = 3;
  inline const ::std::string& cardtype() const;
  inline void set_cardtype(const ::std::string& value);
  inline void set_cardtype(const char* value);
  inline void set_cardtype(const char* value, size_t size);
  inline ::std::string* mutable_cardtype();
  inline ::std::string* release_cardtype();
  
  // optional int32 bettingMultiple = 4;
  inline bool has_bettingmultiple() const;
  inline void clear_bettingmultiple();
  static const int kBettingMultipleFieldNumber = 4;
  inline ::google::protobuf::int32 bettingmultiple() const;
  inline void set_bettingmultiple(::google::protobuf::int32 value);
  
  // optional string betting = 5;
  inline bool has_betting() const;
  inline void clear_betting();
  static const int kBettingFieldNumber = 5;
  inline const ::std::string& betting() const;
  inline void set_betting(const ::std::string& value);
  inline void set_betting(const char* value);
  inline void set_betting(const char* value, size_t size);
  inline ::std::string* mutable_betting();
  inline ::std::string* release_betting();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.BetData)
 private:
  inline void set_has_positionid();
  inline void clear_has_positionid();
  inline void set_has_bettingmoney();
  inline void clear_has_bettingmoney();
  inline void set_has_cardtype();
  inline void clear_has_cardtype();
  inline void set_has_bettingmultiple();
  inline void clear_has_bettingmultiple();
  inline void set_has_betting();
  inline void clear_has_betting();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double bettingmoney_;
  ::google::protobuf::int32 positionid_;
  ::google::protobuf::int32 bettingmultiple_;
  ::std::string* cardtype_;
  ::std::string* betting_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static BetData* default_instance_;
};
// -------------------------------------------------------------------

class ReqSaveMoneyMessage : public ::google::protobuf::Message {
 public:
  ReqSaveMoneyMessage();
  virtual ~ReqSaveMoneyMessage();
  
  ReqSaveMoneyMessage(const ReqSaveMoneyMessage& from);
  
  inline ReqSaveMoneyMessage& operator=(const ReqSaveMoneyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSaveMoneyMessage& default_instance();
  
  void Swap(ReqSaveMoneyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqSaveMoneyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSaveMoneyMessage& from);
  void MergeFrom(const ReqSaveMoneyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqSaveMoney];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required double saveMoney = 2;
  inline bool has_savemoney() const;
  inline void clear_savemoney();
  static const int kSaveMoneyFieldNumber = 2;
  inline double savemoney() const;
  inline void set_savemoney(double value);
  
  // required string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqSaveMoneyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_savemoney();
  inline void clear_has_savemoney();
  inline void set_has_password();
  inline void clear_has_password();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double savemoney_;
  ::std::string* password_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqSaveMoneyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqDrawMoneyMessage : public ::google::protobuf::Message {
 public:
  ReqDrawMoneyMessage();
  virtual ~ReqDrawMoneyMessage();
  
  ReqDrawMoneyMessage(const ReqDrawMoneyMessage& from);
  
  inline ReqDrawMoneyMessage& operator=(const ReqDrawMoneyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDrawMoneyMessage& default_instance();
  
  void Swap(ReqDrawMoneyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqDrawMoneyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDrawMoneyMessage& from);
  void MergeFrom(const ReqDrawMoneyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqDrawMoney];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required double drawMoney = 2;
  inline bool has_drawmoney() const;
  inline void clear_drawmoney();
  static const int kDrawMoneyFieldNumber = 2;
  inline double drawmoney() const;
  inline void set_drawmoney(double value);
  
  // required string password = 3;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 3;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqDrawMoneyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_drawmoney();
  inline void clear_has_drawmoney();
  inline void set_has_password();
  inline void clear_has_password();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double drawmoney_;
  ::std::string* password_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqDrawMoneyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResNoticeMessage : public ::google::protobuf::Message {
 public:
  ResNoticeMessage();
  virtual ~ResNoticeMessage();
  
  ResNoticeMessage(const ResNoticeMessage& from);
  
  inline ResNoticeMessage& operator=(const ResNoticeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResNoticeMessage& default_instance();
  
  void Swap(ResNoticeMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResNoticeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResNoticeMessage& from);
  void MergeFrom(const ResNoticeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResNotice];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string notice = 3;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 3;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResNoticeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_notice();
  inline void clear_has_notice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* notice_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResNoticeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqModifyPlayerInfoMessage : public ::google::protobuf::Message {
 public:
  ReqModifyPlayerInfoMessage();
  virtual ~ReqModifyPlayerInfoMessage();
  
  ReqModifyPlayerInfoMessage(const ReqModifyPlayerInfoMessage& from);
  
  inline ReqModifyPlayerInfoMessage& operator=(const ReqModifyPlayerInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqModifyPlayerInfoMessage& default_instance();
  
  void Swap(ReqModifyPlayerInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqModifyPlayerInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqModifyPlayerInfoMessage& from);
  void MergeFrom(const ReqModifyPlayerInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyPlayerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string icon = 3;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 3;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // optional int32 sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional string signature = 5;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 5;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqModifyPlayerInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_signature();
  inline void clear_has_signature();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  int msgid_;
  ::google::protobuf::int32 sex_;
  ::std::string* icon_;
  ::std::string* signature_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqModifyPlayerInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResModifyPlayerInfoMessage : public ::google::protobuf::Message {
 public:
  ResModifyPlayerInfoMessage();
  virtual ~ResModifyPlayerInfoMessage();
  
  ResModifyPlayerInfoMessage(const ResModifyPlayerInfoMessage& from);
  
  inline ResModifyPlayerInfoMessage& operator=(const ResModifyPlayerInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResModifyPlayerInfoMessage& default_instance();
  
  void Swap(ResModifyPlayerInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResModifyPlayerInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResModifyPlayerInfoMessage& from);
  void MergeFrom(const ResModifyPlayerInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyPlayerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string icon = 3;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 3;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  
  // optional int32 sex = 4;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 4;
  inline ::google::protobuf::int32 sex() const;
  inline void set_sex(::google::protobuf::int32 value);
  
  // optional string signature = 5;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 5;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResModifyPlayerInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_signature();
  inline void clear_has_signature();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  int msgid_;
  ::google::protobuf::int32 sex_;
  ::std::string* icon_;
  ::std::string* signature_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResModifyPlayerInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqModifyBankPassWordMessage : public ::google::protobuf::Message {
 public:
  ReqModifyBankPassWordMessage();
  virtual ~ReqModifyBankPassWordMessage();
  
  ReqModifyBankPassWordMessage(const ReqModifyBankPassWordMessage& from);
  
  inline ReqModifyBankPassWordMessage& operator=(const ReqModifyBankPassWordMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqModifyBankPassWordMessage& default_instance();
  
  void Swap(ReqModifyBankPassWordMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqModifyBankPassWordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqModifyBankPassWordMessage& from);
  void MergeFrom(const ReqModifyBankPassWordMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyBankPassWord];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string bankOldPassword = 3;
  inline bool has_bankoldpassword() const;
  inline void clear_bankoldpassword();
  static const int kBankOldPasswordFieldNumber = 3;
  inline const ::std::string& bankoldpassword() const;
  inline void set_bankoldpassword(const ::std::string& value);
  inline void set_bankoldpassword(const char* value);
  inline void set_bankoldpassword(const char* value, size_t size);
  inline ::std::string* mutable_bankoldpassword();
  inline ::std::string* release_bankoldpassword();
  
  // optional string bankNewPassword = 4;
  inline bool has_banknewpassword() const;
  inline void clear_banknewpassword();
  static const int kBankNewPasswordFieldNumber = 4;
  inline const ::std::string& banknewpassword() const;
  inline void set_banknewpassword(const ::std::string& value);
  inline void set_banknewpassword(const char* value);
  inline void set_banknewpassword(const char* value, size_t size);
  inline ::std::string* mutable_banknewpassword();
  inline ::std::string* release_banknewpassword();
  
  // optional string phone = 5;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 5;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  
  // optional string verify = 6;
  inline bool has_verify() const;
  inline void clear_verify();
  static const int kVerifyFieldNumber = 6;
  inline const ::std::string& verify() const;
  inline void set_verify(const ::std::string& value);
  inline void set_verify(const char* value);
  inline void set_verify(const char* value, size_t size);
  inline ::std::string* mutable_verify();
  inline ::std::string* release_verify();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqModifyBankPassWordMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_bankoldpassword();
  inline void clear_has_bankoldpassword();
  inline void set_has_banknewpassword();
  inline void clear_has_banknewpassword();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_verify();
  inline void clear_has_verify();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* bankoldpassword_;
  ::std::string* banknewpassword_;
  ::std::string* phone_;
  ::std::string* verify_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqModifyBankPassWordMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResModifyBankPassWordMessage : public ::google::protobuf::Message {
 public:
  ResModifyBankPassWordMessage();
  virtual ~ResModifyBankPassWordMessage();
  
  ResModifyBankPassWordMessage(const ResModifyBankPassWordMessage& from);
  
  inline ResModifyBankPassWordMessage& operator=(const ResModifyBankPassWordMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResModifyBankPassWordMessage& default_instance();
  
  void Swap(ResModifyBankPassWordMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResModifyBankPassWordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResModifyBankPassWordMessage& from);
  void MergeFrom(const ResModifyBankPassWordMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyBankPassWord];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResModifyBankPassWordMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResModifyBankPassWordMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqModifyLoginPassWordMessage : public ::google::protobuf::Message {
 public:
  ReqModifyLoginPassWordMessage();
  virtual ~ReqModifyLoginPassWordMessage();
  
  ReqModifyLoginPassWordMessage(const ReqModifyLoginPassWordMessage& from);
  
  inline ReqModifyLoginPassWordMessage& operator=(const ReqModifyLoginPassWordMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqModifyLoginPassWordMessage& default_instance();
  
  void Swap(ReqModifyLoginPassWordMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqModifyLoginPassWordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqModifyLoginPassWordMessage& from);
  void MergeFrom(const ReqModifyLoginPassWordMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyLoginPassWord];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string bankOldPassword = 3;
  inline bool has_bankoldpassword() const;
  inline void clear_bankoldpassword();
  static const int kBankOldPasswordFieldNumber = 3;
  inline const ::std::string& bankoldpassword() const;
  inline void set_bankoldpassword(const ::std::string& value);
  inline void set_bankoldpassword(const char* value);
  inline void set_bankoldpassword(const char* value, size_t size);
  inline ::std::string* mutable_bankoldpassword();
  inline ::std::string* release_bankoldpassword();
  
  // optional string bankNewPassword = 4;
  inline bool has_banknewpassword() const;
  inline void clear_banknewpassword();
  static const int kBankNewPasswordFieldNumber = 4;
  inline const ::std::string& banknewpassword() const;
  inline void set_banknewpassword(const ::std::string& value);
  inline void set_banknewpassword(const char* value);
  inline void set_banknewpassword(const char* value, size_t size);
  inline ::std::string* mutable_banknewpassword();
  inline ::std::string* release_banknewpassword();
  
  // optional string phone = 5;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 5;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  
  // optional string verify = 6;
  inline bool has_verify() const;
  inline void clear_verify();
  static const int kVerifyFieldNumber = 6;
  inline const ::std::string& verify() const;
  inline void set_verify(const ::std::string& value);
  inline void set_verify(const char* value);
  inline void set_verify(const char* value, size_t size);
  inline ::std::string* mutable_verify();
  inline ::std::string* release_verify();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqModifyLoginPassWordMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_bankoldpassword();
  inline void clear_has_bankoldpassword();
  inline void set_has_banknewpassword();
  inline void clear_has_banknewpassword();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_verify();
  inline void clear_has_verify();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* bankoldpassword_;
  ::std::string* banknewpassword_;
  ::std::string* phone_;
  ::std::string* verify_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqModifyLoginPassWordMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResModifyLoginPassWordMessage : public ::google::protobuf::Message {
 public:
  ResModifyLoginPassWordMessage();
  virtual ~ResModifyLoginPassWordMessage();
  
  ResModifyLoginPassWordMessage(const ResModifyLoginPassWordMessage& from);
  
  inline ResModifyLoginPassWordMessage& operator=(const ResModifyLoginPassWordMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResModifyLoginPassWordMessage& default_instance();
  
  void Swap(ResModifyLoginPassWordMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResModifyLoginPassWordMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResModifyLoginPassWordMessage& from);
  void MergeFrom(const ResModifyLoginPassWordMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyLoginPassWord];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline ::google::protobuf::int32 code() const;
  inline void set_code(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResModifyLoginPassWordMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResModifyLoginPassWordMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBindBankCardMessage : public ::google::protobuf::Message {
 public:
  ReqBindBankCardMessage();
  virtual ~ReqBindBankCardMessage();
  
  ReqBindBankCardMessage(const ReqBindBankCardMessage& from);
  
  inline ReqBindBankCardMessage& operator=(const ReqBindBankCardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBindBankCardMessage& default_instance();
  
  void Swap(ReqBindBankCardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBindBankCardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBindBankCardMessage& from);
  void MergeFrom(const ReqBindBankCardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindBankCard];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string bankCardAccount = 2;
  inline bool has_bankcardaccount() const;
  inline void clear_bankcardaccount();
  static const int kBankCardAccountFieldNumber = 2;
  inline const ::std::string& bankcardaccount() const;
  inline void set_bankcardaccount(const ::std::string& value);
  inline void set_bankcardaccount(const char* value);
  inline void set_bankcardaccount(const char* value, size_t size);
  inline ::std::string* mutable_bankcardaccount();
  inline ::std::string* release_bankcardaccount();
  
  // optional string bankCardName = 3;
  inline bool has_bankcardname() const;
  inline void clear_bankcardname();
  static const int kBankCardNameFieldNumber = 3;
  inline const ::std::string& bankcardname() const;
  inline void set_bankcardname(const ::std::string& value);
  inline void set_bankcardname(const char* value);
  inline void set_bankcardname(const char* value, size_t size);
  inline ::std::string* mutable_bankcardname();
  inline ::std::string* release_bankcardname();
  
  // optional string bankBelong = 4;
  inline bool has_bankbelong() const;
  inline void clear_bankbelong();
  static const int kBankBelongFieldNumber = 4;
  inline const ::std::string& bankbelong() const;
  inline void set_bankbelong(const ::std::string& value);
  inline void set_bankbelong(const char* value);
  inline void set_bankbelong(const char* value, size_t size);
  inline ::std::string* mutable_bankbelong();
  inline ::std::string* release_bankbelong();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBindBankCardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_bankcardaccount();
  inline void clear_has_bankcardaccount();
  inline void set_has_bankcardname();
  inline void clear_has_bankcardname();
  inline void set_has_bankbelong();
  inline void clear_has_bankbelong();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* bankcardaccount_;
  ::std::string* bankcardname_;
  ::std::string* bankbelong_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBindBankCardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResBindBankCardMessage : public ::google::protobuf::Message {
 public:
  ResBindBankCardMessage();
  virtual ~ResBindBankCardMessage();
  
  ResBindBankCardMessage(const ResBindBankCardMessage& from);
  
  inline ResBindBankCardMessage& operator=(const ResBindBankCardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBindBankCardMessage& default_instance();
  
  void Swap(ResBindBankCardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBindBankCardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBindBankCardMessage& from);
  void MergeFrom(const ResBindBankCardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindBankCard];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string bankCardAcc = 2;
  inline bool has_bankcardacc() const;
  inline void clear_bankcardacc();
  static const int kBankCardAccFieldNumber = 2;
  inline const ::std::string& bankcardacc() const;
  inline void set_bankcardacc(const ::std::string& value);
  inline void set_bankcardacc(const char* value);
  inline void set_bankcardacc(const char* value, size_t size);
  inline ::std::string* mutable_bankcardacc();
  inline ::std::string* release_bankcardacc();
  
  // optional string bankCardName = 3;
  inline bool has_bankcardname() const;
  inline void clear_bankcardname();
  static const int kBankCardNameFieldNumber = 3;
  inline const ::std::string& bankcardname() const;
  inline void set_bankcardname(const ::std::string& value);
  inline void set_bankcardname(const char* value);
  inline void set_bankcardname(const char* value, size_t size);
  inline ::std::string* mutable_bankcardname();
  inline ::std::string* release_bankcardname();
  
  // optional string bankCardBelong = 4;
  inline bool has_bankcardbelong() const;
  inline void clear_bankcardbelong();
  static const int kBankCardBelongFieldNumber = 4;
  inline const ::std::string& bankcardbelong() const;
  inline void set_bankcardbelong(const ::std::string& value);
  inline void set_bankcardbelong(const char* value);
  inline void set_bankcardbelong(const char* value, size_t size);
  inline ::std::string* mutable_bankcardbelong();
  inline ::std::string* release_bankcardbelong();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBindBankCardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_bankcardacc();
  inline void clear_has_bankcardacc();
  inline void set_has_bankcardname();
  inline void clear_has_bankcardname();
  inline void set_has_bankcardbelong();
  inline void clear_has_bankcardbelong();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* bankcardacc_;
  ::std::string* bankcardname_;
  ::std::string* bankcardbelong_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBindBankCardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqRechargeMessage : public ::google::protobuf::Message {
 public:
  ReqRechargeMessage();
  virtual ~ReqRechargeMessage();
  
  ReqRechargeMessage(const ReqRechargeMessage& from);
  
  inline ReqRechargeMessage& operator=(const ReqRechargeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRechargeMessage& default_instance();
  
  void Swap(ReqRechargeMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqRechargeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRechargeMessage& from);
  void MergeFrom(const ReqRechargeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRecharge];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string rechargeInfo = 2;
  inline bool has_rechargeinfo() const;
  inline void clear_rechargeinfo();
  static const int kRechargeInfoFieldNumber = 2;
  inline const ::std::string& rechargeinfo() const;
  inline void set_rechargeinfo(const ::std::string& value);
  inline void set_rechargeinfo(const char* value);
  inline void set_rechargeinfo(const char* value, size_t size);
  inline ::std::string* mutable_rechargeinfo();
  inline ::std::string* release_rechargeinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqRechargeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_rechargeinfo();
  inline void clear_has_rechargeinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* rechargeinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqRechargeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResRechargeMessage : public ::google::protobuf::Message {
 public:
  ResRechargeMessage();
  virtual ~ResRechargeMessage();
  
  ResRechargeMessage(const ResRechargeMessage& from);
  
  inline ResRechargeMessage& operator=(const ResRechargeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResRechargeMessage& default_instance();
  
  void Swap(ResRechargeMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResRechargeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResRechargeMessage& from);
  void MergeFrom(const ResRechargeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResRecharge];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string rechargeInfo = 2;
  inline bool has_rechargeinfo() const;
  inline void clear_rechargeinfo();
  static const int kRechargeInfoFieldNumber = 2;
  inline const ::std::string& rechargeinfo() const;
  inline void set_rechargeinfo(const ::std::string& value);
  inline void set_rechargeinfo(const char* value);
  inline void set_rechargeinfo(const char* value, size_t size);
  inline ::std::string* mutable_rechargeinfo();
  inline ::std::string* release_rechargeinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResRechargeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_rechargeinfo();
  inline void clear_has_rechargeinfo();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* rechargeinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResRechargeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqRechargeIOSMessage : public ::google::protobuf::Message {
 public:
  ReqRechargeIOSMessage();
  virtual ~ReqRechargeIOSMessage();
  
  ReqRechargeIOSMessage(const ReqRechargeIOSMessage& from);
  
  inline ReqRechargeIOSMessage& operator=(const ReqRechargeIOSMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRechargeIOSMessage& default_instance();
  
  void Swap(ReqRechargeIOSMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqRechargeIOSMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRechargeIOSMessage& from);
  void MergeFrom(const ReqRechargeIOSMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRechargeIOS];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string iosPayJsonResult = 2;
  inline bool has_iospayjsonresult() const;
  inline void clear_iospayjsonresult();
  static const int kIosPayJsonResultFieldNumber = 2;
  inline const ::std::string& iospayjsonresult() const;
  inline void set_iospayjsonresult(const ::std::string& value);
  inline void set_iospayjsonresult(const char* value);
  inline void set_iospayjsonresult(const char* value, size_t size);
  inline ::std::string* mutable_iospayjsonresult();
  inline ::std::string* release_iospayjsonresult();
  
  // required string serverOrderId = 3;
  inline bool has_serverorderid() const;
  inline void clear_serverorderid();
  static const int kServerOrderIdFieldNumber = 3;
  inline const ::std::string& serverorderid() const;
  inline void set_serverorderid(const ::std::string& value);
  inline void set_serverorderid(const char* value);
  inline void set_serverorderid(const char* value, size_t size);
  inline ::std::string* mutable_serverorderid();
  inline ::std::string* release_serverorderid();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqRechargeIOSMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_iospayjsonresult();
  inline void clear_has_iospayjsonresult();
  inline void set_has_serverorderid();
  inline void clear_has_serverorderid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* iospayjsonresult_;
  ::std::string* serverorderid_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqRechargeIOSMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResRechargeIOSMessage : public ::google::protobuf::Message {
 public:
  ResRechargeIOSMessage();
  virtual ~ResRechargeIOSMessage();
  
  ResRechargeIOSMessage(const ResRechargeIOSMessage& from);
  
  inline ResRechargeIOSMessage& operator=(const ResRechargeIOSMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResRechargeIOSMessage& default_instance();
  
  void Swap(ResRechargeIOSMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResRechargeIOSMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResRechargeIOSMessage& from);
  void MergeFrom(const ResRechargeIOSMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResRechargeIOS];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required string iosPayResults = 2;
  inline bool has_iospayresults() const;
  inline void clear_iospayresults();
  static const int kIosPayResultsFieldNumber = 2;
  inline const ::std::string& iospayresults() const;
  inline void set_iospayresults(const ::std::string& value);
  inline void set_iospayresults(const char* value);
  inline void set_iospayresults(const char* value, size_t size);
  inline ::std::string* mutable_iospayresults();
  inline ::std::string* release_iospayresults();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResRechargeIOSMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_iospayresults();
  inline void clear_has_iospayresults();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* iospayresults_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResRechargeIOSMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqWithDrawCashMessage : public ::google::protobuf::Message {
 public:
  ReqWithDrawCashMessage();
  virtual ~ReqWithDrawCashMessage();
  
  ReqWithDrawCashMessage(const ReqWithDrawCashMessage& from);
  
  inline ReqWithDrawCashMessage& operator=(const ReqWithDrawCashMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWithDrawCashMessage& default_instance();
  
  void Swap(ReqWithDrawCashMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqWithDrawCashMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWithDrawCashMessage& from);
  void MergeFrom(const ReqWithDrawCashMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqWithDrawCash];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required int32 rmb = 3;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 3;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqWithDrawCashMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 rmb_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqWithDrawCashMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResWithDrawCashMessage : public ::google::protobuf::Message {
 public:
  ResWithDrawCashMessage();
  virtual ~ResWithDrawCashMessage();
  
  ResWithDrawCashMessage(const ResWithDrawCashMessage& from);
  
  inline ResWithDrawCashMessage& operator=(const ResWithDrawCashMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResWithDrawCashMessage& default_instance();
  
  void Swap(ResWithDrawCashMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResWithDrawCashMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResWithDrawCashMessage& from);
  void MergeFrom(const ResWithDrawCashMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResWithDrawCash];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // optional int32 rmb = 3;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 3;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);
  
  // optional int32 type = 4;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 4;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResWithDrawCashMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 rmb_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResWithDrawCashMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqChangeCardBgMessage : public ::google::protobuf::Message {
 public:
  ReqChangeCardBgMessage();
  virtual ~ReqChangeCardBgMessage();
  
  ReqChangeCardBgMessage(const ReqChangeCardBgMessage& from);
  
  inline ReqChangeCardBgMessage& operator=(const ReqChangeCardBgMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChangeCardBgMessage& default_instance();
  
  void Swap(ReqChangeCardBgMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqChangeCardBgMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChangeCardBgMessage& from);
  void MergeFrom(const ReqChangeCardBgMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChangeCardBg];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 reqType = 2;
  inline bool has_reqtype() const;
  inline void clear_reqtype();
  static const int kReqTypeFieldNumber = 2;
  inline ::google::protobuf::int32 reqtype() const;
  inline void set_reqtype(::google::protobuf::int32 value);
  
  // required int32 reqIndex = 3;
  inline bool has_reqindex() const;
  inline void clear_reqindex();
  static const int kReqIndexFieldNumber = 3;
  inline ::google::protobuf::int32 reqindex() const;
  inline void set_reqindex(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqChangeCardBgMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_reqtype();
  inline void clear_has_reqtype();
  inline void set_has_reqindex();
  inline void clear_has_reqindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 reqtype_;
  ::google::protobuf::int32 reqindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqChangeCardBgMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResChangeCardBgMessage : public ::google::protobuf::Message {
 public:
  ResChangeCardBgMessage();
  virtual ~ResChangeCardBgMessage();
  
  ResChangeCardBgMessage(const ResChangeCardBgMessage& from);
  
  inline ResChangeCardBgMessage& operator=(const ResChangeCardBgMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResChangeCardBgMessage& default_instance();
  
  void Swap(ResChangeCardBgMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResChangeCardBgMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResChangeCardBgMessage& from);
  void MergeFrom(const ResChangeCardBgMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResChangeCardBg];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 resType = 2;
  inline bool has_restype() const;
  inline void clear_restype();
  static const int kResTypeFieldNumber = 2;
  inline ::google::protobuf::int32 restype() const;
  inline void set_restype(::google::protobuf::int32 value);
  
  // optional int32 resIndex = 3;
  inline bool has_resindex() const;
  inline void clear_resindex();
  static const int kResIndexFieldNumber = 3;
  inline ::google::protobuf::int32 resindex() const;
  inline void set_resindex(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResChangeCardBgMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_restype();
  inline void clear_has_restype();
  inline void set_has_resindex();
  inline void clear_has_resindex();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 restype_;
  ::google::protobuf::int32 resindex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResChangeCardBgMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqApplyAgencyMessage : public ::google::protobuf::Message {
 public:
  ReqApplyAgencyMessage();
  virtual ~ReqApplyAgencyMessage();
  
  ReqApplyAgencyMessage(const ReqApplyAgencyMessage& from);
  
  inline ReqApplyAgencyMessage& operator=(const ReqApplyAgencyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqApplyAgencyMessage& default_instance();
  
  void Swap(ReqApplyAgencyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqApplyAgencyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqApplyAgencyMessage& from);
  void MergeFrom(const ReqApplyAgencyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqApplyAgency];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string agentAcc = 2;
  inline bool has_agentacc() const;
  inline void clear_agentacc();
  static const int kAgentAccFieldNumber = 2;
  inline const ::std::string& agentacc() const;
  inline void set_agentacc(const ::std::string& value);
  inline void set_agentacc(const char* value);
  inline void set_agentacc(const char* value, size_t size);
  inline ::std::string* mutable_agentacc();
  inline ::std::string* release_agentacc();
  
  // optional string QQ = 3;
  inline bool has_qq() const;
  inline void clear_qq();
  static const int kQQFieldNumber = 3;
  inline const ::std::string& qq() const;
  inline void set_qq(const ::std::string& value);
  inline void set_qq(const char* value);
  inline void set_qq(const char* value, size_t size);
  inline ::std::string* mutable_qq();
  inline ::std::string* release_qq();
  
  // optional string wechat = 4;
  inline bool has_wechat() const;
  inline void clear_wechat();
  static const int kWechatFieldNumber = 4;
  inline const ::std::string& wechat() const;
  inline void set_wechat(const ::std::string& value);
  inline void set_wechat(const char* value);
  inline void set_wechat(const char* value, size_t size);
  inline ::std::string* mutable_wechat();
  inline ::std::string* release_wechat();
  
  // optional string agentName = 5;
  inline bool has_agentname() const;
  inline void clear_agentname();
  static const int kAgentNameFieldNumber = 5;
  inline const ::std::string& agentname() const;
  inline void set_agentname(const ::std::string& value);
  inline void set_agentname(const char* value);
  inline void set_agentname(const char* value, size_t size);
  inline ::std::string* mutable_agentname();
  inline ::std::string* release_agentname();
  
  // optional string reason = 6;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 6;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqApplyAgencyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_agentacc();
  inline void clear_has_agentacc();
  inline void set_has_qq();
  inline void clear_has_qq();
  inline void set_has_wechat();
  inline void clear_has_wechat();
  inline void set_has_agentname();
  inline void clear_has_agentname();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* agentacc_;
  ::std::string* qq_;
  ::std::string* wechat_;
  ::std::string* agentname_;
  ::std::string* reason_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqApplyAgencyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResApplyAgencyMessage : public ::google::protobuf::Message {
 public:
  ResApplyAgencyMessage();
  virtual ~ResApplyAgencyMessage();
  
  ResApplyAgencyMessage(const ResApplyAgencyMessage& from);
  
  inline ResApplyAgencyMessage& operator=(const ResApplyAgencyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResApplyAgencyMessage& default_instance();
  
  void Swap(ResApplyAgencyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResApplyAgencyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResApplyAgencyMessage& from);
  void MergeFrom(const ResApplyAgencyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResApplyAgency];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResApplyAgencyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResApplyAgencyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqChatWithServiceMessage : public ::google::protobuf::Message {
 public:
  ReqChatWithServiceMessage();
  virtual ~ReqChatWithServiceMessage();
  
  ReqChatWithServiceMessage(const ReqChatWithServiceMessage& from);
  
  inline ReqChatWithServiceMessage& operator=(const ReqChatWithServiceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChatWithServiceMessage& default_instance();
  
  void Swap(ReqChatWithServiceMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqChatWithServiceMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChatWithServiceMessage& from);
  void MergeFrom(const ReqChatWithServiceMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChatWithService];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqChatWithServiceMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqChatWithServiceMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResChatWithServiceMessage : public ::google::protobuf::Message {
 public:
  ResChatWithServiceMessage();
  virtual ~ResChatWithServiceMessage();
  
  ResChatWithServiceMessage(const ResChatWithServiceMessage& from);
  
  inline ResChatWithServiceMessage& operator=(const ResChatWithServiceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResChatWithServiceMessage& default_instance();
  
  void Swap(ResChatWithServiceMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResChatWithServiceMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResChatWithServiceMessage& from);
  void MergeFrom(const ResChatWithServiceMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResChatWithService];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated string contents = 2;
  inline int contents_size() const;
  inline void clear_contents();
  static const int kContentsFieldNumber = 2;
  inline const ::std::string& contents(int index) const;
  inline ::std::string* mutable_contents(int index);
  inline void set_contents(int index, const ::std::string& value);
  inline void set_contents(int index, const char* value);
  inline void set_contents(int index, const char* value, size_t size);
  inline ::std::string* add_contents();
  inline void add_contents(const ::std::string& value);
  inline void add_contents(const char* value);
  inline void add_contents(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& contents() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_contents();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResChatWithServiceMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> contents_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResChatWithServiceMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqReportAgencyMessage : public ::google::protobuf::Message {
 public:
  ReqReportAgencyMessage();
  virtual ~ReqReportAgencyMessage();
  
  ReqReportAgencyMessage(const ReqReportAgencyMessage& from);
  
  inline ReqReportAgencyMessage& operator=(const ReqReportAgencyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReportAgencyMessage& default_instance();
  
  void Swap(ReqReportAgencyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqReportAgencyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReportAgencyMessage& from);
  void MergeFrom(const ReqReportAgencyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReportAgency];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string weChat = 2;
  inline bool has_wechat() const;
  inline void clear_wechat();
  static const int kWeChatFieldNumber = 2;
  inline const ::std::string& wechat() const;
  inline void set_wechat(const ::std::string& value);
  inline void set_wechat(const char* value);
  inline void set_wechat(const char* value, size_t size);
  inline ::std::string* mutable_wechat();
  inline ::std::string* release_wechat();
  
  // optional string reason = 3;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 3;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqReportAgencyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_wechat();
  inline void clear_has_wechat();
  inline void set_has_reason();
  inline void clear_has_reason();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* wechat_;
  ::std::string* reason_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqReportAgencyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResReportAgencyMessage : public ::google::protobuf::Message {
 public:
  ResReportAgencyMessage();
  virtual ~ResReportAgencyMessage();
  
  ResReportAgencyMessage(const ResReportAgencyMessage& from);
  
  inline ResReportAgencyMessage& operator=(const ResReportAgencyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResReportAgencyMessage& default_instance();
  
  void Swap(ResReportAgencyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResReportAgencyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResReportAgencyMessage& from);
  void MergeFrom(const ResReportAgencyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResReportAgency];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResReportAgencyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResReportAgencyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqWithDrawCashInfoMessage : public ::google::protobuf::Message {
 public:
  ReqWithDrawCashInfoMessage();
  virtual ~ReqWithDrawCashInfoMessage();
  
  ReqWithDrawCashInfoMessage(const ReqWithDrawCashInfoMessage& from);
  
  inline ReqWithDrawCashInfoMessage& operator=(const ReqWithDrawCashInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWithDrawCashInfoMessage& default_instance();
  
  void Swap(ReqWithDrawCashInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqWithDrawCashInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWithDrawCashInfoMessage& from);
  void MergeFrom(const ReqWithDrawCashInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqWithDrawCashInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqWithDrawCashInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqWithDrawCashInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResWithDrawCashInfoMessage : public ::google::protobuf::Message {
 public:
  ResWithDrawCashInfoMessage();
  virtual ~ResWithDrawCashInfoMessage();
  
  ResWithDrawCashInfoMessage(const ResWithDrawCashInfoMessage& from);
  
  inline ResWithDrawCashInfoMessage& operator=(const ResWithDrawCashInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResWithDrawCashInfoMessage& default_instance();
  
  void Swap(ResWithDrawCashInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResWithDrawCashInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResWithDrawCashInfoMessage& from);
  void MergeFrom(const ResWithDrawCashInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResWithDrawCashInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.WithDrawCashInfo withDrawCashInfo = 2;
  inline int withdrawcashinfo_size() const;
  inline void clear_withdrawcashinfo();
  static const int kWithDrawCashInfoFieldNumber = 2;
  inline const ::com::game::proto::WithDrawCashInfo& withdrawcashinfo(int index) const;
  inline ::com::game::proto::WithDrawCashInfo* mutable_withdrawcashinfo(int index);
  inline ::com::game::proto::WithDrawCashInfo* add_withdrawcashinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::WithDrawCashInfo >&
      withdrawcashinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::WithDrawCashInfo >*
      mutable_withdrawcashinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResWithDrawCashInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::WithDrawCashInfo > withdrawcashinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResWithDrawCashInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class WithDrawCashInfo : public ::google::protobuf::Message {
 public:
  WithDrawCashInfo();
  virtual ~WithDrawCashInfo();
  
  WithDrawCashInfo(const WithDrawCashInfo& from);
  
  inline WithDrawCashInfo& operator=(const WithDrawCashInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const WithDrawCashInfo& default_instance();
  
  void Swap(WithDrawCashInfo* other);
  
  // implements Message ----------------------------------------------
  
  WithDrawCashInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WithDrawCashInfo& from);
  void MergeFrom(const WithDrawCashInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  
  // optional string alipyacc = 2;
  inline bool has_alipyacc() const;
  inline void clear_alipyacc();
  static const int kAlipyaccFieldNumber = 2;
  inline const ::std::string& alipyacc() const;
  inline void set_alipyacc(const ::std::string& value);
  inline void set_alipyacc(const char* value);
  inline void set_alipyacc(const char* value, size_t size);
  inline ::std::string* mutable_alipyacc();
  inline ::std::string* release_alipyacc();
  
  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
  // optional double money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline double money() const;
  inline void set_money(double value);
  
  // optional int32 result = 5;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 5;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.WithDrawCashInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_alipyacc();
  inline void clear_has_alipyacc();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_result();
  inline void clear_has_result();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* id_;
  ::std::string* alipyacc_;
  ::google::protobuf::int64 time_;
  double money_;
  ::google::protobuf::int32 result_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static WithDrawCashInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpdateWithDrawCashInfoMessage : public ::google::protobuf::Message {
 public:
  UpdateWithDrawCashInfoMessage();
  virtual ~UpdateWithDrawCashInfoMessage();
  
  UpdateWithDrawCashInfoMessage(const UpdateWithDrawCashInfoMessage& from);
  
  inline UpdateWithDrawCashInfoMessage& operator=(const UpdateWithDrawCashInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateWithDrawCashInfoMessage& default_instance();
  
  void Swap(UpdateWithDrawCashInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdateWithDrawCashInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateWithDrawCashInfoMessage& from);
  void MergeFrom(const UpdateWithDrawCashInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateWithDrawCashInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  
  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdateWithDrawCashInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_state();
  inline void clear_has_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* id_;
  int msgid_;
  ::google::protobuf::int32 state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateWithDrawCashInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqAgencyInfoMessage : public ::google::protobuf::Message {
 public:
  ReqAgencyInfoMessage();
  virtual ~ReqAgencyInfoMessage();
  
  ReqAgencyInfoMessage(const ReqAgencyInfoMessage& from);
  
  inline ReqAgencyInfoMessage& operator=(const ReqAgencyInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAgencyInfoMessage& default_instance();
  
  void Swap(ReqAgencyInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqAgencyInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAgencyInfoMessage& from);
  void MergeFrom(const ReqAgencyInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAgencyInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqAgencyInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqAgencyInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResAgencyInfoMessage : public ::google::protobuf::Message {
 public:
  ResAgencyInfoMessage();
  virtual ~ResAgencyInfoMessage();
  
  ResAgencyInfoMessage(const ResAgencyInfoMessage& from);
  
  inline ResAgencyInfoMessage& operator=(const ResAgencyInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResAgencyInfoMessage& default_instance();
  
  void Swap(ResAgencyInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResAgencyInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResAgencyInfoMessage& from);
  void MergeFrom(const ResAgencyInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResAgencyInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.AgencyInfo agencyInfo = 2;
  inline int agencyinfo_size() const;
  inline void clear_agencyinfo();
  static const int kAgencyInfoFieldNumber = 2;
  inline const ::com::game::proto::AgencyInfo& agencyinfo(int index) const;
  inline ::com::game::proto::AgencyInfo* mutable_agencyinfo(int index);
  inline ::com::game::proto::AgencyInfo* add_agencyinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgencyInfo >&
      agencyinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgencyInfo >*
      mutable_agencyinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResAgencyInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgencyInfo > agencyinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResAgencyInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class AgencyInfo : public ::google::protobuf::Message {
 public:
  AgencyInfo();
  virtual ~AgencyInfo();
  
  AgencyInfo(const AgencyInfo& from);
  
  inline AgencyInfo& operator=(const AgencyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgencyInfo& default_instance();
  
  void Swap(AgencyInfo* other);
  
  // implements Message ----------------------------------------------
  
  AgencyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgencyInfo& from);
  void MergeFrom(const AgencyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string QQ = 3;
  inline bool has_qq() const;
  inline void clear_qq();
  static const int kQQFieldNumber = 3;
  inline const ::std::string& qq() const;
  inline void set_qq(const ::std::string& value);
  inline void set_qq(const char* value);
  inline void set_qq(const char* value, size_t size);
  inline ::std::string* mutable_qq();
  inline ::std::string* release_qq();
  
  // optional string weChat = 4;
  inline bool has_wechat() const;
  inline void clear_wechat();
  static const int kWeChatFieldNumber = 4;
  inline const ::std::string& wechat() const;
  inline void set_wechat(const ::std::string& value);
  inline void set_wechat(const char* value);
  inline void set_wechat(const char* value, size_t size);
  inline ::std::string* mutable_wechat();
  inline ::std::string* release_wechat();
  
  // optional string describe = 5;
  inline bool has_describe() const;
  inline void clear_describe();
  static const int kDescribeFieldNumber = 5;
  inline const ::std::string& describe() const;
  inline void set_describe(const ::std::string& value);
  inline void set_describe(const char* value);
  inline void set_describe(const char* value, size_t size);
  inline ::std::string* mutable_describe();
  inline ::std::string* release_describe();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.AgencyInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_qq();
  inline void clear_has_qq();
  inline void set_has_wechat();
  inline void clear_has_wechat();
  inline void set_has_describe();
  inline void clear_has_describe();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* qq_;
  ::std::string* wechat_;
  ::std::string* describe_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static AgencyInfo* default_instance_;
};
// -------------------------------------------------------------------

class UpdateBankWithdrawStateMessage : public ::google::protobuf::Message {
 public:
  UpdateBankWithdrawStateMessage();
  virtual ~UpdateBankWithdrawStateMessage();
  
  UpdateBankWithdrawStateMessage(const UpdateBankWithdrawStateMessage& from);
  
  inline UpdateBankWithdrawStateMessage& operator=(const UpdateBankWithdrawStateMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateBankWithdrawStateMessage& default_instance();
  
  void Swap(UpdateBankWithdrawStateMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdateBankWithdrawStateMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateBankWithdrawStateMessage& from);
  void MergeFrom(const UpdateBankWithdrawStateMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateBankWithdrawState];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional bool isOpen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdateBankWithdrawStateMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  bool isopen_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateBankWithdrawStateMessage* default_instance_;
};
// -------------------------------------------------------------------

class UpdateReferrerInfoMessage : public ::google::protobuf::Message {
 public:
  UpdateReferrerInfoMessage();
  virtual ~UpdateReferrerInfoMessage();
  
  UpdateReferrerInfoMessage(const UpdateReferrerInfoMessage& from);
  
  inline UpdateReferrerInfoMessage& operator=(const UpdateReferrerInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateReferrerInfoMessage& default_instance();
  
  void Swap(UpdateReferrerInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdateReferrerInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateReferrerInfoMessage& from);
  void MergeFrom(const UpdateReferrerInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateReferrerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 num1 = 2;
  inline bool has_num1() const;
  inline void clear_num1();
  static const int kNum1FieldNumber = 2;
  inline ::google::protobuf::int32 num1() const;
  inline void set_num1(::google::protobuf::int32 value);
  
  // optional int32 num2 = 3;
  inline bool has_num2() const;
  inline void clear_num2();
  static const int kNum2FieldNumber = 3;
  inline ::google::protobuf::int32 num2() const;
  inline void set_num2(::google::protobuf::int32 value);
  
  // optional int32 num3 = 4;
  inline bool has_num3() const;
  inline void clear_num3();
  static const int kNum3FieldNumber = 4;
  inline ::google::protobuf::int32 num3() const;
  inline void set_num3(::google::protobuf::int32 value);
  
  // optional int32 num4 = 5;
  inline bool has_num4() const;
  inline void clear_num4();
  static const int kNum4FieldNumber = 5;
  inline ::google::protobuf::int32 num4() const;
  inline void set_num4(::google::protobuf::int32 value);
  
  // optional double getMoney = 6;
  inline bool has_getmoney() const;
  inline void clear_getmoney();
  static const int kGetMoneyFieldNumber = 6;
  inline double getmoney() const;
  inline void set_getmoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdateReferrerInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_num1();
  inline void clear_has_num1();
  inline void set_has_num2();
  inline void clear_has_num2();
  inline void set_has_num3();
  inline void clear_has_num3();
  inline void set_has_num4();
  inline void clear_has_num4();
  inline void set_has_getmoney();
  inline void clear_has_getmoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 num1_;
  ::google::protobuf::int32 num2_;
  ::google::protobuf::int32 num3_;
  double getmoney_;
  ::google::protobuf::int32 num4_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateReferrerInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqTransferReferMoneyMessage : public ::google::protobuf::Message {
 public:
  ReqTransferReferMoneyMessage();
  virtual ~ReqTransferReferMoneyMessage();
  
  ReqTransferReferMoneyMessage(const ReqTransferReferMoneyMessage& from);
  
  inline ReqTransferReferMoneyMessage& operator=(const ReqTransferReferMoneyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTransferReferMoneyMessage& default_instance();
  
  void Swap(ReqTransferReferMoneyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqTransferReferMoneyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTransferReferMoneyMessage& from);
  void MergeFrom(const ReqTransferReferMoneyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTransferReferMoney];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqTransferReferMoneyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqTransferReferMoneyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResSystemNoticeMessage : public ::google::protobuf::Message {
 public:
  ResSystemNoticeMessage();
  virtual ~ResSystemNoticeMessage();
  
  ResSystemNoticeMessage(const ResSystemNoticeMessage& from);
  
  inline ResSystemNoticeMessage& operator=(const ResSystemNoticeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResSystemNoticeMessage& default_instance();
  
  void Swap(ResSystemNoticeMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResSystemNoticeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResSystemNoticeMessage& from);
  void MergeFrom(const ResSystemNoticeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResSystemNotice];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 state = 2;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional double money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline double money() const;
  inline void set_money(double value);
  
  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional int32 vip = 5;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 5;
  inline ::google::protobuf::int32 vip() const;
  inline void set_vip(::google::protobuf::int32 value);
  
  // optional int32 gameid = 6;
  inline bool has_gameid() const;
  inline void clear_gameid();
  static const int kGameidFieldNumber = 6;
  inline ::google::protobuf::int32 gameid() const;
  inline void set_gameid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResSystemNoticeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_gameid();
  inline void clear_has_gameid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 state_;
  double money_;
  ::std::string* content_;
  ::google::protobuf::int32 vip_;
  ::google::protobuf::int32 gameid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResSystemNoticeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqReadMailMessage : public ::google::protobuf::Message {
 public:
  ReqReadMailMessage();
  virtual ~ReqReadMailMessage();
  
  ReqReadMailMessage(const ReqReadMailMessage& from);
  
  inline ReqReadMailMessage& operator=(const ReqReadMailMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReadMailMessage& default_instance();
  
  void Swap(ReqReadMailMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqReadMailMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReadMailMessage& from);
  void MergeFrom(const ReqReadMailMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReadMail];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int64 mailId = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 2;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqReadMailMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 mailid_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqReadMailMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqDeleteMailMessage : public ::google::protobuf::Message {
 public:
  ReqDeleteMailMessage();
  virtual ~ReqDeleteMailMessage();
  
  ReqDeleteMailMessage(const ReqDeleteMailMessage& from);
  
  inline ReqDeleteMailMessage& operator=(const ReqDeleteMailMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqDeleteMailMessage& default_instance();
  
  void Swap(ReqDeleteMailMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqDeleteMailMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqDeleteMailMessage& from);
  void MergeFrom(const ReqDeleteMailMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqDeleteMail];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated int64 mailIds = 2;
  inline int mailids_size() const;
  inline void clear_mailids();
  static const int kMailIdsFieldNumber = 2;
  inline ::google::protobuf::int64 mailids(int index) const;
  inline void set_mailids(int index, ::google::protobuf::int64 value);
  inline void add_mailids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailids();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqDeleteMailMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailids_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqDeleteMailMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetMailMoneyMessage : public ::google::protobuf::Message {
 public:
  ReqGetMailMoneyMessage();
  virtual ~ReqGetMailMoneyMessage();
  
  ReqGetMailMoneyMessage(const ReqGetMailMoneyMessage& from);
  
  inline ReqGetMailMoneyMessage& operator=(const ReqGetMailMoneyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetMailMoneyMessage& default_instance();
  
  void Swap(ReqGetMailMoneyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetMailMoneyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetMailMoneyMessage& from);
  void MergeFrom(const ReqGetMailMoneyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetMailMoney];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int64 mailId = 2;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 2;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGetMailMoneyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 mailid_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetMailMoneyMessage* default_instance_;
};
// -------------------------------------------------------------------

class UpdateMailMessage : public ::google::protobuf::Message {
 public:
  UpdateMailMessage();
  virtual ~UpdateMailMessage();
  
  UpdateMailMessage(const UpdateMailMessage& from);
  
  inline UpdateMailMessage& operator=(const UpdateMailMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateMailMessage& default_instance();
  
  void Swap(UpdateMailMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdateMailMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateMailMessage& from);
  void MergeFrom(const UpdateMailMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateMail];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // repeated .com.game.proto.MailInfo mails = 3;
  inline int mails_size() const;
  inline void clear_mails();
  static const int kMailsFieldNumber = 3;
  inline const ::com::game::proto::MailInfo& mails(int index) const;
  inline ::com::game::proto::MailInfo* mutable_mails(int index);
  inline ::com::game::proto::MailInfo* add_mails();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailInfo >&
      mails() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailInfo >*
      mutable_mails();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdateMailMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailInfo > mails_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateMailMessage* default_instance_;
};
// -------------------------------------------------------------------

class MailInfo : public ::google::protobuf::Message {
 public:
  MailInfo();
  virtual ~MailInfo();
  
  MailInfo(const MailInfo& from);
  
  inline MailInfo& operator=(const MailInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailInfo& default_instance();
  
  void Swap(MailInfo* other);
  
  // implements Message ----------------------------------------------
  
  MailInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailInfo& from);
  void MergeFrom(const MailInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int64 mailid() const;
  inline void set_mailid(::google::protobuf::int64 value);
  
  // optional string sendName = 2;
  inline bool has_sendname() const;
  inline void clear_sendname();
  static const int kSendNameFieldNumber = 2;
  inline const ::std::string& sendname() const;
  inline void set_sendname(const ::std::string& value);
  inline void set_sendname(const char* value);
  inline void set_sendname(const char* value, size_t size);
  inline ::std::string* mutable_sendname();
  inline ::std::string* release_sendname();
  
  // optional string title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional string notice = 4;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 4;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  inline ::std::string* release_notice();
  
  // optional int64 creatTime = 5;
  inline bool has_creattime() const;
  inline void clear_creattime();
  static const int kCreatTimeFieldNumber = 5;
  inline ::google::protobuf::int64 creattime() const;
  inline void set_creattime(::google::protobuf::int64 value);
  
  // optional bool isRead = 6;
  inline bool has_isread() const;
  inline void clear_isread();
  static const int kIsReadFieldNumber = 6;
  inline bool isread() const;
  inline void set_isread(bool value);
  
  // optional double money = 7;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 7;
  inline double money() const;
  inline void set_money(double value);
  
  // optional int64 getMoneyTime = 8;
  inline bool has_getmoneytime() const;
  inline void clear_getmoneytime();
  static const int kGetMoneyTimeFieldNumber = 8;
  inline ::google::protobuf::int64 getmoneytime() const;
  inline void set_getmoneytime(::google::protobuf::int64 value);
  
  // repeated .com.game.proto.MailGoods goodsList = 9;
  inline int goodslist_size() const;
  inline void clear_goodslist();
  static const int kGoodsListFieldNumber = 9;
  inline const ::com::game::proto::MailGoods& goodslist(int index) const;
  inline ::com::game::proto::MailGoods* mutable_goodslist(int index);
  inline ::com::game::proto::MailGoods* add_goodslist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailGoods >&
      goodslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailGoods >*
      mutable_goodslist();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.MailInfo)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_sendname();
  inline void clear_has_sendname();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_notice();
  inline void clear_has_notice();
  inline void set_has_creattime();
  inline void clear_has_creattime();
  inline void set_has_isread();
  inline void clear_has_isread();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_getmoneytime();
  inline void clear_has_getmoneytime();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 mailid_;
  ::std::string* sendname_;
  ::std::string* title_;
  ::std::string* notice_;
  ::google::protobuf::int64 creattime_;
  double money_;
  ::google::protobuf::int64 getmoneytime_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailGoods > goodslist_;
  bool isread_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static MailInfo* default_instance_;
};
// -------------------------------------------------------------------

class MailGoods : public ::google::protobuf::Message {
 public:
  MailGoods();
  virtual ~MailGoods();
  
  MailGoods(const MailGoods& from);
  
  inline MailGoods& operator=(const MailGoods& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailGoods& default_instance();
  
  void Swap(MailGoods* other);
  
  // implements Message ----------------------------------------------
  
  MailGoods* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailGoods& from);
  void MergeFrom(const MailGoods& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 goodsModelId = 1;
  inline bool has_goodsmodelid() const;
  inline void clear_goodsmodelid();
  static const int kGoodsModelIdFieldNumber = 1;
  inline ::google::protobuf::int32 goodsmodelid() const;
  inline void set_goodsmodelid(::google::protobuf::int32 value);
  
  // optional int32 goodsNum = 2;
  inline bool has_goodsnum() const;
  inline void clear_goodsnum();
  static const int kGoodsNumFieldNumber = 2;
  inline ::google::protobuf::int32 goodsnum() const;
  inline void set_goodsnum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.MailGoods)
 private:
  inline void set_has_goodsmodelid();
  inline void clear_has_goodsmodelid();
  inline void set_has_goodsnum();
  inline void clear_has_goodsnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 goodsmodelid_;
  ::google::protobuf::int32 goodsnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static MailGoods* default_instance_;
};
// -------------------------------------------------------------------

class UpdatePlayerRechargeInfoMessage : public ::google::protobuf::Message {
 public:
  UpdatePlayerRechargeInfoMessage();
  virtual ~UpdatePlayerRechargeInfoMessage();
  
  UpdatePlayerRechargeInfoMessage(const UpdatePlayerRechargeInfoMessage& from);
  
  inline UpdatePlayerRechargeInfoMessage& operator=(const UpdatePlayerRechargeInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatePlayerRechargeInfoMessage& default_instance();
  
  void Swap(UpdatePlayerRechargeInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdatePlayerRechargeInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdatePlayerRechargeInfoMessage& from);
  void MergeFrom(const UpdatePlayerRechargeInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdatePlayerRechargeInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 agencyRechargeCount = 3;
  inline bool has_agencyrechargecount() const;
  inline void clear_agencyrechargecount();
  static const int kAgencyRechargeCountFieldNumber = 3;
  inline ::google::protobuf::int32 agencyrechargecount() const;
  inline void set_agencyrechargecount(::google::protobuf::int32 value);
  
  // optional double agencyRechargeMoney = 4;
  inline bool has_agencyrechargemoney() const;
  inline void clear_agencyrechargemoney();
  static const int kAgencyRechargeMoneyFieldNumber = 4;
  inline double agencyrechargemoney() const;
  inline void set_agencyrechargemoney(double value);
  
  // optional int32 officialRechargeCount = 5;
  inline bool has_officialrechargecount() const;
  inline void clear_officialrechargecount();
  static const int kOfficialRechargeCountFieldNumber = 5;
  inline ::google::protobuf::int32 officialrechargecount() const;
  inline void set_officialrechargecount(::google::protobuf::int32 value);
  
  // optional double officialRechargeMoney = 6;
  inline bool has_officialrechargemoney() const;
  inline void clear_officialrechargemoney();
  static const int kOfficialRechargeMoneyFieldNumber = 6;
  inline double officialrechargemoney() const;
  inline void set_officialrechargemoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdatePlayerRechargeInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_agencyrechargecount();
  inline void clear_has_agencyrechargecount();
  inline void set_has_agencyrechargemoney();
  inline void clear_has_agencyrechargemoney();
  inline void set_has_officialrechargecount();
  inline void clear_has_officialrechargecount();
  inline void set_has_officialrechargemoney();
  inline void clear_has_officialrechargemoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  double agencyrechargemoney_;
  ::google::protobuf::int32 agencyrechargecount_;
  ::google::protobuf::int32 officialrechargecount_;
  double officialrechargemoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdatePlayerRechargeInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class UpdateControllerRechargeMessage : public ::google::protobuf::Message {
 public:
  UpdateControllerRechargeMessage();
  virtual ~UpdateControllerRechargeMessage();
  
  UpdateControllerRechargeMessage(const UpdateControllerRechargeMessage& from);
  
  inline UpdateControllerRechargeMessage& operator=(const UpdateControllerRechargeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateControllerRechargeMessage& default_instance();
  
  void Swap(UpdateControllerRechargeMessage* other);
  
  // implements Message ----------------------------------------------
  
  UpdateControllerRechargeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateControllerRechargeMessage& from);
  void MergeFrom(const UpdateControllerRechargeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateControllerRecharge];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional bool isOpen = 2;
  inline bool has_isopen() const;
  inline void clear_isopen();
  static const int kIsOpenFieldNumber = 2;
  inline bool isopen() const;
  inline void set_isopen(bool value);
  
  // optional string rechargeChannel = 3;
  inline bool has_rechargechannel() const;
  inline void clear_rechargechannel();
  static const int kRechargeChannelFieldNumber = 3;
  inline const ::std::string& rechargechannel() const;
  inline void set_rechargechannel(const ::std::string& value);
  inline void set_rechargechannel(const char* value);
  inline void set_rechargechannel(const char* value, size_t size);
  inline ::std::string* mutable_rechargechannel();
  inline ::std::string* release_rechargechannel();
  
  // optional int32 initRatio = 4;
  inline bool has_initratio() const;
  inline void clear_initratio();
  static const int kInitRatioFieldNumber = 4;
  inline ::google::protobuf::int32 initratio() const;
  inline void set_initratio(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.UpdateControllerRechargeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_isopen();
  inline void clear_has_isopen();
  inline void set_has_rechargechannel();
  inline void clear_has_rechargechannel();
  inline void set_has_initratio();
  inline void clear_has_initratio();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  bool isopen_;
  ::std::string* rechargechannel_;
  ::google::protobuf::int32 initratio_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static UpdateControllerRechargeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqChatWithAgentMessage : public ::google::protobuf::Message {
 public:
  ReqChatWithAgentMessage();
  virtual ~ReqChatWithAgentMessage();
  
  ReqChatWithAgentMessage(const ReqChatWithAgentMessage& from);
  
  inline ReqChatWithAgentMessage& operator=(const ReqChatWithAgentMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChatWithAgentMessage& default_instance();
  
  void Swap(ReqChatWithAgentMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqChatWithAgentMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChatWithAgentMessage& from);
  void MergeFrom(const ReqChatWithAgentMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChatWithAgent];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int32 agentId = 3;
  inline bool has_agentid() const;
  inline void clear_agentid();
  static const int kAgentIdFieldNumber = 3;
  inline ::google::protobuf::int32 agentid() const;
  inline void set_agentid(::google::protobuf::int32 value);
  
  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqChatWithAgentMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_agentid();
  inline void clear_has_agentid();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* content_;
  ::google::protobuf::int32 agentid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqChatWithAgentMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResChatWithAgentMessage : public ::google::protobuf::Message {
 public:
  ResChatWithAgentMessage();
  virtual ~ResChatWithAgentMessage();
  
  ResChatWithAgentMessage(const ResChatWithAgentMessage& from);
  
  inline ResChatWithAgentMessage& operator=(const ResChatWithAgentMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResChatWithAgentMessage& default_instance();
  
  void Swap(ResChatWithAgentMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResChatWithAgentMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResChatWithAgentMessage& from);
  void MergeFrom(const ResChatWithAgentMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResChatWithAgent];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.AgentChatInfo chatInfo = 2;
  inline int chatinfo_size() const;
  inline void clear_chatinfo();
  static const int kChatInfoFieldNumber = 2;
  inline const ::com::game::proto::AgentChatInfo& chatinfo(int index) const;
  inline ::com::game::proto::AgentChatInfo* mutable_chatinfo(int index);
  inline ::com::game::proto::AgentChatInfo* add_chatinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgentChatInfo >&
      chatinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgentChatInfo >*
      mutable_chatinfo();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResChatWithAgentMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgentChatInfo > chatinfo_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResChatWithAgentMessage* default_instance_;
};
// -------------------------------------------------------------------

class AgentChatInfo : public ::google::protobuf::Message {
 public:
  AgentChatInfo();
  virtual ~AgentChatInfo();
  
  AgentChatInfo(const AgentChatInfo& from);
  
  inline AgentChatInfo& operator=(const AgentChatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentChatInfo& default_instance();
  
  void Swap(AgentChatInfo* other);
  
  // implements Message ----------------------------------------------
  
  AgentChatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgentChatInfo& from);
  void MergeFrom(const AgentChatInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 agentId = 1;
  inline bool has_agentid() const;
  inline void clear_agentid();
  static const int kAgentIdFieldNumber = 1;
  inline ::google::protobuf::int32 agentid() const;
  inline void set_agentid(::google::protobuf::int32 value);
  
  // repeated string content = 2;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content(int index) const;
  inline ::std::string* mutable_content(int index);
  inline void set_content(int index, const ::std::string& value);
  inline void set_content(int index, const char* value);
  inline void set_content(int index, const char* value, size_t size);
  inline ::std::string* add_content();
  inline void add_content(const ::std::string& value);
  inline void add_content(const char* value);
  inline void add_content(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& content() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.AgentChatInfo)
 private:
  inline void set_has_agentid();
  inline void clear_has_agentid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> content_;
  ::google::protobuf::int32 agentid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static AgentChatInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqAgentChatWithServiceMessage : public ::google::protobuf::Message {
 public:
  ReqAgentChatWithServiceMessage();
  virtual ~ReqAgentChatWithServiceMessage();
  
  ReqAgentChatWithServiceMessage(const ReqAgentChatWithServiceMessage& from);
  
  inline ReqAgentChatWithServiceMessage& operator=(const ReqAgentChatWithServiceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAgentChatWithServiceMessage& default_instance();
  
  void Swap(ReqAgentChatWithServiceMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqAgentChatWithServiceMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAgentChatWithServiceMessage& from);
  void MergeFrom(const ReqAgentChatWithServiceMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAgentChatWithService];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqAgentChatWithServiceMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 type_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqAgentChatWithServiceMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResAgentChatWithServiceMessage : public ::google::protobuf::Message {
 public:
  ResAgentChatWithServiceMessage();
  virtual ~ResAgentChatWithServiceMessage();
  
  ResAgentChatWithServiceMessage(const ResAgentChatWithServiceMessage& from);
  
  inline ResAgentChatWithServiceMessage& operator=(const ResAgentChatWithServiceMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResAgentChatWithServiceMessage& default_instance();
  
  void Swap(ResAgentChatWithServiceMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResAgentChatWithServiceMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResAgentChatWithServiceMessage& from);
  void MergeFrom(const ResAgentChatWithServiceMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResAgentChatWithService];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated string content = 2;
  inline int content_size() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content(int index) const;
  inline ::std::string* mutable_content(int index);
  inline void set_content(int index, const ::std::string& value);
  inline void set_content(int index, const char* value);
  inline void set_content(int index, const char* value, size_t size);
  inline ::std::string* add_content();
  inline void add_content(const ::std::string& value);
  inline void add_content(const char* value);
  inline void add_content(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& content() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_content();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResAgentChatWithServiceMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> content_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResAgentChatWithServiceMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqCommonMessage : public ::google::protobuf::Message {
 public:
  ReqCommonMessage();
  virtual ~ReqCommonMessage();
  
  ReqCommonMessage(const ReqCommonMessage& from);
  
  inline ReqCommonMessage& operator=(const ReqCommonMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCommonMessage& default_instance();
  
  void Swap(ReqCommonMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqCommonMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCommonMessage& from);
  void MergeFrom(const ReqCommonMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCommon];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 subMsgID = 2;
  inline bool has_submsgid() const;
  inline void clear_submsgid();
  static const int kSubMsgIDFieldNumber = 2;
  inline ::google::protobuf::int32 submsgid() const;
  inline void set_submsgid(::google::protobuf::int32 value);
  
  // repeated string strs = 3;
  inline int strs_size() const;
  inline void clear_strs();
  static const int kStrsFieldNumber = 3;
  inline const ::std::string& strs(int index) const;
  inline ::std::string* mutable_strs(int index);
  inline void set_strs(int index, const ::std::string& value);
  inline void set_strs(int index, const char* value);
  inline void set_strs(int index, const char* value, size_t size);
  inline ::std::string* add_strs();
  inline void add_strs(const ::std::string& value);
  inline void add_strs(const char* value);
  inline void add_strs(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strs();
  
  // repeated bytes buffs = 4;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 4;
  inline const ::std::string& buffs(int index) const;
  inline ::std::string* mutable_buffs(int index);
  inline void set_buffs(int index, const ::std::string& value);
  inline void set_buffs(int index, const char* value);
  inline void set_buffs(int index, const void* value, size_t size);
  inline ::std::string* add_buffs();
  inline void add_buffs(const ::std::string& value);
  inline void add_buffs(const char* value);
  inline void add_buffs(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_buffs();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqCommonMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_submsgid();
  inline void clear_has_submsgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 submsgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> buffs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqCommonMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResCommonMessage : public ::google::protobuf::Message {
 public:
  ResCommonMessage();
  virtual ~ResCommonMessage();
  
  ResCommonMessage(const ResCommonMessage& from);
  
  inline ResCommonMessage& operator=(const ResCommonMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResCommonMessage& default_instance();
  
  void Swap(ResCommonMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResCommonMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResCommonMessage& from);
  void MergeFrom(const ResCommonMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResCommon];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 subMsgID = 2;
  inline bool has_submsgid() const;
  inline void clear_submsgid();
  static const int kSubMsgIDFieldNumber = 2;
  inline ::google::protobuf::int32 submsgid() const;
  inline void set_submsgid(::google::protobuf::int32 value);
  
  // repeated string strs = 3;
  inline int strs_size() const;
  inline void clear_strs();
  static const int kStrsFieldNumber = 3;
  inline const ::std::string& strs(int index) const;
  inline ::std::string* mutable_strs(int index);
  inline void set_strs(int index, const ::std::string& value);
  inline void set_strs(int index, const char* value);
  inline void set_strs(int index, const char* value, size_t size);
  inline ::std::string* add_strs();
  inline void add_strs(const ::std::string& value);
  inline void add_strs(const char* value);
  inline void add_strs(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& strs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strs();
  
  // repeated bytes buffs = 4;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 4;
  inline const ::std::string& buffs(int index) const;
  inline ::std::string* mutable_buffs(int index);
  inline void set_buffs(int index, const ::std::string& value);
  inline void set_buffs(int index, const char* value);
  inline void set_buffs(int index, const void* value, size_t size);
  inline ::std::string* add_buffs();
  inline void add_buffs(const ::std::string& value);
  inline void add_buffs(const char* value);
  inline void add_buffs(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_buffs();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResCommonMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_submsgid();
  inline void clear_has_submsgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 submsgid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strs_;
  ::google::protobuf::RepeatedPtrField< ::std::string> buffs_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResCommonMessage* default_instance_;
};
// -------------------------------------------------------------------

class RefreshOnlineAwardMessage : public ::google::protobuf::Message {
 public:
  RefreshOnlineAwardMessage();
  virtual ~RefreshOnlineAwardMessage();
  
  RefreshOnlineAwardMessage(const RefreshOnlineAwardMessage& from);
  
  inline RefreshOnlineAwardMessage& operator=(const RefreshOnlineAwardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshOnlineAwardMessage& default_instance();
  
  void Swap(RefreshOnlineAwardMessage* other);
  
  // implements Message ----------------------------------------------
  
  RefreshOnlineAwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RefreshOnlineAwardMessage& from);
  void MergeFrom(const RefreshOnlineAwardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = RefreshOnlineAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int64 nextGetAwardTime = 2;
  inline bool has_nextgetawardtime() const;
  inline void clear_nextgetawardtime();
  static const int kNextGetAwardTimeFieldNumber = 2;
  inline ::google::protobuf::int64 nextgetawardtime() const;
  inline void set_nextgetawardtime(::google::protobuf::int64 value);
  
  // optional int32 remainNum = 3;
  inline bool has_remainnum() const;
  inline void clear_remainnum();
  static const int kRemainNumFieldNumber = 3;
  inline ::google::protobuf::int32 remainnum() const;
  inline void set_remainnum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.RefreshOnlineAwardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_nextgetawardtime();
  inline void clear_has_nextgetawardtime();
  inline void set_has_remainnum();
  inline void clear_has_remainnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 nextgetawardtime_;
  int msgid_;
  ::google::protobuf::int32 remainnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static RefreshOnlineAwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetOnlineAwardMessage : public ::google::protobuf::Message {
 public:
  ReqGetOnlineAwardMessage();
  virtual ~ReqGetOnlineAwardMessage();
  
  ReqGetOnlineAwardMessage(const ReqGetOnlineAwardMessage& from);
  
  inline ReqGetOnlineAwardMessage& operator=(const ReqGetOnlineAwardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetOnlineAwardMessage& default_instance();
  
  void Swap(ReqGetOnlineAwardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetOnlineAwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetOnlineAwardMessage& from);
  void MergeFrom(const ReqGetOnlineAwardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetOnlineAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGetOnlineAwardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetOnlineAwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResGetOnlineAwardMessage : public ::google::protobuf::Message {
 public:
  ResGetOnlineAwardMessage();
  virtual ~ResGetOnlineAwardMessage();
  
  ResGetOnlineAwardMessage(const ResGetOnlineAwardMessage& from);
  
  inline ResGetOnlineAwardMessage& operator=(const ResGetOnlineAwardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResGetOnlineAwardMessage& default_instance();
  
  void Swap(ResGetOnlineAwardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResGetOnlineAwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResGetOnlineAwardMessage& from);
  void MergeFrom(const ResGetOnlineAwardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResGetOnlineAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional double normalMoney = 2;
  inline bool has_normalmoney() const;
  inline void clear_normalmoney();
  static const int kNormalMoneyFieldNumber = 2;
  inline double normalmoney() const;
  inline void set_normalmoney(double value);
  
  // optional double vipMoney = 3;
  inline bool has_vipmoney() const;
  inline void clear_vipmoney();
  static const int kVipMoneyFieldNumber = 3;
  inline double vipmoney() const;
  inline void set_vipmoney(double value);
  
  // optional int32 remainDayNum = 4;
  inline bool has_remaindaynum() const;
  inline void clear_remaindaynum();
  static const int kRemainDayNumFieldNumber = 4;
  inline ::google::protobuf::int32 remaindaynum() const;
  inline void set_remaindaynum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResGetOnlineAwardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_normalmoney();
  inline void clear_has_normalmoney();
  inline void set_has_vipmoney();
  inline void clear_has_vipmoney();
  inline void set_has_remaindaynum();
  inline void clear_has_remaindaynum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double normalmoney_;
  int msgid_;
  ::google::protobuf::int32 remaindaynum_;
  double vipmoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResGetOnlineAwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetBankruptcyAwardMessage : public ::google::protobuf::Message {
 public:
  ReqGetBankruptcyAwardMessage();
  virtual ~ReqGetBankruptcyAwardMessage();
  
  ReqGetBankruptcyAwardMessage(const ReqGetBankruptcyAwardMessage& from);
  
  inline ReqGetBankruptcyAwardMessage& operator=(const ReqGetBankruptcyAwardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetBankruptcyAwardMessage& default_instance();
  
  void Swap(ReqGetBankruptcyAwardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetBankruptcyAwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetBankruptcyAwardMessage& from);
  void MergeFrom(const ReqGetBankruptcyAwardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetBankruptcyAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGetBankruptcyAwardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetBankruptcyAwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResGetBankruptcyAwardMessage : public ::google::protobuf::Message {
 public:
  ResGetBankruptcyAwardMessage();
  virtual ~ResGetBankruptcyAwardMessage();
  
  ResGetBankruptcyAwardMessage(const ResGetBankruptcyAwardMessage& from);
  
  inline ResGetBankruptcyAwardMessage& operator=(const ResGetBankruptcyAwardMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResGetBankruptcyAwardMessage& default_instance();
  
  void Swap(ResGetBankruptcyAwardMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResGetBankruptcyAwardMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResGetBankruptcyAwardMessage& from);
  void MergeFrom(const ResGetBankruptcyAwardMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResGetBankruptcyAward];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional double money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline double money() const;
  inline void set_money(double value);
  
  // optional double minMoney = 3;
  inline bool has_minmoney() const;
  inline void clear_minmoney();
  static const int kMinMoneyFieldNumber = 3;
  inline double minmoney() const;
  inline void set_minmoney(double value);
  
  // optional int32 remainDayNum = 4;
  inline bool has_remaindaynum() const;
  inline void clear_remaindaynum();
  static const int kRemainDayNumFieldNumber = 4;
  inline ::google::protobuf::int32 remaindaynum() const;
  inline void set_remaindaynum(::google::protobuf::int32 value);
  
  // optional int32 dayNormalNum = 5;
  inline bool has_daynormalnum() const;
  inline void clear_daynormalnum();
  static const int kDayNormalNumFieldNumber = 5;
  inline ::google::protobuf::int32 daynormalnum() const;
  inline void set_daynormalnum(::google::protobuf::int32 value);
  
  // optional int32 dayVIPNum = 6;
  inline bool has_dayvipnum() const;
  inline void clear_dayvipnum();
  static const int kDayVIPNumFieldNumber = 6;
  inline ::google::protobuf::int32 dayvipnum() const;
  inline void set_dayvipnum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResGetBankruptcyAwardMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_minmoney();
  inline void clear_has_minmoney();
  inline void set_has_remaindaynum();
  inline void clear_has_remaindaynum();
  inline void set_has_daynormalnum();
  inline void clear_has_daynormalnum();
  inline void set_has_dayvipnum();
  inline void clear_has_dayvipnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double money_;
  int msgid_;
  ::google::protobuf::int32 remaindaynum_;
  double minmoney_;
  ::google::protobuf::int32 daynormalnum_;
  ::google::protobuf::int32 dayvipnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResGetBankruptcyAwardMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqPresentCharmValueMessage : public ::google::protobuf::Message {
 public:
  ReqPresentCharmValueMessage();
  virtual ~ReqPresentCharmValueMessage();
  
  ReqPresentCharmValueMessage(const ReqPresentCharmValueMessage& from);
  
  inline ReqPresentCharmValueMessage& operator=(const ReqPresentCharmValueMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPresentCharmValueMessage& default_instance();
  
  void Swap(ReqPresentCharmValueMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqPresentCharmValueMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPresentCharmValueMessage& from);
  void MergeFrom(const ReqPresentCharmValueMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPresentCharmValue];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int64 playerId = 2;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int64 playerid() const;
  inline void set_playerid(::google::protobuf::int64 value);
  
  // optional int32 presentPosFrom = 3;
  inline bool has_presentposfrom() const;
  inline void clear_presentposfrom();
  static const int kPresentPosFromFieldNumber = 3;
  inline ::google::protobuf::int32 presentposfrom() const;
  inline void set_presentposfrom(::google::protobuf::int32 value);
  
  // optional int32 presentPosTo = 4;
  inline bool has_presentposto() const;
  inline void clear_presentposto();
  static const int kPresentPosToFieldNumber = 4;
  inline ::google::protobuf::int32 presentposto() const;
  inline void set_presentposto(::google::protobuf::int32 value);
  
  // optional int32 subGameId = 5;
  inline bool has_subgameid() const;
  inline void clear_subgameid();
  static const int kSubGameIdFieldNumber = 5;
  inline ::google::protobuf::int32 subgameid() const;
  inline void set_subgameid(::google::protobuf::int32 value);
  
  // optional int32 presentType = 6;
  inline bool has_presenttype() const;
  inline void clear_presenttype();
  static const int kPresentTypeFieldNumber = 6;
  inline ::google::protobuf::int32 presenttype() const;
  inline void set_presenttype(::google::protobuf::int32 value);
  
  // optional int32 presentValue = 7;
  inline bool has_presentvalue() const;
  inline void clear_presentvalue();
  static const int kPresentValueFieldNumber = 7;
  inline ::google::protobuf::int32 presentvalue() const;
  inline void set_presentvalue(::google::protobuf::int32 value);
  
  // optional double costMoney = 8;
  inline bool has_costmoney() const;
  inline void clear_costmoney();
  static const int kCostMoneyFieldNumber = 8;
  inline double costmoney() const;
  inline void set_costmoney(double value);
  
  // optional int32 changeCharmValue = 9;
  inline bool has_changecharmvalue() const;
  inline void clear_changecharmvalue();
  static const int kChangeCharmValueFieldNumber = 9;
  inline ::google::protobuf::int32 changecharmvalue() const;
  inline void set_changecharmvalue(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqPresentCharmValueMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_presentposfrom();
  inline void clear_has_presentposfrom();
  inline void set_has_presentposto();
  inline void clear_has_presentposto();
  inline void set_has_subgameid();
  inline void clear_has_subgameid();
  inline void set_has_presenttype();
  inline void clear_has_presenttype();
  inline void set_has_presentvalue();
  inline void clear_has_presentvalue();
  inline void set_has_costmoney();
  inline void clear_has_costmoney();
  inline void set_has_changecharmvalue();
  inline void clear_has_changecharmvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 playerid_;
  int msgid_;
  ::google::protobuf::int32 presentposfrom_;
  ::google::protobuf::int32 presentposto_;
  ::google::protobuf::int32 subgameid_;
  ::google::protobuf::int32 presenttype_;
  ::google::protobuf::int32 presentvalue_;
  double costmoney_;
  ::google::protobuf::int32 changecharmvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqPresentCharmValueMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResPresentCharmValueMessage : public ::google::protobuf::Message {
 public:
  ResPresentCharmValueMessage();
  virtual ~ResPresentCharmValueMessage();
  
  ResPresentCharmValueMessage(const ResPresentCharmValueMessage& from);
  
  inline ResPresentCharmValueMessage& operator=(const ResPresentCharmValueMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResPresentCharmValueMessage& default_instance();
  
  void Swap(ResPresentCharmValueMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResPresentCharmValueMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResPresentCharmValueMessage& from);
  void MergeFrom(const ResPresentCharmValueMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResPresentCharmValue];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int64 fromPlayerId = 2;
  inline bool has_fromplayerid() const;
  inline void clear_fromplayerid();
  static const int kFromPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int64 fromplayerid() const;
  inline void set_fromplayerid(::google::protobuf::int64 value);
  
  // optional int64 toPlayerId = 3;
  inline bool has_toplayerid() const;
  inline void clear_toplayerid();
  static const int kToPlayerIdFieldNumber = 3;
  inline ::google::protobuf::int64 toplayerid() const;
  inline void set_toplayerid(::google::protobuf::int64 value);
  
  // optional int32 presentPosFrom = 4;
  inline bool has_presentposfrom() const;
  inline void clear_presentposfrom();
  static const int kPresentPosFromFieldNumber = 4;
  inline ::google::protobuf::int32 presentposfrom() const;
  inline void set_presentposfrom(::google::protobuf::int32 value);
  
  // optional int32 presentPosTo = 5;
  inline bool has_presentposto() const;
  inline void clear_presentposto();
  static const int kPresentPosToFieldNumber = 5;
  inline ::google::protobuf::int32 presentposto() const;
  inline void set_presentposto(::google::protobuf::int32 value);
  
  // optional int32 presentValue = 6;
  inline bool has_presentvalue() const;
  inline void clear_presentvalue();
  static const int kPresentValueFieldNumber = 6;
  inline ::google::protobuf::int32 presentvalue() const;
  inline void set_presentvalue(::google::protobuf::int32 value);
  
  // optional int32 changeCharmValue = 7;
  inline bool has_changecharmvalue() const;
  inline void clear_changecharmvalue();
  static const int kChangeCharmValueFieldNumber = 7;
  inline ::google::protobuf::int32 changecharmvalue() const;
  inline void set_changecharmvalue(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResPresentCharmValueMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_fromplayerid();
  inline void clear_has_fromplayerid();
  inline void set_has_toplayerid();
  inline void clear_has_toplayerid();
  inline void set_has_presentposfrom();
  inline void clear_has_presentposfrom();
  inline void set_has_presentposto();
  inline void clear_has_presentposto();
  inline void set_has_presentvalue();
  inline void clear_has_presentvalue();
  inline void set_has_changecharmvalue();
  inline void clear_has_changecharmvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 fromplayerid_;
  int msgid_;
  ::google::protobuf::int32 presentposfrom_;
  ::google::protobuf::int64 toplayerid_;
  ::google::protobuf::int32 presentposto_;
  ::google::protobuf::int32 presentvalue_;
  ::google::protobuf::int32 changecharmvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResPresentCharmValueMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetStartUpMoneyMessage : public ::google::protobuf::Message {
 public:
  ReqGetStartUpMoneyMessage();
  virtual ~ReqGetStartUpMoneyMessage();
  
  ReqGetStartUpMoneyMessage(const ReqGetStartUpMoneyMessage& from);
  
  inline ReqGetStartUpMoneyMessage& operator=(const ReqGetStartUpMoneyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetStartUpMoneyMessage& default_instance();
  
  void Swap(ReqGetStartUpMoneyMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetStartUpMoneyMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetStartUpMoneyMessage& from);
  void MergeFrom(const ReqGetStartUpMoneyMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetStartUpMoney];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGetStartUpMoneyMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetStartUpMoneyMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqSignInMessage : public ::google::protobuf::Message {
 public:
  ReqSignInMessage();
  virtual ~ReqSignInMessage();
  
  ReqSignInMessage(const ReqSignInMessage& from);
  
  inline ReqSignInMessage& operator=(const ReqSignInMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSignInMessage& default_instance();
  
  void Swap(ReqSignInMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqSignInMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSignInMessage& from);
  void MergeFrom(const ReqSignInMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqSignIn];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 signinType = 2;
  inline bool has_signintype() const;
  inline void clear_signintype();
  static const int kSigninTypeFieldNumber = 2;
  inline ::google::protobuf::int32 signintype() const;
  inline void set_signintype(::google::protobuf::int32 value);
  
  // optional int32 signinDay = 3;
  inline bool has_signinday() const;
  inline void clear_signinday();
  static const int kSigninDayFieldNumber = 3;
  inline ::google::protobuf::int32 signinday() const;
  inline void set_signinday(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqSignInMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_signintype();
  inline void clear_has_signintype();
  inline void set_has_signinday();
  inline void clear_has_signinday();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 signintype_;
  ::google::protobuf::int32 signinday_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqSignInMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResSignInMessage : public ::google::protobuf::Message {
 public:
  ResSignInMessage();
  virtual ~ResSignInMessage();
  
  ResSignInMessage(const ResSignInMessage& from);
  
  inline ResSignInMessage& operator=(const ResSignInMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResSignInMessage& default_instance();
  
  void Swap(ResSignInMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResSignInMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResSignInMessage& from);
  void MergeFrom(const ResSignInMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResSignIn];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 curSignInNum = 2;
  inline bool has_cursigninnum() const;
  inline void clear_cursigninnum();
  static const int kCurSignInNumFieldNumber = 2;
  inline ::google::protobuf::int32 cursigninnum() const;
  inline void set_cursigninnum(::google::protobuf::int32 value);
  
  // repeated int32 state = 3;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state(int index) const;
  inline void set_state(int index, ::google::protobuf::int32 value);
  inline void add_state(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_state();
  
  // optional int32 nextSignIn = 4;
  inline bool has_nextsignin() const;
  inline void clear_nextsignin();
  static const int kNextSignInFieldNumber = 4;
  inline ::google::protobuf::int32 nextsignin() const;
  inline void set_nextsignin(::google::protobuf::int32 value);
  
  // optional bool canSignIn = 5;
  inline bool has_cansignin() const;
  inline void clear_cansignin();
  static const int kCanSignInFieldNumber = 5;
  inline bool cansignin() const;
  inline void set_cansignin(bool value);
  
  // optional double normalMoney = 6;
  inline bool has_normalmoney() const;
  inline void clear_normalmoney();
  static const int kNormalMoneyFieldNumber = 6;
  inline double normalmoney() const;
  inline void set_normalmoney(double value);
  
  // optional double vipMoney = 7;
  inline bool has_vipmoney() const;
  inline void clear_vipmoney();
  static const int kVipMoneyFieldNumber = 7;
  inline double vipmoney() const;
  inline void set_vipmoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResSignInMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_cursigninnum();
  inline void clear_has_cursigninnum();
  inline void set_has_nextsignin();
  inline void clear_has_nextsignin();
  inline void set_has_cansignin();
  inline void clear_has_cansignin();
  inline void set_has_normalmoney();
  inline void clear_has_normalmoney();
  inline void set_has_vipmoney();
  inline void clear_has_vipmoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 cursigninnum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > state_;
  ::google::protobuf::int32 nextsignin_;
  bool cansignin_;
  double normalmoney_;
  double vipmoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResSignInMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResSignInDataMessage : public ::google::protobuf::Message {
 public:
  ResSignInDataMessage();
  virtual ~ResSignInDataMessage();
  
  ResSignInDataMessage(const ResSignInDataMessage& from);
  
  inline ResSignInDataMessage& operator=(const ResSignInDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResSignInDataMessage& default_instance();
  
  void Swap(ResSignInDataMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResSignInDataMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResSignInDataMessage& from);
  void MergeFrom(const ResSignInDataMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResSignInData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated int32 addUpDay = 2;
  inline int addupday_size() const;
  inline void clear_addupday();
  static const int kAddUpDayFieldNumber = 2;
  inline ::google::protobuf::int32 addupday(int index) const;
  inline void set_addupday(int index, ::google::protobuf::int32 value);
  inline void add_addupday(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      addupday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_addupday();
  
  // repeated double addUpDayMoney = 3;
  inline int addupdaymoney_size() const;
  inline void clear_addupdaymoney();
  static const int kAddUpDayMoneyFieldNumber = 3;
  inline double addupdaymoney(int index) const;
  inline void set_addupdaymoney(int index, double value);
  inline void add_addupdaymoney(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      addupdaymoney() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_addupdaymoney();
  
  // repeated int32 continueDay = 4;
  inline int continueday_size() const;
  inline void clear_continueday();
  static const int kContinueDayFieldNumber = 4;
  inline ::google::protobuf::int32 continueday(int index) const;
  inline void set_continueday(int index, ::google::protobuf::int32 value);
  inline void add_continueday(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      continueday() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_continueday();
  
  // repeated double continueDayMoney = 5;
  inline int continuedaymoney_size() const;
  inline void clear_continuedaymoney();
  static const int kContinueDayMoneyFieldNumber = 5;
  inline double continuedaymoney(int index) const;
  inline void set_continuedaymoney(int index, double value);
  inline void add_continuedaymoney(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      continuedaymoney() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_continuedaymoney();
  
  // repeated int32 vipAdd = 6;
  inline int vipadd_size() const;
  inline void clear_vipadd();
  static const int kVipAddFieldNumber = 6;
  inline ::google::protobuf::int32 vipadd(int index) const;
  inline void set_vipadd(int index, ::google::protobuf::int32 value);
  inline void add_vipadd(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vipadd() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vipadd();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResSignInDataMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > addupday_;
  ::google::protobuf::RepeatedField< double > addupdaymoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > continueday_;
  ::google::protobuf::RepeatedField< double > continuedaymoney_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vipadd_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResSignInDataMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResBarrageChangeMessage : public ::google::protobuf::Message {
 public:
  ResBarrageChangeMessage();
  virtual ~ResBarrageChangeMessage();
  
  ResBarrageChangeMessage(const ResBarrageChangeMessage& from);
  
  inline ResBarrageChangeMessage& operator=(const ResBarrageChangeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBarrageChangeMessage& default_instance();
  
  void Swap(ResBarrageChangeMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBarrageChangeMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBarrageChangeMessage& from);
  void MergeFrom(const ResBarrageChangeMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBarrageChange];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 remainNum = 2;
  inline bool has_remainnum() const;
  inline void clear_remainnum();
  static const int kRemainNumFieldNumber = 2;
  inline ::google::protobuf::int32 remainnum() const;
  inline void set_remainnum(::google::protobuf::int32 value);
  
  // optional int32 maxNum = 3;
  inline bool has_maxnum() const;
  inline void clear_maxnum();
  static const int kMaxNumFieldNumber = 3;
  inline ::google::protobuf::int32 maxnum() const;
  inline void set_maxnum(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBarrageChangeMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_remainnum();
  inline void clear_has_remainnum();
  inline void set_has_maxnum();
  inline void clear_has_maxnum();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 remainnum_;
  ::google::protobuf::int32 maxnum_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBarrageChangeMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResVIPInfoMessage : public ::google::protobuf::Message {
 public:
  ResVIPInfoMessage();
  virtual ~ResVIPInfoMessage();
  
  ResVIPInfoMessage(const ResVIPInfoMessage& from);
  
  inline ResVIPInfoMessage& operator=(const ResVIPInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResVIPInfoMessage& default_instance();
  
  void Swap(ResVIPInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResVIPInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResVIPInfoMessage& from);
  void MergeFrom(const ResVIPInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResVIPInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 vipLevel = 2;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 2;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);
  
  // optional double rechargeMoney = 3;
  inline bool has_rechargemoney() const;
  inline void clear_rechargemoney();
  static const int kRechargeMoneyFieldNumber = 3;
  inline double rechargemoney() const;
  inline void set_rechargemoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResVIPInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_rechargemoney();
  inline void clear_has_rechargemoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 viplevel_;
  double rechargemoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResVIPInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResCharmInfoMessage : public ::google::protobuf::Message {
 public:
  ResCharmInfoMessage();
  virtual ~ResCharmInfoMessage();
  
  ResCharmInfoMessage(const ResCharmInfoMessage& from);
  
  inline ResCharmInfoMessage& operator=(const ResCharmInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResCharmInfoMessage& default_instance();
  
  void Swap(ResCharmInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResCharmInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResCharmInfoMessage& from);
  void MergeFrom(const ResCharmInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResCharmInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 titleId = 2;
  inline bool has_titleid() const;
  inline void clear_titleid();
  static const int kTitleIdFieldNumber = 2;
  inline ::google::protobuf::int32 titleid() const;
  inline void set_titleid(::google::protobuf::int32 value);
  
  // optional double gameMaxWinMoney = 3;
  inline bool has_gamemaxwinmoney() const;
  inline void clear_gamemaxwinmoney();
  static const int kGameMaxWinMoneyFieldNumber = 3;
  inline double gamemaxwinmoney() const;
  inline void set_gamemaxwinmoney(double value);
  
  // optional int32 charmValue = 4;
  inline bool has_charmvalue() const;
  inline void clear_charmvalue();
  static const int kCharmValueFieldNumber = 4;
  inline ::google::protobuf::int32 charmvalue() const;
  inline void set_charmvalue(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResCharmInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_titleid();
  inline void clear_has_titleid();
  inline void set_has_gamemaxwinmoney();
  inline void clear_has_gamemaxwinmoney();
  inline void set_has_charmvalue();
  inline void clear_has_charmvalue();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 titleid_;
  double gamemaxwinmoney_;
  ::google::protobuf::int32 charmvalue_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResCharmInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqTurntableDataMessage : public ::google::protobuf::Message {
 public:
  ReqTurntableDataMessage();
  virtual ~ReqTurntableDataMessage();
  
  ReqTurntableDataMessage(const ReqTurntableDataMessage& from);
  
  inline ReqTurntableDataMessage& operator=(const ReqTurntableDataMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTurntableDataMessage& default_instance();
  
  void Swap(ReqTurntableDataMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqTurntableDataMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTurntableDataMessage& from);
  void MergeFrom(const ReqTurntableDataMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTurntableData];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqTurntableDataMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqTurntableDataMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqTurntableMessage : public ::google::protobuf::Message {
 public:
  ReqTurntableMessage();
  virtual ~ReqTurntableMessage();
  
  ReqTurntableMessage(const ReqTurntableMessage& from);
  
  inline ReqTurntableMessage& operator=(const ReqTurntableMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTurntableMessage& default_instance();
  
  void Swap(ReqTurntableMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqTurntableMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTurntableMessage& from);
  void MergeFrom(const ReqTurntableMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTurntable];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqTurntableMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqTurntableMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLftfreshMessage : public ::google::protobuf::Message {
 public:
  ReqLftfreshMessage();
  virtual ~ReqLftfreshMessage();
  
  ReqLftfreshMessage(const ReqLftfreshMessage& from);
  
  inline ReqLftfreshMessage& operator=(const ReqLftfreshMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLftfreshMessage& default_instance();
  
  void Swap(ReqLftfreshMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLftfreshMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLftfreshMessage& from);
  void MergeFrom(const ReqLftfreshMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftfresh];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLftfreshMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLftfreshMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLftScratchMessage : public ::google::protobuf::Message {
 public:
  ReqLftScratchMessage();
  virtual ~ReqLftScratchMessage();
  
  ReqLftScratchMessage(const ReqLftScratchMessage& from);
  
  inline ReqLftScratchMessage& operator=(const ReqLftScratchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLftScratchMessage& default_instance();
  
  void Swap(ReqLftScratchMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLftScratchMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLftScratchMessage& from);
  void MergeFrom(const ReqLftScratchMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftScratch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLftScratchMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLftScratchMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqHftReceiveMessage : public ::google::protobuf::Message {
 public:
  ReqHftReceiveMessage();
  virtual ~ReqHftReceiveMessage();
  
  ReqHftReceiveMessage(const ReqHftReceiveMessage& from);
  
  inline ReqHftReceiveMessage& operator=(const ReqHftReceiveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHftReceiveMessage& default_instance();
  
  void Swap(ReqHftReceiveMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqHftReceiveMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHftReceiveMessage& from);
  void MergeFrom(const ReqHftReceiveMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHftReceive];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqHftReceiveMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqHftReceiveMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqHftScratchMessage : public ::google::protobuf::Message {
 public:
  ReqHftScratchMessage();
  virtual ~ReqHftScratchMessage();
  
  ReqHftScratchMessage(const ReqHftScratchMessage& from);
  
  inline ReqHftScratchMessage& operator=(const ReqHftScratchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqHftScratchMessage& default_instance();
  
  void Swap(ReqHftScratchMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqHftScratchMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqHftScratchMessage& from);
  void MergeFrom(const ReqHftScratchMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHftScratch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqHftScratchMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqHftScratchMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResHftScratchMessage : public ::google::protobuf::Message {
 public:
  ResHftScratchMessage();
  virtual ~ResHftScratchMessage();
  
  ResHftScratchMessage(const ResHftScratchMessage& from);
  
  inline ResHftScratchMessage& operator=(const ResHftScratchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResHftScratchMessage& default_instance();
  
  void Swap(ResHftScratchMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResHftScratchMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResHftScratchMessage& from);
  void MergeFrom(const ResHftScratchMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResHftScratch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 profitId = 2;
  inline bool has_profitid() const;
  inline void clear_profitid();
  static const int kProfitIdFieldNumber = 2;
  inline ::google::protobuf::int32 profitid() const;
  inline void set_profitid(::google::protobuf::int32 value);
  
  // optional double profitMoney = 3;
  inline bool has_profitmoney() const;
  inline void clear_profitmoney();
  static const int kProfitMoneyFieldNumber = 3;
  inline double profitmoney() const;
  inline void set_profitmoney(double value);
  
  // optional double AmountMoney = 4;
  inline bool has_amountmoney() const;
  inline void clear_amountmoney();
  static const int kAmountMoneyFieldNumber = 4;
  inline double amountmoney() const;
  inline void set_amountmoney(double value);
  
  // optional int32 ReceiveId = 5;
  inline bool has_receiveid() const;
  inline void clear_receiveid();
  static const int kReceiveIdFieldNumber = 5;
  inline ::google::protobuf::int32 receiveid() const;
  inline void set_receiveid(::google::protobuf::int32 value);
  
  // optional string opendate = 6;
  inline bool has_opendate() const;
  inline void clear_opendate();
  static const int kOpendateFieldNumber = 6;
  inline const ::std::string& opendate() const;
  inline void set_opendate(const ::std::string& value);
  inline void set_opendate(const char* value);
  inline void set_opendate(const char* value, size_t size);
  inline ::std::string* mutable_opendate();
  inline ::std::string* release_opendate();
  
  // optional string receivedate = 7;
  inline bool has_receivedate() const;
  inline void clear_receivedate();
  static const int kReceivedateFieldNumber = 7;
  inline const ::std::string& receivedate() const;
  inline void set_receivedate(const ::std::string& value);
  inline void set_receivedate(const char* value);
  inline void set_receivedate(const char* value, size_t size);
  inline ::std::string* mutable_receivedate();
  inline ::std::string* release_receivedate();
  
  // optional int64 time = 8;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
  // optional int32 zt = 9;
  inline bool has_zt() const;
  inline void clear_zt();
  static const int kZtFieldNumber = 9;
  inline ::google::protobuf::int32 zt() const;
  inline void set_zt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResHftScratchMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_profitid();
  inline void clear_has_profitid();
  inline void set_has_profitmoney();
  inline void clear_has_profitmoney();
  inline void set_has_amountmoney();
  inline void clear_has_amountmoney();
  inline void set_has_receiveid();
  inline void clear_has_receiveid();
  inline void set_has_opendate();
  inline void clear_has_opendate();
  inline void set_has_receivedate();
  inline void clear_has_receivedate();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_zt();
  inline void clear_has_zt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 profitid_;
  double profitmoney_;
  double amountmoney_;
  ::std::string* opendate_;
  ::std::string* receivedate_;
  ::google::protobuf::int32 receiveid_;
  ::google::protobuf::int32 zt_;
  ::google::protobuf::int64 time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResHftScratchMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLftRwScratchMessage : public ::google::protobuf::Message {
 public:
  ReqLftRwScratchMessage();
  virtual ~ReqLftRwScratchMessage();
  
  ReqLftRwScratchMessage(const ReqLftRwScratchMessage& from);
  
  inline ReqLftRwScratchMessage& operator=(const ReqLftRwScratchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLftRwScratchMessage& default_instance();
  
  void Swap(ReqLftRwScratchMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLftRwScratchMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLftRwScratchMessage& from);
  void MergeFrom(const ReqLftRwScratchMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftRwScratch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLftRwScratchMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLftRwScratchMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqLftRwReceiveMessage : public ::google::protobuf::Message {
 public:
  ReqLftRwReceiveMessage();
  virtual ~ReqLftRwReceiveMessage();
  
  ReqLftRwReceiveMessage(const ReqLftRwReceiveMessage& from);
  
  inline ReqLftRwReceiveMessage& operator=(const ReqLftRwReceiveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqLftRwReceiveMessage& default_instance();
  
  void Swap(ReqLftRwReceiveMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqLftRwReceiveMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqLftRwReceiveMessage& from);
  void MergeFrom(const ReqLftRwReceiveMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftRwReceive];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 Id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqLftRwReceiveMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_id();
  inline void clear_has_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqLftRwReceiveMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResLftRwScratchMessage : public ::google::protobuf::Message {
 public:
  ResLftRwScratchMessage();
  virtual ~ResLftRwScratchMessage();
  
  ResLftRwScratchMessage(const ResLftRwScratchMessage& from);
  
  inline ResLftRwScratchMessage& operator=(const ResLftRwScratchMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResLftRwScratchMessage& default_instance();
  
  void Swap(ResLftRwScratchMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResLftRwScratchMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResLftRwScratchMessage& from);
  void MergeFrom(const ResLftRwScratchMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResLftRwScratch];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.LftrwInfo lftews = 2;
  inline int lftews_size() const;
  inline void clear_lftews();
  static const int kLftewsFieldNumber = 2;
  inline const ::com::game::proto::LftrwInfo& lftews(int index) const;
  inline ::com::game::proto::LftrwInfo* mutable_lftews(int index);
  inline ::com::game::proto::LftrwInfo* add_lftews();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::LftrwInfo >&
      lftews() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::LftrwInfo >*
      mutable_lftews();
  
  // optional string opendate = 3;
  inline bool has_opendate() const;
  inline void clear_opendate();
  static const int kOpendateFieldNumber = 3;
  inline const ::std::string& opendate() const;
  inline void set_opendate(const ::std::string& value);
  inline void set_opendate(const char* value);
  inline void set_opendate(const char* value, size_t size);
  inline ::std::string* mutable_opendate();
  inline ::std::string* release_opendate();
  
  // optional int32 zt = 4;
  inline bool has_zt() const;
  inline void clear_zt();
  static const int kZtFieldNumber = 4;
  inline ::google::protobuf::int32 zt() const;
  inline void set_zt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResLftRwScratchMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_opendate();
  inline void clear_has_opendate();
  inline void set_has_zt();
  inline void clear_has_zt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::LftrwInfo > lftews_;
  int msgid_;
  ::google::protobuf::int32 zt_;
  ::std::string* opendate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResLftRwScratchMessage* default_instance_;
};
// -------------------------------------------------------------------

class LftrwInfo : public ::google::protobuf::Message {
 public:
  LftrwInfo();
  virtual ~LftrwInfo();
  
  LftrwInfo(const LftrwInfo& from);
  
  inline LftrwInfo& operator=(const LftrwInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const LftrwInfo& default_instance();
  
  void Swap(LftrwInfo* other);
  
  // implements Message ----------------------------------------------
  
  LftrwInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LftrwInfo& from);
  void MergeFrom(const LftrwInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional double needMoney = 2;
  inline bool has_needmoney() const;
  inline void clear_needmoney();
  static const int kNeedMoneyFieldNumber = 2;
  inline double needmoney() const;
  inline void set_needmoney(double value);
  
  // optional double receiveMoney = 3;
  inline bool has_receivemoney() const;
  inline void clear_receivemoney();
  static const int kReceiveMoneyFieldNumber = 3;
  inline double receivemoney() const;
  inline void set_receivemoney(double value);
  
  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional double profitMoney = 5;
  inline bool has_profitmoney() const;
  inline void clear_profitmoney();
  static const int kProfitMoneyFieldNumber = 5;
  inline double profitmoney() const;
  inline void set_profitmoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.LftrwInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_needmoney();
  inline void clear_has_needmoney();
  inline void set_has_receivemoney();
  inline void clear_has_receivemoney();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_profitmoney();
  inline void clear_has_profitmoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double needmoney_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 state_;
  double receivemoney_;
  double profitmoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static LftrwInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqhuodongMessage : public ::google::protobuf::Message {
 public:
  ReqhuodongMessage();
  virtual ~ReqhuodongMessage();
  
  ReqhuodongMessage(const ReqhuodongMessage& from);
  
  inline ReqhuodongMessage& operator=(const ReqhuodongMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqhuodongMessage& default_instance();
  
  void Swap(ReqhuodongMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqhuodongMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqhuodongMessage& from);
  void MergeFrom(const ReqhuodongMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = Reqhuodong];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqhuodongMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqhuodongMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReshuodongMessage : public ::google::protobuf::Message {
 public:
  ReshuodongMessage();
  virtual ~ReshuodongMessage();
  
  ReshuodongMessage(const ReshuodongMessage& from);
  
  inline ReshuodongMessage& operator=(const ReshuodongMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReshuodongMessage& default_instance();
  
  void Swap(ReshuodongMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReshuodongMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReshuodongMessage& from);
  void MergeFrom(const ReshuodongMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = Reshuodong];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.huodonginfo huodongs = 2;
  inline int huodongs_size() const;
  inline void clear_huodongs();
  static const int kHuodongsFieldNumber = 2;
  inline const ::com::game::proto::huodonginfo& huodongs(int index) const;
  inline ::com::game::proto::huodonginfo* mutable_huodongs(int index);
  inline ::com::game::proto::huodonginfo* add_huodongs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::huodonginfo >&
      huodongs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::huodonginfo >*
      mutable_huodongs();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReshuodongMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::huodonginfo > huodongs_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReshuodongMessage* default_instance_;
};
// -------------------------------------------------------------------

class huodonginfo : public ::google::protobuf::Message {
 public:
  huodonginfo();
  virtual ~huodonginfo();
  
  huodonginfo(const huodonginfo& from);
  
  inline huodonginfo& operator=(const huodonginfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const huodonginfo& default_instance();
  
  void Swap(huodonginfo* other);
  
  // implements Message ----------------------------------------------
  
  huodonginfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const huodonginfo& from);
  void MergeFrom(const huodonginfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 Id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 zt = 2;
  inline bool has_zt() const;
  inline void clear_zt();
  static const int kZtFieldNumber = 2;
  inline ::google::protobuf::int32 zt() const;
  inline void set_zt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.huodonginfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_zt();
  inline void clear_has_zt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 zt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static huodonginfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqExpandPlayerInfoMessage : public ::google::protobuf::Message {
 public:
  ReqExpandPlayerInfoMessage();
  virtual ~ReqExpandPlayerInfoMessage();
  
  ReqExpandPlayerInfoMessage(const ReqExpandPlayerInfoMessage& from);
  
  inline ReqExpandPlayerInfoMessage& operator=(const ReqExpandPlayerInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqExpandPlayerInfoMessage& default_instance();
  
  void Swap(ReqExpandPlayerInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqExpandPlayerInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqExpandPlayerInfoMessage& from);
  void MergeFrom(const ReqExpandPlayerInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqExpandPlayerInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqExpandPlayerInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqExpandPlayerInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetShopGoodsMessage : public ::google::protobuf::Message {
 public:
  ReqGetShopGoodsMessage();
  virtual ~ReqGetShopGoodsMessage();
  
  ReqGetShopGoodsMessage(const ReqGetShopGoodsMessage& from);
  
  inline ReqGetShopGoodsMessage& operator=(const ReqGetShopGoodsMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetShopGoodsMessage& default_instance();
  
  void Swap(ReqGetShopGoodsMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqGetShopGoodsMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetShopGoodsMessage& from);
  void MergeFrom(const ReqGetShopGoodsMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetShopGoods];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqGetShopGoodsMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqGetShopGoodsMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuyItemMessage : public ::google::protobuf::Message {
 public:
  ReqBuyItemMessage();
  virtual ~ReqBuyItemMessage();
  
  ReqBuyItemMessage(const ReqBuyItemMessage& from);
  
  inline ReqBuyItemMessage& operator=(const ReqBuyItemMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuyItemMessage& default_instance();
  
  void Swap(ReqBuyItemMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBuyItemMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuyItemMessage& from);
  void MergeFrom(const ReqBuyItemMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBuyItem];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional int32 goodsId = 2;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 2;
  inline ::google::protobuf::int32 goodsid() const;
  inline void set_goodsid(::google::protobuf::int32 value);
  
  // optional int32 num = 3;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 3;
  inline ::google::protobuf::int32 num() const;
  inline void set_num(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBuyItemMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();
  inline void set_has_num();
  inline void clear_has_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 goodsid_;
  ::google::protobuf::int32 num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBuyItemMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqRemainderTaskMessage : public ::google::protobuf::Message {
 public:
  ReqRemainderTaskMessage();
  virtual ~ReqRemainderTaskMessage();
  
  ReqRemainderTaskMessage(const ReqRemainderTaskMessage& from);
  
  inline ReqRemainderTaskMessage& operator=(const ReqRemainderTaskMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRemainderTaskMessage& default_instance();
  
  void Swap(ReqRemainderTaskMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqRemainderTaskMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRemainderTaskMessage& from);
  void MergeFrom(const ReqRemainderTaskMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRemainderTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqRemainderTaskMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqRemainderTaskMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResRemainderTaskMessage : public ::google::protobuf::Message {
 public:
  ResRemainderTaskMessage();
  virtual ~ResRemainderTaskMessage();
  
  ResRemainderTaskMessage(const ResRemainderTaskMessage& from);
  
  inline ResRemainderTaskMessage& operator=(const ResRemainderTaskMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResRemainderTaskMessage& default_instance();
  
  void Swap(ResRemainderTaskMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResRemainderTaskMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResRemainderTaskMessage& from);
  void MergeFrom(const ResRemainderTaskMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResRemainderTask];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional double gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline double gold() const;
  inline void set_gold(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResRemainderTaskMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_gold();
  inline void clear_has_gold();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double gold_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResRemainderTaskMessage* default_instance_;
};
// -------------------------------------------------------------------

class ItemBaseAttribute : public ::google::protobuf::Message {
 public:
  ItemBaseAttribute();
  virtual ~ItemBaseAttribute();
  
  ItemBaseAttribute(const ItemBaseAttribute& from);
  
  inline ItemBaseAttribute& operator=(const ItemBaseAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBaseAttribute& default_instance();
  
  void Swap(ItemBaseAttribute* other);
  
  // implements Message ----------------------------------------------
  
  ItemBaseAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBaseAttribute& from);
  void MergeFrom(const ItemBaseAttribute& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // optional int32 modelId = 2;
  inline bool has_modelid() const;
  inline void clear_modelid();
  static const int kModelIdFieldNumber = 2;
  inline ::google::protobuf::int32 modelid() const;
  inline void set_modelid(::google::protobuf::int32 value);
  
  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ItemBaseAttribute)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_modelid();
  inline void clear_has_modelid();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 modelid_;
  ::google::protobuf::int32 count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ItemBaseAttribute* default_instance_;
};
// -------------------------------------------------------------------

class ResBackpackListMessage : public ::google::protobuf::Message {
 public:
  ResBackpackListMessage();
  virtual ~ResBackpackListMessage();
  
  ResBackpackListMessage(const ResBackpackListMessage& from);
  
  inline ResBackpackListMessage& operator=(const ResBackpackListMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResBackpackListMessage& default_instance();
  
  void Swap(ResBackpackListMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResBackpackListMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResBackpackListMessage& from);
  void MergeFrom(const ResBackpackListMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResBackpackList];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.ItemBaseAttribute goodList = 2;
  inline int goodlist_size() const;
  inline void clear_goodlist();
  static const int kGoodListFieldNumber = 2;
  inline const ::com::game::proto::ItemBaseAttribute& goodlist(int index) const;
  inline ::com::game::proto::ItemBaseAttribute* mutable_goodlist(int index);
  inline ::com::game::proto::ItemBaseAttribute* add_goodlist();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::ItemBaseAttribute >&
      goodlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::ItemBaseAttribute >*
      mutable_goodlist();
  
  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResBackpackListMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_type();
  inline void clear_has_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::ItemBaseAttribute > goodlist_;
  int msgid_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResBackpackListMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqReceiveMailItemMessage : public ::google::protobuf::Message {
 public:
  ReqReceiveMailItemMessage();
  virtual ~ReqReceiveMailItemMessage();
  
  ReqReceiveMailItemMessage(const ReqReceiveMailItemMessage& from);
  
  inline ReqReceiveMailItemMessage& operator=(const ReqReceiveMailItemMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqReceiveMailItemMessage& default_instance();
  
  void Swap(ReqReceiveMailItemMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqReceiveMailItemMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqReceiveMailItemMessage& from);
  void MergeFrom(const ReqReceiveMailItemMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReceiveMailItem];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated int64 mailIds = 2;
  inline int mailids_size() const;
  inline void clear_mailids();
  static const int kMailIdsFieldNumber = 2;
  inline ::google::protobuf::int64 mailids(int index) const;
  inline void set_mailids(int index, ::google::protobuf::int64 value);
  inline void add_mailids(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      mailids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_mailids();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqReceiveMailItemMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > mailids_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqReceiveMailItemMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqOpenUpMessage : public ::google::protobuf::Message {
 public:
  ReqOpenUpMessage();
  virtual ~ReqOpenUpMessage();
  
  ReqOpenUpMessage(const ReqOpenUpMessage& from);
  
  inline ReqOpenUpMessage& operator=(const ReqOpenUpMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOpenUpMessage& default_instance();
  
  void Swap(ReqOpenUpMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqOpenUpMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqOpenUpMessage& from);
  void MergeFrom(const ReqOpenUpMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqOpenUp];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqOpenUpMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqOpenUpMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResOpenUpMessage : public ::google::protobuf::Message {
 public:
  ResOpenUpMessage();
  virtual ~ResOpenUpMessage();
  
  ResOpenUpMessage(const ResOpenUpMessage& from);
  
  inline ResOpenUpMessage& operator=(const ResOpenUpMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResOpenUpMessage& default_instance();
  
  void Swap(ResOpenUpMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResOpenUpMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResOpenUpMessage& from);
  void MergeFrom(const ResOpenUpMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResOpenUp];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.openupinfo openupinfos = 2;
  inline int openupinfos_size() const;
  inline void clear_openupinfos();
  static const int kOpenupinfosFieldNumber = 2;
  inline const ::com::game::proto::openupinfo& openupinfos(int index) const;
  inline ::com::game::proto::openupinfo* mutable_openupinfos(int index);
  inline ::com::game::proto::openupinfo* add_openupinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::openupinfo >&
      openupinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::openupinfo >*
      mutable_openupinfos();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResOpenUpMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::openupinfo > openupinfos_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResOpenUpMessage* default_instance_;
};
// -------------------------------------------------------------------

class openupinfo : public ::google::protobuf::Message {
 public:
  openupinfo();
  virtual ~openupinfo();
  
  openupinfo(const openupinfo& from);
  
  inline openupinfo& operator=(const openupinfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const openupinfo& default_instance();
  
  void Swap(openupinfo* other);
  
  // implements Message ----------------------------------------------
  
  openupinfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const openupinfo& from);
  void MergeFrom(const openupinfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string names = 1;
  inline bool has_names() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 1;
  inline const ::std::string& names() const;
  inline void set_names(const ::std::string& value);
  inline void set_names(const char* value);
  inline void set_names(const char* value, size_t size);
  inline ::std::string* mutable_names();
  inline ::std::string* release_names();
  
  // optional int64 times = 2;
  inline bool has_times() const;
  inline void clear_times();
  static const int kTimesFieldNumber = 2;
  inline ::google::protobuf::int64 times() const;
  inline void set_times(::google::protobuf::int64 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.openupinfo)
 private:
  inline void set_has_names();
  inline void clear_has_names();
  inline void set_has_times();
  inline void clear_has_times();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* names_;
  ::google::protobuf::int64 times_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static openupinfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqShareInfoMessage : public ::google::protobuf::Message {
 public:
  ReqShareInfoMessage();
  virtual ~ReqShareInfoMessage();
  
  ReqShareInfoMessage(const ReqShareInfoMessage& from);
  
  inline ReqShareInfoMessage& operator=(const ReqShareInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqShareInfoMessage& default_instance();
  
  void Swap(ReqShareInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqShareInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqShareInfoMessage& from);
  void MergeFrom(const ReqShareInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqShareInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqShareInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqShareInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResShareInfoMessage : public ::google::protobuf::Message {
 public:
  ResShareInfoMessage();
  virtual ~ResShareInfoMessage();
  
  ResShareInfoMessage(const ResShareInfoMessage& from);
  
  inline ResShareInfoMessage& operator=(const ResShareInfoMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResShareInfoMessage& default_instance();
  
  void Swap(ResShareInfoMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResShareInfoMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResShareInfoMessage& from);
  void MergeFrom(const ResShareInfoMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResShareInfo];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // optional double downShareMoney = 2;
  inline bool has_downsharemoney() const;
  inline void clear_downsharemoney();
  static const int kDownShareMoneyFieldNumber = 2;
  inline double downsharemoney() const;
  inline void set_downsharemoney(double value);
  
  // optional int32 downShareNum1 = 3;
  inline bool has_downsharenum1() const;
  inline void clear_downsharenum1();
  static const int kDownShareNum1FieldNumber = 3;
  inline ::google::protobuf::int32 downsharenum1() const;
  inline void set_downsharenum1(::google::protobuf::int32 value);
  
  // optional int32 downShareNum2 = 4;
  inline bool has_downsharenum2() const;
  inline void clear_downsharenum2();
  static const int kDownShareNum2FieldNumber = 4;
  inline ::google::protobuf::int32 downsharenum2() const;
  inline void set_downsharenum2(::google::protobuf::int32 value);
  
  // optional int32 downShareNum3 = 5;
  inline bool has_downsharenum3() const;
  inline void clear_downsharenum3();
  static const int kDownShareNum3FieldNumber = 5;
  inline ::google::protobuf::int32 downsharenum3() const;
  inline void set_downsharenum3(::google::protobuf::int32 value);
  
  // optional int32 downShareNum4 = 6;
  inline bool has_downsharenum4() const;
  inline void clear_downsharenum4();
  static const int kDownShareNum4FieldNumber = 6;
  inline ::google::protobuf::int32 downsharenum4() const;
  inline void set_downsharenum4(::google::protobuf::int32 value);
  
  // repeated .com.game.proto.DownShareDesc downShareDesc = 7;
  inline int downsharedesc_size() const;
  inline void clear_downsharedesc();
  static const int kDownShareDescFieldNumber = 7;
  inline const ::com::game::proto::DownShareDesc& downsharedesc(int index) const;
  inline ::com::game::proto::DownShareDesc* mutable_downsharedesc(int index);
  inline ::com::game::proto::DownShareDesc* add_downsharedesc();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::DownShareDesc >&
      downsharedesc() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::DownShareDesc >*
      mutable_downsharedesc();
  
  // optional double downShareMoneyTotal1 = 8;
  inline bool has_downsharemoneytotal1() const;
  inline void clear_downsharemoneytotal1();
  static const int kDownShareMoneyTotal1FieldNumber = 8;
  inline double downsharemoneytotal1() const;
  inline void set_downsharemoneytotal1(double value);
  
  // optional double downShareMoneyTotal2 = 9;
  inline bool has_downsharemoneytotal2() const;
  inline void clear_downsharemoneytotal2();
  static const int kDownShareMoneyTotal2FieldNumber = 9;
  inline double downsharemoneytotal2() const;
  inline void set_downsharemoneytotal2(double value);
  
  // optional double downShareMoneyTotal3 = 10;
  inline bool has_downsharemoneytotal3() const;
  inline void clear_downsharemoneytotal3();
  static const int kDownShareMoneyTotal3FieldNumber = 10;
  inline double downsharemoneytotal3() const;
  inline void set_downsharemoneytotal3(double value);
  
  // optional double downShareMoneyTotal4 = 11;
  inline bool has_downsharemoneytotal4() const;
  inline void clear_downsharemoneytotal4();
  static const int kDownShareMoneyTotal4FieldNumber = 11;
  inline double downsharemoneytotal4() const;
  inline void set_downsharemoneytotal4(double value);
  
  // optional double downShareMonthMoney1 = 12;
  inline bool has_downsharemonthmoney1() const;
  inline void clear_downsharemonthmoney1();
  static const int kDownShareMonthMoney1FieldNumber = 12;
  inline double downsharemonthmoney1() const;
  inline void set_downsharemonthmoney1(double value);
  
  // optional double downShareMonthMoney2 = 13;
  inline bool has_downsharemonthmoney2() const;
  inline void clear_downsharemonthmoney2();
  static const int kDownShareMonthMoney2FieldNumber = 13;
  inline double downsharemonthmoney2() const;
  inline void set_downsharemonthmoney2(double value);
  
  // optional double downShareMonthMoney3 = 14;
  inline bool has_downsharemonthmoney3() const;
  inline void clear_downsharemonthmoney3();
  static const int kDownShareMonthMoney3FieldNumber = 14;
  inline double downsharemonthmoney3() const;
  inline void set_downsharemonthmoney3(double value);
  
  // optional double downShareMonthMoney4 = 15;
  inline bool has_downsharemonthmoney4() const;
  inline void clear_downsharemonthmoney4();
  static const int kDownShareMonthMoney4FieldNumber = 15;
  inline double downsharemonthmoney4() const;
  inline void set_downsharemonthmoney4(double value);
  
  // optional double downShareDayMoney1 = 16;
  inline bool has_downsharedaymoney1() const;
  inline void clear_downsharedaymoney1();
  static const int kDownShareDayMoney1FieldNumber = 16;
  inline double downsharedaymoney1() const;
  inline void set_downsharedaymoney1(double value);
  
  // optional double downShareDayMoney2 = 17;
  inline bool has_downsharedaymoney2() const;
  inline void clear_downsharedaymoney2();
  static const int kDownShareDayMoney2FieldNumber = 17;
  inline double downsharedaymoney2() const;
  inline void set_downsharedaymoney2(double value);
  
  // optional double downShareDayMoney3 = 18;
  inline bool has_downsharedaymoney3() const;
  inline void clear_downsharedaymoney3();
  static const int kDownShareDayMoney3FieldNumber = 18;
  inline double downsharedaymoney3() const;
  inline void set_downsharedaymoney3(double value);
  
  // optional double downShareDayMoney4 = 19;
  inline bool has_downsharedaymoney4() const;
  inline void clear_downsharedaymoney4();
  static const int kDownShareDayMoney4FieldNumber = 19;
  inline double downsharedaymoney4() const;
  inline void set_downsharedaymoney4(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResShareInfoMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_downsharemoney();
  inline void clear_has_downsharemoney();
  inline void set_has_downsharenum1();
  inline void clear_has_downsharenum1();
  inline void set_has_downsharenum2();
  inline void clear_has_downsharenum2();
  inline void set_has_downsharenum3();
  inline void clear_has_downsharenum3();
  inline void set_has_downsharenum4();
  inline void clear_has_downsharenum4();
  inline void set_has_downsharemoneytotal1();
  inline void clear_has_downsharemoneytotal1();
  inline void set_has_downsharemoneytotal2();
  inline void clear_has_downsharemoneytotal2();
  inline void set_has_downsharemoneytotal3();
  inline void clear_has_downsharemoneytotal3();
  inline void set_has_downsharemoneytotal4();
  inline void clear_has_downsharemoneytotal4();
  inline void set_has_downsharemonthmoney1();
  inline void clear_has_downsharemonthmoney1();
  inline void set_has_downsharemonthmoney2();
  inline void clear_has_downsharemonthmoney2();
  inline void set_has_downsharemonthmoney3();
  inline void clear_has_downsharemonthmoney3();
  inline void set_has_downsharemonthmoney4();
  inline void clear_has_downsharemonthmoney4();
  inline void set_has_downsharedaymoney1();
  inline void clear_has_downsharedaymoney1();
  inline void set_has_downsharedaymoney2();
  inline void clear_has_downsharedaymoney2();
  inline void set_has_downsharedaymoney3();
  inline void clear_has_downsharedaymoney3();
  inline void set_has_downsharedaymoney4();
  inline void clear_has_downsharedaymoney4();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double downsharemoney_;
  int msgid_;
  ::google::protobuf::int32 downsharenum1_;
  ::google::protobuf::int32 downsharenum2_;
  ::google::protobuf::int32 downsharenum3_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::DownShareDesc > downsharedesc_;
  double downsharemoneytotal1_;
  double downsharemoneytotal2_;
  double downsharemoneytotal3_;
  double downsharemoneytotal4_;
  double downsharemonthmoney1_;
  double downsharemonthmoney2_;
  double downsharemonthmoney3_;
  double downsharemonthmoney4_;
  double downsharedaymoney1_;
  double downsharedaymoney2_;
  double downsharedaymoney3_;
  double downsharedaymoney4_;
  ::google::protobuf::int32 downsharenum4_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResShareInfoMessage* default_instance_;
};
// -------------------------------------------------------------------

class DownShareDesc : public ::google::protobuf::Message {
 public:
  DownShareDesc();
  virtual ~DownShareDesc();
  
  DownShareDesc(const DownShareDesc& from);
  
  inline DownShareDesc& operator=(const DownShareDesc& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DownShareDesc& default_instance();
  
  void Swap(DownShareDesc* other);
  
  // implements Message ----------------------------------------------
  
  DownShareDesc* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DownShareDesc& from);
  void MergeFrom(const DownShareDesc& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional double shareMoney = 2;
  inline bool has_sharemoney() const;
  inline void clear_sharemoney();
  static const int kShareMoneyFieldNumber = 2;
  inline double sharemoney() const;
  inline void set_sharemoney(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.DownShareDesc)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sharemoney();
  inline void clear_has_sharemoney();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  double sharemoney_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static DownShareDesc* default_instance_;
};
// -------------------------------------------------------------------

class ReqPubAuctionMessage : public ::google::protobuf::Message {
 public:
  ReqPubAuctionMessage();
  virtual ~ReqPubAuctionMessage();
  
  ReqPubAuctionMessage(const ReqPubAuctionMessage& from);
  
  inline ReqPubAuctionMessage& operator=(const ReqPubAuctionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPubAuctionMessage& default_instance();
  
  void Swap(ReqPubAuctionMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqPubAuctionMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPubAuctionMessage& from);
  void MergeFrom(const ReqPubAuctionMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPubAuction];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 pubCount = 2;
  inline bool has_pubcount() const;
  inline void clear_pubcount();
  static const int kPubCountFieldNumber = 2;
  inline ::google::protobuf::int32 pubcount() const;
  inline void set_pubcount(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqPubAuctionMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_pubcount();
  inline void clear_has_pubcount();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 pubcount_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqPubAuctionMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuyAuctionMessage : public ::google::protobuf::Message {
 public:
  ReqBuyAuctionMessage();
  virtual ~ReqBuyAuctionMessage();
  
  ReqBuyAuctionMessage(const ReqBuyAuctionMessage& from);
  
  inline ReqBuyAuctionMessage& operator=(const ReqBuyAuctionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuyAuctionMessage& default_instance();
  
  void Swap(ReqBuyAuctionMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqBuyAuctionMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuyAuctionMessage& from);
  void MergeFrom(const ReqBuyAuctionMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBuyAuction];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);
  
  // required int32 buyCount = 3;
  inline bool has_buycount() const;
  inline void clear_buycount();
  static const int kBuyCountFieldNumber = 3;
  inline ::google::protobuf::int32 buycount() const;
  inline void set_buycount(::google::protobuf::int32 value);
  
  // required int32 page = 4;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 4;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqBuyAuctionMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_buycount();
  inline void clear_has_buycount();
  inline void set_has_page();
  inline void clear_has_page();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 itemid_;
  int msgid_;
  ::google::protobuf::int32 buycount_;
  ::google::protobuf::int32 page_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqBuyAuctionMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqAuctionsMessage : public ::google::protobuf::Message {
 public:
  ReqAuctionsMessage();
  virtual ~ReqAuctionsMessage();
  
  ReqAuctionsMessage(const ReqAuctionsMessage& from);
  
  inline ReqAuctionsMessage& operator=(const ReqAuctionsMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAuctionsMessage& default_instance();
  
  void Swap(ReqAuctionsMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqAuctionsMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAuctionsMessage& from);
  void MergeFrom(const ReqAuctionsMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAuctions];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 page = 2;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 2;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // required int32 pageShow = 3;
  inline bool has_pageshow() const;
  inline void clear_pageshow();
  static const int kPageShowFieldNumber = 3;
  inline ::google::protobuf::int32 pageshow() const;
  inline void set_pageshow(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqAuctionsMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_pageshow();
  inline void clear_has_pageshow();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::int32 pageshow_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqAuctionsMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResAuctionsMessage : public ::google::protobuf::Message {
 public:
  ResAuctionsMessage();
  virtual ~ResAuctionsMessage();
  
  ResAuctionsMessage(const ResAuctionsMessage& from);
  
  inline ResAuctionsMessage& operator=(const ResAuctionsMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResAuctionsMessage& default_instance();
  
  void Swap(ResAuctionsMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResAuctionsMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResAuctionsMessage& from);
  void MergeFrom(const ResAuctionsMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResAuctions];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int32 page = 2;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 2;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // required int32 pageTotal = 3;
  inline bool has_pagetotal() const;
  inline void clear_pagetotal();
  static const int kPageTotalFieldNumber = 3;
  inline ::google::protobuf::int32 pagetotal() const;
  inline void set_pagetotal(::google::protobuf::int32 value);
  
  // repeated .com.game.proto.AuctionEntry entrys = 4;
  inline int entrys_size() const;
  inline void clear_entrys();
  static const int kEntrysFieldNumber = 4;
  inline const ::com::game::proto::AuctionEntry& entrys(int index) const;
  inline ::com::game::proto::AuctionEntry* mutable_entrys(int index);
  inline ::com::game::proto::AuctionEntry* add_entrys();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionEntry >&
      entrys() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionEntry >*
      mutable_entrys();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResAuctionsMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_page();
  inline void clear_has_page();
  inline void set_has_pagetotal();
  inline void clear_has_pagetotal();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  ::google::protobuf::int32 page_;
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionEntry > entrys_;
  ::google::protobuf::int32 pagetotal_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResAuctionsMessage* default_instance_;
};
// -------------------------------------------------------------------

class ReqMyAuctionHistorysMessage : public ::google::protobuf::Message {
 public:
  ReqMyAuctionHistorysMessage();
  virtual ~ReqMyAuctionHistorysMessage();
  
  ReqMyAuctionHistorysMessage(const ReqMyAuctionHistorysMessage& from);
  
  inline ReqMyAuctionHistorysMessage& operator=(const ReqMyAuctionHistorysMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMyAuctionHistorysMessage& default_instance();
  
  void Swap(ReqMyAuctionHistorysMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqMyAuctionHistorysMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMyAuctionHistorysMessage& from);
  void MergeFrom(const ReqMyAuctionHistorysMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqMyAuctionHistorys];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqMyAuctionHistorysMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqMyAuctionHistorysMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResMyAuctionHistorysMessage : public ::google::protobuf::Message {
 public:
  ResMyAuctionHistorysMessage();
  virtual ~ResMyAuctionHistorysMessage();
  
  ResMyAuctionHistorysMessage(const ResMyAuctionHistorysMessage& from);
  
  inline ResMyAuctionHistorysMessage& operator=(const ResMyAuctionHistorysMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResMyAuctionHistorysMessage& default_instance();
  
  void Swap(ResMyAuctionHistorysMessage* other);
  
  // implements Message ----------------------------------------------
  
  ResMyAuctionHistorysMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResMyAuctionHistorysMessage& from);
  void MergeFrom(const ResMyAuctionHistorysMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ResMyAuctionHistorys];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // repeated .com.game.proto.AuctionLog logs = 2;
  inline int logs_size() const;
  inline void clear_logs();
  static const int kLogsFieldNumber = 2;
  inline const ::com::game::proto::AuctionLog& logs(int index) const;
  inline ::com::game::proto::AuctionLog* mutable_logs(int index);
  inline ::com::game::proto::AuctionLog* add_logs();
  inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionLog >&
      logs() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionLog >*
      mutable_logs();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ResMyAuctionHistorysMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionLog > logs_;
  int msgid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ResMyAuctionHistorysMessage* default_instance_;
};
// -------------------------------------------------------------------

class AuctionEntry : public ::google::protobuf::Message {
 public:
  AuctionEntry();
  virtual ~AuctionEntry();
  
  AuctionEntry(const AuctionEntry& from);
  
  inline AuctionEntry& operator=(const AuctionEntry& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionEntry& default_instance();
  
  void Swap(AuctionEntry* other);
  
  // implements Message ----------------------------------------------
  
  AuctionEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionEntry& from);
  void MergeFrom(const AuctionEntry& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);
  
  // optional int32 itemModelId = 2;
  inline bool has_itemmodelid() const;
  inline void clear_itemmodelid();
  static const int kItemModelIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemmodelid() const;
  inline void set_itemmodelid(::google::protobuf::int32 value);
  
  // optional int32 itemCount = 3;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 itemcount() const;
  inline void set_itemcount(::google::protobuf::int32 value);
  
  // optional int32 itemPrice = 4;
  inline bool has_itemprice() const;
  inline void clear_itemprice();
  static const int kItemPriceFieldNumber = 4;
  inline ::google::protobuf::int32 itemprice() const;
  inline void set_itemprice(::google::protobuf::int32 value);
  
  // optional string owner = 5;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 5;
  inline const ::std::string& owner() const;
  inline void set_owner(const ::std::string& value);
  inline void set_owner(const char* value);
  inline void set_owner(const char* value, size_t size);
  inline ::std::string* mutable_owner();
  inline ::std::string* release_owner();
  
  // optional string ownerPhone = 6;
  inline bool has_ownerphone() const;
  inline void clear_ownerphone();
  static const int kOwnerPhoneFieldNumber = 6;
  inline const ::std::string& ownerphone() const;
  inline void set_ownerphone(const ::std::string& value);
  inline void set_ownerphone(const char* value);
  inline void set_ownerphone(const char* value, size_t size);
  inline ::std::string* mutable_ownerphone();
  inline ::std::string* release_ownerphone();
  
  // optional int64 ownerId = 7;
  inline bool has_ownerid() const;
  inline void clear_ownerid();
  static const int kOwnerIdFieldNumber = 7;
  inline ::google::protobuf::int64 ownerid() const;
  inline void set_ownerid(::google::protobuf::int64 value);
  
  // optional double totalPrice = 8;
  inline bool has_totalprice() const;
  inline void clear_totalprice();
  static const int kTotalPriceFieldNumber = 8;
  inline double totalprice() const;
  inline void set_totalprice(double value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.AuctionEntry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemmodelid();
  inline void clear_has_itemmodelid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  inline void set_has_itemprice();
  inline void clear_has_itemprice();
  inline void set_has_owner();
  inline void clear_has_owner();
  inline void set_has_ownerphone();
  inline void clear_has_ownerphone();
  inline void set_has_ownerid();
  inline void clear_has_ownerid();
  inline void set_has_totalprice();
  inline void clear_has_totalprice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 itemmodelid_;
  ::google::protobuf::int32 itemcount_;
  ::std::string* owner_;
  ::std::string* ownerphone_;
  ::google::protobuf::int64 ownerid_;
  double totalprice_;
  ::google::protobuf::int32 itemprice_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static AuctionEntry* default_instance_;
};
// -------------------------------------------------------------------

class AuctionLog : public ::google::protobuf::Message {
 public:
  AuctionLog();
  virtual ~AuctionLog();
  
  AuctionLog(const AuctionLog& from);
  
  inline AuctionLog& operator=(const AuctionLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuctionLog& default_instance();
  
  void Swap(AuctionLog* other);
  
  // implements Message ----------------------------------------------
  
  AuctionLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuctionLog& from);
  void MergeFrom(const AuctionLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional int64 time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);
  
  // optional int32 itemCount = 3;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemCountFieldNumber = 3;
  inline ::google::protobuf::int32 itemcount() const;
  inline void set_itemcount(::google::protobuf::int32 value);
  
  // optional string owner = 4;
  inline bool has_owner() const;
  inline void clear_owner();
  static const int kOwnerFieldNumber = 4;
  inline const ::std::string& owner() const;
  inline void set_owner(const ::std::string& value);
  inline void set_owner(const char* value);
  inline void set_owner(const char* value, size_t size);
  inline ::std::string* mutable_owner();
  inline ::std::string* release_owner();
  
  // @@protoc_insertion_point(class_scope:com.game.proto.AuctionLog)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();
  inline void set_has_owner();
  inline void clear_has_owner();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 itemcount_;
  ::std::string* owner_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static AuctionLog* default_instance_;
};
// -------------------------------------------------------------------

class ReqCancelAuctionMessage : public ::google::protobuf::Message {
 public:
  ReqCancelAuctionMessage();
  virtual ~ReqCancelAuctionMessage();
  
  ReqCancelAuctionMessage(const ReqCancelAuctionMessage& from);
  
  inline ReqCancelAuctionMessage& operator=(const ReqCancelAuctionMessage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCancelAuctionMessage& default_instance();
  
  void Swap(ReqCancelAuctionMessage* other);
  
  // implements Message ----------------------------------------------
  
  ReqCancelAuctionMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCancelAuctionMessage& from);
  void MergeFrom(const ReqCancelAuctionMessage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCancelAuction];
  inline bool has_msgid() const;
  inline void clear_msgid();
  static const int kMsgIDFieldNumber = 1;
  inline com::game::proto::Protos_Login msgid() const;
  inline void set_msgid(com::game::proto::Protos_Login value);
  
  // required int64 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int64 itemid() const;
  inline void set_itemid(::google::protobuf::int64 value);
  
  // required int32 page = 3;
  inline bool has_page() const;
  inline void clear_page();
  static const int kPageFieldNumber = 3;
  inline ::google::protobuf::int32 page() const;
  inline void set_page(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:com.game.proto.ReqCancelAuctionMessage)
 private:
  inline void set_has_msgid();
  inline void clear_has_msgid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_page();
  inline void clear_has_page();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int64 itemid_;
  int msgid_;
  ::google::protobuf::int32 page_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_LoginMessage_2eproto();
  friend void protobuf_AssignDesc_LoginMessage_2eproto();
  friend void protobuf_ShutdownFile_LoginMessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqCancelAuctionMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerInfo

// required int64 userid = 1;
inline bool PlayerInfo::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfo::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfo::clear_userid() {
  userid_ = GOOGLE_LONGLONG(0);
  clear_has_userid();
}
inline ::google::protobuf::int64 PlayerInfo::userid() const {
  return userid_;
}
inline void PlayerInfo::set_userid(::google::protobuf::int64 value) {
  set_has_userid();
  userid_ = value;
}

// optional string username = 2;
inline bool PlayerInfo::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfo::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& PlayerInfo::username() const {
  return *username_;
}
inline void PlayerInfo::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void PlayerInfo::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void PlayerInfo::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* PlayerInfo::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 state = 3;
inline bool PlayerInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PlayerInfo::state() const {
  return state_;
}
inline void PlayerInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional string bindAlipayName = 4;
inline bool PlayerInfo::has_bindalipayname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInfo::set_has_bindalipayname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerInfo::clear_has_bindalipayname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerInfo::clear_bindalipayname() {
  if (bindalipayname_ != &::google::protobuf::internal::kEmptyString) {
    bindalipayname_->clear();
  }
  clear_has_bindalipayname();
}
inline const ::std::string& PlayerInfo::bindalipayname() const {
  return *bindalipayname_;
}
inline void PlayerInfo::set_bindalipayname(const ::std::string& value) {
  set_has_bindalipayname();
  if (bindalipayname_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayname_ = new ::std::string;
  }
  bindalipayname_->assign(value);
}
inline void PlayerInfo::set_bindalipayname(const char* value) {
  set_has_bindalipayname();
  if (bindalipayname_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayname_ = new ::std::string;
  }
  bindalipayname_->assign(value);
}
inline void PlayerInfo::set_bindalipayname(const char* value, size_t size) {
  set_has_bindalipayname();
  if (bindalipayname_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayname_ = new ::std::string;
  }
  bindalipayname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_bindalipayname() {
  set_has_bindalipayname();
  if (bindalipayname_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayname_ = new ::std::string;
  }
  return bindalipayname_;
}
inline ::std::string* PlayerInfo::release_bindalipayname() {
  clear_has_bindalipayname();
  if (bindalipayname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bindalipayname_;
    bindalipayname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bindAlipayAcc = 5;
inline bool PlayerInfo::has_bindalipayacc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerInfo::set_has_bindalipayacc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerInfo::clear_has_bindalipayacc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerInfo::clear_bindalipayacc() {
  if (bindalipayacc_ != &::google::protobuf::internal::kEmptyString) {
    bindalipayacc_->clear();
  }
  clear_has_bindalipayacc();
}
inline const ::std::string& PlayerInfo::bindalipayacc() const {
  return *bindalipayacc_;
}
inline void PlayerInfo::set_bindalipayacc(const ::std::string& value) {
  set_has_bindalipayacc();
  if (bindalipayacc_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayacc_ = new ::std::string;
  }
  bindalipayacc_->assign(value);
}
inline void PlayerInfo::set_bindalipayacc(const char* value) {
  set_has_bindalipayacc();
  if (bindalipayacc_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayacc_ = new ::std::string;
  }
  bindalipayacc_->assign(value);
}
inline void PlayerInfo::set_bindalipayacc(const char* value, size_t size) {
  set_has_bindalipayacc();
  if (bindalipayacc_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayacc_ = new ::std::string;
  }
  bindalipayacc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_bindalipayacc() {
  set_has_bindalipayacc();
  if (bindalipayacc_ == &::google::protobuf::internal::kEmptyString) {
    bindalipayacc_ = new ::std::string;
  }
  return bindalipayacc_;
}
inline ::std::string* PlayerInfo::release_bindalipayacc() {
  clear_has_bindalipayacc();
  if (bindalipayacc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bindalipayacc_;
    bindalipayacc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string name = 6;
inline bool PlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PlayerInfo::name() const {
  return *name_;
}
inline void PlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void PlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* PlayerInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string icon = 7;
inline bool PlayerInfo::has_icon() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerInfo::set_has_icon() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerInfo::clear_has_icon() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerInfo::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& PlayerInfo::icon() const {
  return *icon_;
}
inline void PlayerInfo::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PlayerInfo::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void PlayerInfo::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* PlayerInfo::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 sex = 8;
inline bool PlayerInfo::has_sex() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerInfo::set_has_sex() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 PlayerInfo::sex() const {
  return sex_;
}
inline void PlayerInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional string address = 9;
inline bool PlayerInfo::has_address() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerInfo::set_has_address() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerInfo::clear_has_address() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerInfo::clear_address() {
  if (address_ != &::google::protobuf::internal::kEmptyString) {
    address_->clear();
  }
  clear_has_address();
}
inline const ::std::string& PlayerInfo::address() const {
  return *address_;
}
inline void PlayerInfo::set_address(const ::std::string& value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void PlayerInfo::set_address(const char* value) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(value);
}
inline void PlayerInfo::set_address(const char* value, size_t size) {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  address_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_address() {
  set_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    address_ = new ::std::string;
  }
  return address_;
}
inline ::std::string* PlayerInfo::release_address() {
  clear_has_address();
  if (address_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = address_;
    address_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 vip = 10;
inline bool PlayerInfo::has_vip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerInfo::set_has_vip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerInfo::clear_has_vip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerInfo::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 PlayerInfo::vip() const {
  return vip_;
}
inline void PlayerInfo::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional int32 loginId = 11;
inline bool PlayerInfo::has_loginid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerInfo::set_has_loginid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerInfo::clear_has_loginid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerInfo::clear_loginid() {
  loginid_ = 0;
  clear_has_loginid();
}
inline ::google::protobuf::int32 PlayerInfo::loginid() const {
  return loginid_;
}
inline void PlayerInfo::set_loginid(::google::protobuf::int32 value) {
  set_has_loginid();
  loginid_ = value;
}

// optional int32 gameId = 12;
inline bool PlayerInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerInfo::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 PlayerInfo::gameid() const {
  return gameid_;
}
inline void PlayerInfo::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional int64 mapId = 13;
inline bool PlayerInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerInfo::clear_mapid() {
  mapid_ = GOOGLE_LONGLONG(0);
  clear_has_mapid();
}
inline ::google::protobuf::int64 PlayerInfo::mapid() const {
  return mapid_;
}
inline void PlayerInfo::set_mapid(::google::protobuf::int64 value) {
  set_has_mapid();
  mapid_ = value;
}

// optional int32 mapModelId = 14;
inline bool PlayerInfo::has_mapmodelid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerInfo::set_has_mapmodelid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerInfo::clear_has_mapmodelid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerInfo::clear_mapmodelid() {
  mapmodelid_ = 0;
  clear_has_mapmodelid();
}
inline ::google::protobuf::int32 PlayerInfo::mapmodelid() const {
  return mapmodelid_;
}
inline void PlayerInfo::set_mapmodelid(::google::protobuf::int32 value) {
  set_has_mapmodelid();
  mapmodelid_ = value;
}

// optional int32 mapLineId = 15;
inline bool PlayerInfo::has_maplineid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PlayerInfo::set_has_maplineid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PlayerInfo::clear_has_maplineid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PlayerInfo::clear_maplineid() {
  maplineid_ = 0;
  clear_has_maplineid();
}
inline ::google::protobuf::int32 PlayerInfo::maplineid() const {
  return maplineid_;
}
inline void PlayerInfo::set_maplineid(::google::protobuf::int32 value) {
  set_has_maplineid();
  maplineid_ = value;
}

// optional double money1 = 16;
inline bool PlayerInfo::has_money1() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PlayerInfo::set_has_money1() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PlayerInfo::clear_has_money1() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PlayerInfo::clear_money1() {
  money1_ = 0;
  clear_has_money1();
}
inline double PlayerInfo::money1() const {
  return money1_;
}
inline void PlayerInfo::set_money1(double value) {
  set_has_money1();
  money1_ = value;
}

// optional double money2 = 17;
inline bool PlayerInfo::has_money2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PlayerInfo::set_has_money2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PlayerInfo::clear_has_money2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PlayerInfo::clear_money2() {
  money2_ = 0;
  clear_has_money2();
}
inline double PlayerInfo::money2() const {
  return money2_;
}
inline void PlayerInfo::set_money2(double value) {
  set_has_money2();
  money2_ = value;
}

// optional int32 cardBg = 18;
inline bool PlayerInfo::has_cardbg() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PlayerInfo::set_has_cardbg() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PlayerInfo::clear_has_cardbg() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PlayerInfo::clear_cardbg() {
  cardbg_ = 0;
  clear_has_cardbg();
}
inline ::google::protobuf::int32 PlayerInfo::cardbg() const {
  return cardbg_;
}
inline void PlayerInfo::set_cardbg(::google::protobuf::int32 value) {
  set_has_cardbg();
  cardbg_ = value;
}

// optional string bankCardAcc = 19;
inline bool PlayerInfo::has_bankcardacc() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PlayerInfo::set_has_bankcardacc() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PlayerInfo::clear_has_bankcardacc() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PlayerInfo::clear_bankcardacc() {
  if (bankcardacc_ != &::google::protobuf::internal::kEmptyString) {
    bankcardacc_->clear();
  }
  clear_has_bankcardacc();
}
inline const ::std::string& PlayerInfo::bankcardacc() const {
  return *bankcardacc_;
}
inline void PlayerInfo::set_bankcardacc(const ::std::string& value) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(value);
}
inline void PlayerInfo::set_bankcardacc(const char* value) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(value);
}
inline void PlayerInfo::set_bankcardacc(const char* value, size_t size) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_bankcardacc() {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  return bankcardacc_;
}
inline ::std::string* PlayerInfo::release_bankcardacc() {
  clear_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardacc_;
    bankcardacc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankCardName = 20;
inline bool PlayerInfo::has_bankcardname() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void PlayerInfo::set_has_bankcardname() {
  _has_bits_[0] |= 0x00080000u;
}
inline void PlayerInfo::clear_has_bankcardname() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void PlayerInfo::clear_bankcardname() {
  if (bankcardname_ != &::google::protobuf::internal::kEmptyString) {
    bankcardname_->clear();
  }
  clear_has_bankcardname();
}
inline const ::std::string& PlayerInfo::bankcardname() const {
  return *bankcardname_;
}
inline void PlayerInfo::set_bankcardname(const ::std::string& value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void PlayerInfo::set_bankcardname(const char* value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void PlayerInfo::set_bankcardname(const char* value, size_t size) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_bankcardname() {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  return bankcardname_;
}
inline ::std::string* PlayerInfo::release_bankcardname() {
  clear_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardname_;
    bankcardname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankCardBelong = 21;
inline bool PlayerInfo::has_bankcardbelong() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void PlayerInfo::set_has_bankcardbelong() {
  _has_bits_[0] |= 0x00100000u;
}
inline void PlayerInfo::clear_has_bankcardbelong() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void PlayerInfo::clear_bankcardbelong() {
  if (bankcardbelong_ != &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_->clear();
  }
  clear_has_bankcardbelong();
}
inline const ::std::string& PlayerInfo::bankcardbelong() const {
  return *bankcardbelong_;
}
inline void PlayerInfo::set_bankcardbelong(const ::std::string& value) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(value);
}
inline void PlayerInfo::set_bankcardbelong(const char* value) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(value);
}
inline void PlayerInfo::set_bankcardbelong(const char* value, size_t size) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_bankcardbelong() {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  return bankcardbelong_;
}
inline ::std::string* PlayerInfo::release_bankcardbelong() {
  clear_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardbelong_;
    bankcardbelong_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional bool applyAgent = 22;
inline bool PlayerInfo::has_applyagent() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void PlayerInfo::set_has_applyagent() {
  _has_bits_[0] |= 0x00200000u;
}
inline void PlayerInfo::clear_has_applyagent() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void PlayerInfo::clear_applyagent() {
  applyagent_ = false;
  clear_has_applyagent();
}
inline bool PlayerInfo::applyagent() const {
  return applyagent_;
}
inline void PlayerInfo::set_applyagent(bool value) {
  set_has_applyagent();
  applyagent_ = value;
}

// optional int32 titleIndex = 23;
inline bool PlayerInfo::has_titleindex() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void PlayerInfo::set_has_titleindex() {
  _has_bits_[0] |= 0x00400000u;
}
inline void PlayerInfo::clear_has_titleindex() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void PlayerInfo::clear_titleindex() {
  titleindex_ = 0;
  clear_has_titleindex();
}
inline ::google::protobuf::int32 PlayerInfo::titleindex() const {
  return titleindex_;
}
inline void PlayerInfo::set_titleindex(::google::protobuf::int32 value) {
  set_has_titleindex();
  titleindex_ = value;
}

// optional double gameMaxWinMoney = 24;
inline bool PlayerInfo::has_gamemaxwinmoney() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void PlayerInfo::set_has_gamemaxwinmoney() {
  _has_bits_[0] |= 0x00800000u;
}
inline void PlayerInfo::clear_has_gamemaxwinmoney() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void PlayerInfo::clear_gamemaxwinmoney() {
  gamemaxwinmoney_ = 0;
  clear_has_gamemaxwinmoney();
}
inline double PlayerInfo::gamemaxwinmoney() const {
  return gamemaxwinmoney_;
}
inline void PlayerInfo::set_gamemaxwinmoney(double value) {
  set_has_gamemaxwinmoney();
  gamemaxwinmoney_ = value;
}

// optional int32 charmValue = 25;
inline bool PlayerInfo::has_charmvalue() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void PlayerInfo::set_has_charmvalue() {
  _has_bits_[0] |= 0x01000000u;
}
inline void PlayerInfo::clear_has_charmvalue() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void PlayerInfo::clear_charmvalue() {
  charmvalue_ = 0;
  clear_has_charmvalue();
}
inline ::google::protobuf::int32 PlayerInfo::charmvalue() const {
  return charmvalue_;
}
inline void PlayerInfo::set_charmvalue(::google::protobuf::int32 value) {
  set_has_charmvalue();
  charmvalue_ = value;
}

// optional double rechargeMoney = 26;
inline bool PlayerInfo::has_rechargemoney() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void PlayerInfo::set_has_rechargemoney() {
  _has_bits_[0] |= 0x02000000u;
}
inline void PlayerInfo::clear_has_rechargemoney() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void PlayerInfo::clear_rechargemoney() {
  rechargemoney_ = 0;
  clear_has_rechargemoney();
}
inline double PlayerInfo::rechargemoney() const {
  return rechargemoney_;
}
inline void PlayerInfo::set_rechargemoney(double value) {
  set_has_rechargemoney();
  rechargemoney_ = value;
}

// optional int32 headIcon = 27;
inline bool PlayerInfo::has_headicon() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void PlayerInfo::set_has_headicon() {
  _has_bits_[0] |= 0x04000000u;
}
inline void PlayerInfo::clear_has_headicon() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void PlayerInfo::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 PlayerInfo::headicon() const {
  return headicon_;
}
inline void PlayerInfo::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
}

// optional string signature = 28;
inline bool PlayerInfo::has_signature() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void PlayerInfo::set_has_signature() {
  _has_bits_[0] |= 0x08000000u;
}
inline void PlayerInfo::clear_has_signature() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void PlayerInfo::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& PlayerInfo::signature() const {
  return *signature_;
}
inline void PlayerInfo::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerInfo::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerInfo::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* PlayerInfo::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 userType = 29;
inline bool PlayerInfo::has_usertype() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void PlayerInfo::set_has_usertype() {
  _has_bits_[0] |= 0x10000000u;
}
inline void PlayerInfo::clear_has_usertype() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void PlayerInfo::clear_usertype() {
  usertype_ = 0;
  clear_has_usertype();
}
inline ::google::protobuf::int32 PlayerInfo::usertype() const {
  return usertype_;
}
inline void PlayerInfo::set_usertype(::google::protobuf::int32 value) {
  set_has_usertype();
  usertype_ = value;
}

// -------------------------------------------------------------------

// GLRegisterLoginMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = GLRegisterLogin];
inline bool GLRegisterLoginMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GLRegisterLoginMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GLRegisterLoginMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GLRegisterLoginMessage::clear_msgid() {
  msgid_ = 102;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login GLRegisterLoginMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void GLRegisterLoginMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string serverInfo = 2;
inline bool GLRegisterLoginMessage::has_serverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GLRegisterLoginMessage::set_has_serverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GLRegisterLoginMessage::clear_has_serverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GLRegisterLoginMessage::clear_serverinfo() {
  if (serverinfo_ != &::google::protobuf::internal::kEmptyString) {
    serverinfo_->clear();
  }
  clear_has_serverinfo();
}
inline const ::std::string& GLRegisterLoginMessage::serverinfo() const {
  return *serverinfo_;
}
inline void GLRegisterLoginMessage::set_serverinfo(const ::std::string& value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void GLRegisterLoginMessage::set_serverinfo(const char* value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void GLRegisterLoginMessage::set_serverinfo(const char* value, size_t size) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GLRegisterLoginMessage::mutable_serverinfo() {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  return serverinfo_;
}
inline ::std::string* GLRegisterLoginMessage::release_serverinfo() {
  clear_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serverinfo_;
    serverinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// LGRegisterLoginMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = LGRegisterLogin];
inline bool LGRegisterLoginMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LGRegisterLoginMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LGRegisterLoginMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LGRegisterLoginMessage::clear_msgid() {
  msgid_ = 101;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login LGRegisterLoginMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void LGRegisterLoginMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string serverInfo = 2;
inline bool LGRegisterLoginMessage::has_serverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LGRegisterLoginMessage::set_has_serverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LGRegisterLoginMessage::clear_has_serverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LGRegisterLoginMessage::clear_serverinfo() {
  if (serverinfo_ != &::google::protobuf::internal::kEmptyString) {
    serverinfo_->clear();
  }
  clear_has_serverinfo();
}
inline const ::std::string& LGRegisterLoginMessage::serverinfo() const {
  return *serverinfo_;
}
inline void LGRegisterLoginMessage::set_serverinfo(const ::std::string& value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void LGRegisterLoginMessage::set_serverinfo(const char* value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void LGRegisterLoginMessage::set_serverinfo(const char* value, size_t size) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LGRegisterLoginMessage::mutable_serverinfo() {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  return serverinfo_;
}
inline ::std::string* LGRegisterLoginMessage::release_serverinfo() {
  clear_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serverinfo_;
    serverinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqLoginMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLogin];
inline bool ReqLoginMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLoginMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLoginMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLoginMessage::clear_msgid() {
  msgid_ = 103;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLoginMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLoginMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 type = 2;
inline bool ReqLoginMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqLoginMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqLoginMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqLoginMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqLoginMessage::type() const {
  return type_;
}
inline void ReqLoginMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required string platform = 3;
inline bool ReqLoginMessage::has_platform() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqLoginMessage::set_has_platform() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqLoginMessage::clear_has_platform() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqLoginMessage::clear_platform() {
  if (platform_ != &::google::protobuf::internal::kEmptyString) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& ReqLoginMessage::platform() const {
  return *platform_;
}
inline void ReqLoginMessage::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void ReqLoginMessage::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
}
inline void ReqLoginMessage::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    platform_ = new ::std::string;
  }
  return platform_;
}
inline ::std::string* ReqLoginMessage::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string username = 4;
inline bool ReqLoginMessage::has_username() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqLoginMessage::set_has_username() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqLoginMessage::clear_has_username() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqLoginMessage::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& ReqLoginMessage::username() const {
  return *username_;
}
inline void ReqLoginMessage::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqLoginMessage::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqLoginMessage::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* ReqLoginMessage::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string password = 5;
inline bool ReqLoginMessage::has_password() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqLoginMessage::set_has_password() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqLoginMessage::clear_has_password() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqLoginMessage::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ReqLoginMessage::password() const {
  return *password_;
}
inline void ReqLoginMessage::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqLoginMessage::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqLoginMessage::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ReqLoginMessage::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string verify = 6;
inline bool ReqLoginMessage::has_verify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqLoginMessage::set_has_verify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqLoginMessage::clear_has_verify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqLoginMessage::clear_verify() {
  if (verify_ != &::google::protobuf::internal::kEmptyString) {
    verify_->clear();
  }
  clear_has_verify();
}
inline const ::std::string& ReqLoginMessage::verify() const {
  return *verify_;
}
inline void ReqLoginMessage::set_verify(const ::std::string& value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqLoginMessage::set_verify(const char* value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqLoginMessage::set_verify(const char* value, size_t size) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_verify() {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  return verify_;
}
inline ::std::string* ReqLoginMessage::release_verify() {
  clear_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = verify_;
    verify_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string mac64 = 7;
inline bool ReqLoginMessage::has_mac64() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqLoginMessage::set_has_mac64() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqLoginMessage::clear_has_mac64() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqLoginMessage::clear_mac64() {
  if (mac64_ != &::google::protobuf::internal::kEmptyString) {
    mac64_->clear();
  }
  clear_has_mac64();
}
inline const ::std::string& ReqLoginMessage::mac64() const {
  return *mac64_;
}
inline void ReqLoginMessage::set_mac64(const ::std::string& value) {
  set_has_mac64();
  if (mac64_ == &::google::protobuf::internal::kEmptyString) {
    mac64_ = new ::std::string;
  }
  mac64_->assign(value);
}
inline void ReqLoginMessage::set_mac64(const char* value) {
  set_has_mac64();
  if (mac64_ == &::google::protobuf::internal::kEmptyString) {
    mac64_ = new ::std::string;
  }
  mac64_->assign(value);
}
inline void ReqLoginMessage::set_mac64(const char* value, size_t size) {
  set_has_mac64();
  if (mac64_ == &::google::protobuf::internal::kEmptyString) {
    mac64_ = new ::std::string;
  }
  mac64_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_mac64() {
  set_has_mac64();
  if (mac64_ == &::google::protobuf::internal::kEmptyString) {
    mac64_ = new ::std::string;
  }
  return mac64_;
}
inline ::std::string* ReqLoginMessage::release_mac64() {
  clear_has_mac64();
  if (mac64_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = mac64_;
    mac64_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string os = 8;
inline bool ReqLoginMessage::has_os() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqLoginMessage::set_has_os() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqLoginMessage::clear_has_os() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqLoginMessage::clear_os() {
  if (os_ != &::google::protobuf::internal::kEmptyString) {
    os_->clear();
  }
  clear_has_os();
}
inline const ::std::string& ReqLoginMessage::os() const {
  return *os_;
}
inline void ReqLoginMessage::set_os(const ::std::string& value) {
  set_has_os();
  if (os_ == &::google::protobuf::internal::kEmptyString) {
    os_ = new ::std::string;
  }
  os_->assign(value);
}
inline void ReqLoginMessage::set_os(const char* value) {
  set_has_os();
  if (os_ == &::google::protobuf::internal::kEmptyString) {
    os_ = new ::std::string;
  }
  os_->assign(value);
}
inline void ReqLoginMessage::set_os(const char* value, size_t size) {
  set_has_os();
  if (os_ == &::google::protobuf::internal::kEmptyString) {
    os_ = new ::std::string;
  }
  os_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_os() {
  set_has_os();
  if (os_ == &::google::protobuf::internal::kEmptyString) {
    os_ = new ::std::string;
  }
  return os_;
}
inline ::std::string* ReqLoginMessage::release_os() {
  clear_has_os();
  if (os_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = os_;
    os_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string version = 9;
inline bool ReqLoginMessage::has_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqLoginMessage::set_has_version() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqLoginMessage::clear_has_version() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqLoginMessage::clear_version() {
  if (version_ != &::google::protobuf::internal::kEmptyString) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& ReqLoginMessage::version() const {
  return *version_;
}
inline void ReqLoginMessage::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void ReqLoginMessage::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(value);
}
inline void ReqLoginMessage::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    version_ = new ::std::string;
  }
  return version_;
}
inline ::std::string* ReqLoginMessage::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string fr = 10;
inline bool ReqLoginMessage::has_fr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReqLoginMessage::set_has_fr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReqLoginMessage::clear_has_fr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReqLoginMessage::clear_fr() {
  if (fr_ != &::google::protobuf::internal::kEmptyString) {
    fr_->clear();
  }
  clear_has_fr();
}
inline const ::std::string& ReqLoginMessage::fr() const {
  return *fr_;
}
inline void ReqLoginMessage::set_fr(const ::std::string& value) {
  set_has_fr();
  if (fr_ == &::google::protobuf::internal::kEmptyString) {
    fr_ = new ::std::string;
  }
  fr_->assign(value);
}
inline void ReqLoginMessage::set_fr(const char* value) {
  set_has_fr();
  if (fr_ == &::google::protobuf::internal::kEmptyString) {
    fr_ = new ::std::string;
  }
  fr_->assign(value);
}
inline void ReqLoginMessage::set_fr(const char* value, size_t size) {
  set_has_fr();
  if (fr_ == &::google::protobuf::internal::kEmptyString) {
    fr_ = new ::std::string;
  }
  fr_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_fr() {
  set_has_fr();
  if (fr_ == &::google::protobuf::internal::kEmptyString) {
    fr_ = new ::std::string;
  }
  return fr_;
}
inline ::std::string* ReqLoginMessage::release_fr() {
  clear_has_fr();
  if (fr_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fr_;
    fr_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string uuid = 11;
inline bool ReqLoginMessage::has_uuid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReqLoginMessage::set_has_uuid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReqLoginMessage::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReqLoginMessage::clear_uuid() {
  if (uuid_ != &::google::protobuf::internal::kEmptyString) {
    uuid_->clear();
  }
  clear_has_uuid();
}
inline const ::std::string& ReqLoginMessage::uuid() const {
  return *uuid_;
}
inline void ReqLoginMessage::set_uuid(const ::std::string& value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void ReqLoginMessage::set_uuid(const char* value) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(value);
}
inline void ReqLoginMessage::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  uuid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_uuid() {
  set_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    uuid_ = new ::std::string;
  }
  return uuid_;
}
inline ::std::string* ReqLoginMessage::release_uuid() {
  clear_has_uuid();
  if (uuid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuid_;
    uuid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string uutoken = 12;
inline bool ReqLoginMessage::has_uutoken() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReqLoginMessage::set_has_uutoken() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReqLoginMessage::clear_has_uutoken() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReqLoginMessage::clear_uutoken() {
  if (uutoken_ != &::google::protobuf::internal::kEmptyString) {
    uutoken_->clear();
  }
  clear_has_uutoken();
}
inline const ::std::string& ReqLoginMessage::uutoken() const {
  return *uutoken_;
}
inline void ReqLoginMessage::set_uutoken(const ::std::string& value) {
  set_has_uutoken();
  if (uutoken_ == &::google::protobuf::internal::kEmptyString) {
    uutoken_ = new ::std::string;
  }
  uutoken_->assign(value);
}
inline void ReqLoginMessage::set_uutoken(const char* value) {
  set_has_uutoken();
  if (uutoken_ == &::google::protobuf::internal::kEmptyString) {
    uutoken_ = new ::std::string;
  }
  uutoken_->assign(value);
}
inline void ReqLoginMessage::set_uutoken(const char* value, size_t size) {
  set_has_uutoken();
  if (uutoken_ == &::google::protobuf::internal::kEmptyString) {
    uutoken_ = new ::std::string;
  }
  uutoken_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_uutoken() {
  set_has_uutoken();
  if (uutoken_ == &::google::protobuf::internal::kEmptyString) {
    uutoken_ = new ::std::string;
  }
  return uutoken_;
}
inline ::std::string* ReqLoginMessage::release_uutoken() {
  clear_has_uutoken();
  if (uutoken_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uutoken_;
    uutoken_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string uuchannel = 13;
inline bool ReqLoginMessage::has_uuchannel() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ReqLoginMessage::set_has_uuchannel() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ReqLoginMessage::clear_has_uuchannel() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ReqLoginMessage::clear_uuchannel() {
  if (uuchannel_ != &::google::protobuf::internal::kEmptyString) {
    uuchannel_->clear();
  }
  clear_has_uuchannel();
}
inline const ::std::string& ReqLoginMessage::uuchannel() const {
  return *uuchannel_;
}
inline void ReqLoginMessage::set_uuchannel(const ::std::string& value) {
  set_has_uuchannel();
  if (uuchannel_ == &::google::protobuf::internal::kEmptyString) {
    uuchannel_ = new ::std::string;
  }
  uuchannel_->assign(value);
}
inline void ReqLoginMessage::set_uuchannel(const char* value) {
  set_has_uuchannel();
  if (uuchannel_ == &::google::protobuf::internal::kEmptyString) {
    uuchannel_ = new ::std::string;
  }
  uuchannel_->assign(value);
}
inline void ReqLoginMessage::set_uuchannel(const char* value, size_t size) {
  set_has_uuchannel();
  if (uuchannel_ == &::google::protobuf::internal::kEmptyString) {
    uuchannel_ = new ::std::string;
  }
  uuchannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqLoginMessage::mutable_uuchannel() {
  set_has_uuchannel();
  if (uuchannel_ == &::google::protobuf::internal::kEmptyString) {
    uuchannel_ = new ::std::string;
  }
  return uuchannel_;
}
inline ::std::string* ReqLoginMessage::release_uuchannel() {
  clear_has_uuchannel();
  if (uuchannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = uuchannel_;
    uuchannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 gameId = 14;
inline bool ReqLoginMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ReqLoginMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ReqLoginMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ReqLoginMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ReqLoginMessage::gameid() const {
  return gameid_;
}
inline void ReqLoginMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ResLoginMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResLogin];
inline bool ResLoginMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResLoginMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResLoginMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResLoginMessage::clear_msgid() {
  msgid_ = 104;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResLoginMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResLoginMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string error = 2;
inline bool ResLoginMessage::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResLoginMessage::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResLoginMessage::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResLoginMessage::clear_error() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& ResLoginMessage::error() const {
  return *error_;
}
inline void ResLoginMessage::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ResLoginMessage::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ResLoginMessage::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLoginMessage::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  return error_;
}
inline ::std::string* ResLoginMessage::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .com.game.proto.PlayerInfo playerInfo = 3;
inline bool ResLoginMessage::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResLoginMessage::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResLoginMessage::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResLoginMessage::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::com::game::proto::PlayerInfo::Clear();
  clear_has_playerinfo();
}
inline const ::com::game::proto::PlayerInfo& ResLoginMessage::playerinfo() const {
  return playerinfo_ != NULL ? *playerinfo_ : *default_instance_->playerinfo_;
}
inline ::com::game::proto::PlayerInfo* ResLoginMessage::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) playerinfo_ = new ::com::game::proto::PlayerInfo;
  return playerinfo_;
}
inline ::com::game::proto::PlayerInfo* ResLoginMessage::release_playerinfo() {
  clear_has_playerinfo();
  ::com::game::proto::PlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}

// optional string password = 4;
inline bool ResLoginMessage::has_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResLoginMessage::set_has_password() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResLoginMessage::clear_has_password() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResLoginMessage::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ResLoginMessage::password() const {
  return *password_;
}
inline void ResLoginMessage::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ResLoginMessage::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ResLoginMessage::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLoginMessage::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ResLoginMessage::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated string serverlist = 5;
inline int ResLoginMessage::serverlist_size() const {
  return serverlist_.size();
}
inline void ResLoginMessage::clear_serverlist() {
  serverlist_.Clear();
}
inline const ::std::string& ResLoginMessage::serverlist(int index) const {
  return serverlist_.Get(index);
}
inline ::std::string* ResLoginMessage::mutable_serverlist(int index) {
  return serverlist_.Mutable(index);
}
inline void ResLoginMessage::set_serverlist(int index, const ::std::string& value) {
  serverlist_.Mutable(index)->assign(value);
}
inline void ResLoginMessage::set_serverlist(int index, const char* value) {
  serverlist_.Mutable(index)->assign(value);
}
inline void ResLoginMessage::set_serverlist(int index, const char* value, size_t size) {
  serverlist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLoginMessage::add_serverlist() {
  return serverlist_.Add();
}
inline void ResLoginMessage::add_serverlist(const ::std::string& value) {
  serverlist_.Add()->assign(value);
}
inline void ResLoginMessage::add_serverlist(const char* value) {
  serverlist_.Add()->assign(value);
}
inline void ResLoginMessage::add_serverlist(const char* value, size_t size) {
  serverlist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResLoginMessage::serverlist() const {
  return serverlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResLoginMessage::mutable_serverlist() {
  return &serverlist_;
}

// -------------------------------------------------------------------

// ResUpdateServerInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateServerInfo];
inline bool ResUpdateServerInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResUpdateServerInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResUpdateServerInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResUpdateServerInfoMessage::clear_msgid() {
  msgid_ = 120;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResUpdateServerInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResUpdateServerInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string serverInfo = 2;
inline bool ResUpdateServerInfoMessage::has_serverinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResUpdateServerInfoMessage::set_has_serverinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResUpdateServerInfoMessage::clear_has_serverinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResUpdateServerInfoMessage::clear_serverinfo() {
  if (serverinfo_ != &::google::protobuf::internal::kEmptyString) {
    serverinfo_->clear();
  }
  clear_has_serverinfo();
}
inline const ::std::string& ResUpdateServerInfoMessage::serverinfo() const {
  return *serverinfo_;
}
inline void ResUpdateServerInfoMessage::set_serverinfo(const ::std::string& value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void ResUpdateServerInfoMessage::set_serverinfo(const char* value) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(value);
}
inline void ResUpdateServerInfoMessage::set_serverinfo(const char* value, size_t size) {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  serverinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResUpdateServerInfoMessage::mutable_serverinfo() {
  set_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    serverinfo_ = new ::std::string;
  }
  return serverinfo_;
}
inline ::std::string* ResUpdateServerInfoMessage::release_serverinfo() {
  clear_has_serverinfo();
  if (serverinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serverinfo_;
    serverinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqHeartBeatMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHeartBeat];
inline bool ReqHeartBeatMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHeartBeatMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHeartBeatMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHeartBeatMessage::clear_msgid() {
  msgid_ = 115;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqHeartBeatMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqHeartBeatMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int64 dwTime = 2;
inline bool ReqHeartBeatMessage::has_dwtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqHeartBeatMessage::set_has_dwtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqHeartBeatMessage::clear_has_dwtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqHeartBeatMessage::clear_dwtime() {
  dwtime_ = GOOGLE_LONGLONG(0);
  clear_has_dwtime();
}
inline ::google::protobuf::int64 ReqHeartBeatMessage::dwtime() const {
  return dwtime_;
}
inline void ReqHeartBeatMessage::set_dwtime(::google::protobuf::int64 value) {
  set_has_dwtime();
  dwtime_ = value;
}

// -------------------------------------------------------------------

// ResHeartBeatMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResHeartBeat];
inline bool ResHeartBeatMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResHeartBeatMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResHeartBeatMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResHeartBeatMessage::clear_msgid() {
  msgid_ = 116;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResHeartBeatMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResHeartBeatMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int64 dwTime = 2;
inline bool ResHeartBeatMessage::has_dwtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResHeartBeatMessage::set_has_dwtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResHeartBeatMessage::clear_has_dwtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResHeartBeatMessage::clear_dwtime() {
  dwtime_ = GOOGLE_LONGLONG(0);
  clear_has_dwtime();
}
inline ::google::protobuf::int64 ResHeartBeatMessage::dwtime() const {
  return dwtime_;
}
inline void ResHeartBeatMessage::set_dwtime(::google::protobuf::int64 value) {
  set_has_dwtime();
  dwtime_ = value;
}

// -------------------------------------------------------------------

// ReqBindUserMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindUser];
inline bool ReqBindUserMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBindUserMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBindUserMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBindUserMessage::clear_msgid() {
  msgid_ = 131;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBindUserMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBindUserMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string deviceUniqueIdentifier = 2;
inline bool ReqBindUserMessage::has_deviceuniqueidentifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBindUserMessage::set_has_deviceuniqueidentifier() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBindUserMessage::clear_has_deviceuniqueidentifier() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBindUserMessage::clear_deviceuniqueidentifier() {
  if (deviceuniqueidentifier_ != &::google::protobuf::internal::kEmptyString) {
    deviceuniqueidentifier_->clear();
  }
  clear_has_deviceuniqueidentifier();
}
inline const ::std::string& ReqBindUserMessage::deviceuniqueidentifier() const {
  return *deviceuniqueidentifier_;
}
inline void ReqBindUserMessage::set_deviceuniqueidentifier(const ::std::string& value) {
  set_has_deviceuniqueidentifier();
  if (deviceuniqueidentifier_ == &::google::protobuf::internal::kEmptyString) {
    deviceuniqueidentifier_ = new ::std::string;
  }
  deviceuniqueidentifier_->assign(value);
}
inline void ReqBindUserMessage::set_deviceuniqueidentifier(const char* value) {
  set_has_deviceuniqueidentifier();
  if (deviceuniqueidentifier_ == &::google::protobuf::internal::kEmptyString) {
    deviceuniqueidentifier_ = new ::std::string;
  }
  deviceuniqueidentifier_->assign(value);
}
inline void ReqBindUserMessage::set_deviceuniqueidentifier(const char* value, size_t size) {
  set_has_deviceuniqueidentifier();
  if (deviceuniqueidentifier_ == &::google::protobuf::internal::kEmptyString) {
    deviceuniqueidentifier_ = new ::std::string;
  }
  deviceuniqueidentifier_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindUserMessage::mutable_deviceuniqueidentifier() {
  set_has_deviceuniqueidentifier();
  if (deviceuniqueidentifier_ == &::google::protobuf::internal::kEmptyString) {
    deviceuniqueidentifier_ = new ::std::string;
  }
  return deviceuniqueidentifier_;
}
inline ::std::string* ReqBindUserMessage::release_deviceuniqueidentifier() {
  clear_has_deviceuniqueidentifier();
  if (deviceuniqueidentifier_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = deviceuniqueidentifier_;
    deviceuniqueidentifier_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string username = 3;
inline bool ReqBindUserMessage::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBindUserMessage::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBindUserMessage::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBindUserMessage::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& ReqBindUserMessage::username() const {
  return *username_;
}
inline void ReqBindUserMessage::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqBindUserMessage::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void ReqBindUserMessage::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindUserMessage::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* ReqBindUserMessage::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string password1 = 4;
inline bool ReqBindUserMessage::has_password1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqBindUserMessage::set_has_password1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqBindUserMessage::clear_has_password1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqBindUserMessage::clear_password1() {
  if (password1_ != &::google::protobuf::internal::kEmptyString) {
    password1_->clear();
  }
  clear_has_password1();
}
inline const ::std::string& ReqBindUserMessage::password1() const {
  return *password1_;
}
inline void ReqBindUserMessage::set_password1(const ::std::string& value) {
  set_has_password1();
  if (password1_ == &::google::protobuf::internal::kEmptyString) {
    password1_ = new ::std::string;
  }
  password1_->assign(value);
}
inline void ReqBindUserMessage::set_password1(const char* value) {
  set_has_password1();
  if (password1_ == &::google::protobuf::internal::kEmptyString) {
    password1_ = new ::std::string;
  }
  password1_->assign(value);
}
inline void ReqBindUserMessage::set_password1(const char* value, size_t size) {
  set_has_password1();
  if (password1_ == &::google::protobuf::internal::kEmptyString) {
    password1_ = new ::std::string;
  }
  password1_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindUserMessage::mutable_password1() {
  set_has_password1();
  if (password1_ == &::google::protobuf::internal::kEmptyString) {
    password1_ = new ::std::string;
  }
  return password1_;
}
inline ::std::string* ReqBindUserMessage::release_password1() {
  clear_has_password1();
  if (password1_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password1_;
    password1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string password2 = 5;
inline bool ReqBindUserMessage::has_password2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqBindUserMessage::set_has_password2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqBindUserMessage::clear_has_password2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqBindUserMessage::clear_password2() {
  if (password2_ != &::google::protobuf::internal::kEmptyString) {
    password2_->clear();
  }
  clear_has_password2();
}
inline const ::std::string& ReqBindUserMessage::password2() const {
  return *password2_;
}
inline void ReqBindUserMessage::set_password2(const ::std::string& value) {
  set_has_password2();
  if (password2_ == &::google::protobuf::internal::kEmptyString) {
    password2_ = new ::std::string;
  }
  password2_->assign(value);
}
inline void ReqBindUserMessage::set_password2(const char* value) {
  set_has_password2();
  if (password2_ == &::google::protobuf::internal::kEmptyString) {
    password2_ = new ::std::string;
  }
  password2_->assign(value);
}
inline void ReqBindUserMessage::set_password2(const char* value, size_t size) {
  set_has_password2();
  if (password2_ == &::google::protobuf::internal::kEmptyString) {
    password2_ = new ::std::string;
  }
  password2_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindUserMessage::mutable_password2() {
  set_has_password2();
  if (password2_ == &::google::protobuf::internal::kEmptyString) {
    password2_ = new ::std::string;
  }
  return password2_;
}
inline ::std::string* ReqBindUserMessage::release_password2() {
  clear_has_password2();
  if (password2_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password2_;
    password2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResBindUserMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindUser];
inline bool ResBindUserMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBindUserMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBindUserMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBindUserMessage::clear_msgid() {
  msgid_ = 132;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBindUserMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBindUserMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 code = 2;
inline bool ResBindUserMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResBindUserMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResBindUserMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResBindUserMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ResBindUserMessage::code() const {
  return code_;
}
inline void ResBindUserMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// ReqBindPhoneMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindPhone];
inline bool ReqBindPhoneMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBindPhoneMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBindPhoneMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBindPhoneMessage::clear_msgid() {
  msgid_ = 133;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBindPhoneMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBindPhoneMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string verify = 3;
inline bool ReqBindPhoneMessage::has_verify() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBindPhoneMessage::set_has_verify() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBindPhoneMessage::clear_has_verify() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBindPhoneMessage::clear_verify() {
  if (verify_ != &::google::protobuf::internal::kEmptyString) {
    verify_->clear();
  }
  clear_has_verify();
}
inline const ::std::string& ReqBindPhoneMessage::verify() const {
  return *verify_;
}
inline void ReqBindPhoneMessage::set_verify(const ::std::string& value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqBindPhoneMessage::set_verify(const char* value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqBindPhoneMessage::set_verify(const char* value, size_t size) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindPhoneMessage::mutable_verify() {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  return verify_;
}
inline ::std::string* ReqBindPhoneMessage::release_verify() {
  clear_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = verify_;
    verify_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string password = 4;
inline bool ReqBindPhoneMessage::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBindPhoneMessage::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBindPhoneMessage::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBindPhoneMessage::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ReqBindPhoneMessage::password() const {
  return *password_;
}
inline void ReqBindPhoneMessage::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqBindPhoneMessage::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqBindPhoneMessage::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindPhoneMessage::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ReqBindPhoneMessage::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string phone = 5;
inline bool ReqBindPhoneMessage::has_phone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqBindPhoneMessage::set_has_phone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqBindPhoneMessage::clear_has_phone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqBindPhoneMessage::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& ReqBindPhoneMessage::phone() const {
  return *phone_;
}
inline void ReqBindPhoneMessage::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqBindPhoneMessage::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqBindPhoneMessage::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindPhoneMessage::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* ReqBindPhoneMessage::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 referrerID = 6;
inline bool ReqBindPhoneMessage::has_referrerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqBindPhoneMessage::set_has_referrerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqBindPhoneMessage::clear_has_referrerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqBindPhoneMessage::clear_referrerid() {
  referrerid_ = GOOGLE_LONGLONG(0);
  clear_has_referrerid();
}
inline ::google::protobuf::int64 ReqBindPhoneMessage::referrerid() const {
  return referrerid_;
}
inline void ReqBindPhoneMessage::set_referrerid(::google::protobuf::int64 value) {
  set_has_referrerid();
  referrerid_ = value;
}

// -------------------------------------------------------------------

// ResBindPhoneMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindPhone];
inline bool ResBindPhoneMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBindPhoneMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBindPhoneMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBindPhoneMessage::clear_msgid() {
  msgid_ = 134;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBindPhoneMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBindPhoneMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 code = 3;
inline bool ResBindPhoneMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResBindPhoneMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResBindPhoneMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResBindPhoneMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ResBindPhoneMessage::code() const {
  return code_;
}
inline void ResBindPhoneMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// ReqBindZFBMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindZFB];
inline bool ReqBindZFBMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBindZFBMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBindZFBMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBindZFBMessage::clear_msgid() {
  msgid_ = 135;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBindZFBMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBindZFBMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string name = 2;
inline bool ReqBindZFBMessage::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBindZFBMessage::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBindZFBMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBindZFBMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ReqBindZFBMessage::name() const {
  return *name_;
}
inline void ReqBindZFBMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqBindZFBMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqBindZFBMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindZFBMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ReqBindZFBMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string account = 3;
inline bool ReqBindZFBMessage::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBindZFBMessage::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBindZFBMessage::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBindZFBMessage::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& ReqBindZFBMessage::account() const {
  return *account_;
}
inline void ReqBindZFBMessage::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void ReqBindZFBMessage::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void ReqBindZFBMessage::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindZFBMessage::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* ReqBindZFBMessage::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResBindZFBMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindZFB];
inline bool ResBindZFBMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBindZFBMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBindZFBMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBindZFBMessage::clear_msgid() {
  msgid_ = 136;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBindZFBMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBindZFBMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 code = 2;
inline bool ResBindZFBMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResBindZFBMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResBindZFBMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResBindZFBMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ResBindZFBMessage::code() const {
  return code_;
}
inline void ResBindZFBMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// required string name = 3;
inline bool ResBindZFBMessage::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResBindZFBMessage::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResBindZFBMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResBindZFBMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ResBindZFBMessage::name() const {
  return *name_;
}
inline void ResBindZFBMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResBindZFBMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResBindZFBMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResBindZFBMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ResBindZFBMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string account = 4;
inline bool ResBindZFBMessage::has_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResBindZFBMessage::set_has_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResBindZFBMessage::clear_has_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResBindZFBMessage::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& ResBindZFBMessage::account() const {
  return *account_;
}
inline void ResBindZFBMessage::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void ResBindZFBMessage::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void ResBindZFBMessage::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResBindZFBMessage::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* ResBindZFBMessage::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqCanEnterSubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCanEnterSubGame];
inline bool ReqCanEnterSubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCanEnterSubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCanEnterSubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCanEnterSubGameMessage::clear_msgid() {
  msgid_ = 137;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqCanEnterSubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqCanEnterSubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ReqCanEnterSubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqCanEnterSubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqCanEnterSubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqCanEnterSubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ReqCanEnterSubGameMessage::gameid() const {
  return gameid_;
}
inline void ReqCanEnterSubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ResCanEnterSubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResCanEnterSubGame];
inline bool ResCanEnterSubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResCanEnterSubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResCanEnterSubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResCanEnterSubGameMessage::clear_msgid() {
  msgid_ = 138;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResCanEnterSubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResCanEnterSubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ResCanEnterSubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResCanEnterSubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResCanEnterSubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResCanEnterSubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ResCanEnterSubGameMessage::gameid() const {
  return gameid_;
}
inline void ResCanEnterSubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ReqLogin4SubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLogin4SubGame];
inline bool ReqLogin4SubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLogin4SubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLogin4SubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLogin4SubGameMessage::clear_msgid() {
  msgid_ = 141;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLogin4SubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLogin4SubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ReqLogin4SubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqLogin4SubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqLogin4SubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqLogin4SubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ReqLogin4SubGameMessage::gameid() const {
  return gameid_;
}
inline void ReqLogin4SubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional int32 isReconnect = 3;
inline bool ReqLogin4SubGameMessage::has_isreconnect() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqLogin4SubGameMessage::set_has_isreconnect() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqLogin4SubGameMessage::clear_has_isreconnect() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqLogin4SubGameMessage::clear_isreconnect() {
  isreconnect_ = 0;
  clear_has_isreconnect();
}
inline ::google::protobuf::int32 ReqLogin4SubGameMessage::isreconnect() const {
  return isreconnect_;
}
inline void ReqLogin4SubGameMessage::set_isreconnect(::google::protobuf::int32 value) {
  set_has_isreconnect();
  isreconnect_ = value;
}

// -------------------------------------------------------------------

// ReqPhoneVerifyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPhoneVerify];
inline bool ReqPhoneVerifyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPhoneVerifyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPhoneVerifyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPhoneVerifyMessage::clear_msgid() {
  msgid_ = 105;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqPhoneVerifyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqPhoneVerifyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string phone = 2;
inline bool ReqPhoneVerifyMessage::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPhoneVerifyMessage::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPhoneVerifyMessage::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPhoneVerifyMessage::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& ReqPhoneVerifyMessage::phone() const {
  return *phone_;
}
inline void ReqPhoneVerifyMessage::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqPhoneVerifyMessage::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqPhoneVerifyMessage::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqPhoneVerifyMessage::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* ReqPhoneVerifyMessage::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required bool isLogin = 3;
inline bool ReqPhoneVerifyMessage::has_islogin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqPhoneVerifyMessage::set_has_islogin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqPhoneVerifyMessage::clear_has_islogin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqPhoneVerifyMessage::clear_islogin() {
  islogin_ = false;
  clear_has_islogin();
}
inline bool ReqPhoneVerifyMessage::islogin() const {
  return islogin_;
}
inline void ReqPhoneVerifyMessage::set_islogin(bool value) {
  set_has_islogin();
  islogin_ = value;
}

// -------------------------------------------------------------------

// ResLogin4SubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResLogin4SubGame];
inline bool ResLogin4SubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResLogin4SubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResLogin4SubGameMessage::clear_msgid() {
  msgid_ = 142;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResLogin4SubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResLogin4SubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string error = 2;
inline bool ResLogin4SubGameMessage::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResLogin4SubGameMessage::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResLogin4SubGameMessage::clear_error() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& ResLogin4SubGameMessage::error() const {
  return *error_;
}
inline void ResLogin4SubGameMessage::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ResLogin4SubGameMessage::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(value);
}
inline void ResLogin4SubGameMessage::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLogin4SubGameMessage::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    error_ = new ::std::string;
  }
  return error_;
}
inline ::std::string* ResLogin4SubGameMessage::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 gameId = 3;
inline bool ResLogin4SubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResLogin4SubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResLogin4SubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ResLogin4SubGameMessage::gameid() const {
  return gameid_;
}
inline void ResLogin4SubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional int32 isReconnect = 4;
inline bool ResLogin4SubGameMessage::has_isreconnect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_isreconnect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResLogin4SubGameMessage::clear_has_isreconnect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResLogin4SubGameMessage::clear_isreconnect() {
  isreconnect_ = 0;
  clear_has_isreconnect();
}
inline ::google::protobuf::int32 ResLogin4SubGameMessage::isreconnect() const {
  return isreconnect_;
}
inline void ResLogin4SubGameMessage::set_isreconnect(::google::protobuf::int32 value) {
  set_has_isreconnect();
  isreconnect_ = value;
}

// optional int32 mapModelId = 5;
inline bool ResLogin4SubGameMessage::has_mapmodelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_mapmodelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResLogin4SubGameMessage::clear_has_mapmodelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResLogin4SubGameMessage::clear_mapmodelid() {
  mapmodelid_ = 0;
  clear_has_mapmodelid();
}
inline ::google::protobuf::int32 ResLogin4SubGameMessage::mapmodelid() const {
  return mapmodelid_;
}
inline void ResLogin4SubGameMessage::set_mapmodelid(::google::protobuf::int32 value) {
  set_has_mapmodelid();
  mapmodelid_ = value;
}

// optional string fishIp = 6;
inline bool ResLogin4SubGameMessage::has_fiship() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_fiship() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResLogin4SubGameMessage::clear_has_fiship() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResLogin4SubGameMessage::clear_fiship() {
  if (fiship_ != &::google::protobuf::internal::kEmptyString) {
    fiship_->clear();
  }
  clear_has_fiship();
}
inline const ::std::string& ResLogin4SubGameMessage::fiship() const {
  return *fiship_;
}
inline void ResLogin4SubGameMessage::set_fiship(const ::std::string& value) {
  set_has_fiship();
  if (fiship_ == &::google::protobuf::internal::kEmptyString) {
    fiship_ = new ::std::string;
  }
  fiship_->assign(value);
}
inline void ResLogin4SubGameMessage::set_fiship(const char* value) {
  set_has_fiship();
  if (fiship_ == &::google::protobuf::internal::kEmptyString) {
    fiship_ = new ::std::string;
  }
  fiship_->assign(value);
}
inline void ResLogin4SubGameMessage::set_fiship(const char* value, size_t size) {
  set_has_fiship();
  if (fiship_ == &::google::protobuf::internal::kEmptyString) {
    fiship_ = new ::std::string;
  }
  fiship_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLogin4SubGameMessage::mutable_fiship() {
  set_has_fiship();
  if (fiship_ == &::google::protobuf::internal::kEmptyString) {
    fiship_ = new ::std::string;
  }
  return fiship_;
}
inline ::std::string* ResLogin4SubGameMessage::release_fiship() {
  clear_has_fiship();
  if (fiship_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fiship_;
    fiship_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 fishPort = 7;
inline bool ResLogin4SubGameMessage::has_fishport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResLogin4SubGameMessage::set_has_fishport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResLogin4SubGameMessage::clear_has_fishport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResLogin4SubGameMessage::clear_fishport() {
  fishport_ = 0;
  clear_has_fishport();
}
inline ::google::protobuf::int32 ResLogin4SubGameMessage::fishport() const {
  return fishport_;
}
inline void ResLogin4SubGameMessage::set_fishport(::google::protobuf::int32 value) {
  set_has_fishport();
  fishport_ = value;
}

// -------------------------------------------------------------------

// ReqQuit4SubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqQuit4SubGame];
inline bool ReqQuit4SubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqQuit4SubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqQuit4SubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqQuit4SubGameMessage::clear_msgid() {
  msgid_ = 143;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqQuit4SubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqQuit4SubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ReqQuit4SubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqQuit4SubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqQuit4SubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqQuit4SubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ReqQuit4SubGameMessage::gameid() const {
  return gameid_;
}
inline void ReqQuit4SubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ResQuit4SubGameMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResQuit4SubGame];
inline bool ResQuit4SubGameMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResQuit4SubGameMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResQuit4SubGameMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResQuit4SubGameMessage::clear_msgid() {
  msgid_ = 144;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResQuit4SubGameMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResQuit4SubGameMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 gameId = 2;
inline bool ResQuit4SubGameMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResQuit4SubGameMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResQuit4SubGameMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResQuit4SubGameMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ResQuit4SubGameMessage::gameid() const {
  return gameid_;
}
inline void ResQuit4SubGameMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ResUpdateMoney1Message

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateMoney1];
inline bool ResUpdateMoney1Message::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResUpdateMoney1Message::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResUpdateMoney1Message::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResUpdateMoney1Message::clear_msgid() {
  msgid_ = 151;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResUpdateMoney1Message::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResUpdateMoney1Message::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required double money1 = 2;
inline bool ResUpdateMoney1Message::has_money1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResUpdateMoney1Message::set_has_money1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResUpdateMoney1Message::clear_has_money1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResUpdateMoney1Message::clear_money1() {
  money1_ = 0;
  clear_has_money1();
}
inline double ResUpdateMoney1Message::money1() const {
  return money1_;
}
inline void ResUpdateMoney1Message::set_money1(double value) {
  set_has_money1();
  money1_ = value;
}

// -------------------------------------------------------------------

// ResUpdateMoney2Message

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResUpdateMoney2];
inline bool ResUpdateMoney2Message::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResUpdateMoney2Message::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResUpdateMoney2Message::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResUpdateMoney2Message::clear_msgid() {
  msgid_ = 152;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResUpdateMoney2Message::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResUpdateMoney2Message::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required double money2 = 2;
inline bool ResUpdateMoney2Message::has_money2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResUpdateMoney2Message::set_has_money2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResUpdateMoney2Message::clear_has_money2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResUpdateMoney2Message::clear_money2() {
  money2_ = 0;
  clear_has_money2();
}
inline double ResUpdateMoney2Message::money2() const {
  return money2_;
}
inline void ResUpdateMoney2Message::set_money2(double value) {
  set_has_money2();
  money2_ = value;
}

// -------------------------------------------------------------------

// ReqClientLoadstringMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqClientLoadstring];
inline bool ReqClientLoadstringMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqClientLoadstringMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqClientLoadstringMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqClientLoadstringMessage::clear_msgid() {
  msgid_ = 161;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqClientLoadstringMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqClientLoadstringMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string luals = 2;
inline bool ReqClientLoadstringMessage::has_luals() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqClientLoadstringMessage::set_has_luals() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqClientLoadstringMessage::clear_has_luals() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqClientLoadstringMessage::clear_luals() {
  if (luals_ != &::google::protobuf::internal::kEmptyString) {
    luals_->clear();
  }
  clear_has_luals();
}
inline const ::std::string& ReqClientLoadstringMessage::luals() const {
  return *luals_;
}
inline void ReqClientLoadstringMessage::set_luals(const ::std::string& value) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(value);
}
inline void ReqClientLoadstringMessage::set_luals(const char* value) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(value);
}
inline void ReqClientLoadstringMessage::set_luals(const char* value, size_t size) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqClientLoadstringMessage::mutable_luals() {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  return luals_;
}
inline ::std::string* ReqClientLoadstringMessage::release_luals() {
  clear_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = luals_;
    luals_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResClientLoadstringMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResClientLoadstring];
inline bool ResClientLoadstringMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResClientLoadstringMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResClientLoadstringMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResClientLoadstringMessage::clear_msgid() {
  msgid_ = 162;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResClientLoadstringMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResClientLoadstringMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string luals = 2;
inline bool ResClientLoadstringMessage::has_luals() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResClientLoadstringMessage::set_has_luals() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResClientLoadstringMessage::clear_has_luals() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResClientLoadstringMessage::clear_luals() {
  if (luals_ != &::google::protobuf::internal::kEmptyString) {
    luals_->clear();
  }
  clear_has_luals();
}
inline const ::std::string& ResClientLoadstringMessage::luals() const {
  return *luals_;
}
inline void ResClientLoadstringMessage::set_luals(const ::std::string& value) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(value);
}
inline void ResClientLoadstringMessage::set_luals(const char* value) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(value);
}
inline void ResClientLoadstringMessage::set_luals(const char* value, size_t size) {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  luals_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResClientLoadstringMessage::mutable_luals() {
  set_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    luals_ = new ::std::string;
  }
  return luals_;
}
inline ::std::string* ResClientLoadstringMessage::release_luals() {
  clear_has_luals();
  if (luals_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = luals_;
    luals_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqChatMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChat];
inline bool ReqChatMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChatMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChatMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChatMessage::clear_msgid() {
  msgid_ = 163;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqChatMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqChatMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 chatType = 2;
inline bool ReqChatMessage::has_chattype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChatMessage::set_has_chattype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChatMessage::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChatMessage::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::google::protobuf::int32 ReqChatMessage::chattype() const {
  return chattype_;
}
inline void ReqChatMessage::set_chattype(::google::protobuf::int32 value) {
  set_has_chattype();
  chattype_ = value;
}

// optional int64 toPlayerId = 3;
inline bool ReqChatMessage::has_toplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqChatMessage::set_has_toplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqChatMessage::clear_has_toplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqChatMessage::clear_toplayerid() {
  toplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_toplayerid();
}
inline ::google::protobuf::int64 ReqChatMessage::toplayerid() const {
  return toplayerid_;
}
inline void ReqChatMessage::set_toplayerid(::google::protobuf::int64 value) {
  set_has_toplayerid();
  toplayerid_ = value;
}

// optional string content = 4;
inline bool ReqChatMessage::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqChatMessage::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqChatMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqChatMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ReqChatMessage::content() const {
  return *content_;
}
inline void ReqChatMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqChatMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ReqChatMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResChatMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResChat];
inline bool ResChatMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResChatMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResChatMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResChatMessage::clear_msgid() {
  msgid_ = 164;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResChatMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResChatMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 chatType = 2;
inline bool ResChatMessage::has_chattype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResChatMessage::set_has_chattype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResChatMessage::clear_has_chattype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResChatMessage::clear_chattype() {
  chattype_ = 0;
  clear_has_chattype();
}
inline ::google::protobuf::int32 ResChatMessage::chattype() const {
  return chattype_;
}
inline void ResChatMessage::set_chattype(::google::protobuf::int32 value) {
  set_has_chattype();
  chattype_ = value;
}

// optional int64 toPlayerId = 3;
inline bool ResChatMessage::has_toplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResChatMessage::set_has_toplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResChatMessage::clear_has_toplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResChatMessage::clear_toplayerid() {
  toplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_toplayerid();
}
inline ::google::protobuf::int64 ResChatMessage::toplayerid() const {
  return toplayerid_;
}
inline void ResChatMessage::set_toplayerid(::google::protobuf::int64 value) {
  set_has_toplayerid();
  toplayerid_ = value;
}

// optional string content = 4;
inline bool ResChatMessage::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResChatMessage::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResChatMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResChatMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ResChatMessage::content() const {
  return *content_;
}
inline void ResChatMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ResChatMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ResChatMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResChatMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ResChatMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string icon = 5;
inline bool ResChatMessage::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResChatMessage::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResChatMessage::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResChatMessage::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& ResChatMessage::icon() const {
  return *icon_;
}
inline void ResChatMessage::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ResChatMessage::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ResChatMessage::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResChatMessage::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* ResChatMessage::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 vip = 6;
inline bool ResChatMessage::has_vip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResChatMessage::set_has_vip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResChatMessage::clear_has_vip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResChatMessage::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 ResChatMessage::vip() const {
  return vip_;
}
inline void ResChatMessage::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional string name = 7;
inline bool ResChatMessage::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResChatMessage::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResChatMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResChatMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ResChatMessage::name() const {
  return *name_;
}
inline void ResChatMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResChatMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResChatMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResChatMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ResChatMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 playerId = 8;
inline bool ResChatMessage::has_playerid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResChatMessage::set_has_playerid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResChatMessage::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResChatMessage::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 ResChatMessage::playerid() const {
  return playerid_;
}
inline void ResChatMessage::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// ReqTopListDataMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTopListData];
inline bool ReqTopListDataMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTopListDataMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTopListDataMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTopListDataMessage::clear_msgid() {
  msgid_ = 165;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqTopListDataMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqTopListDataMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool ReqTopListDataMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqTopListDataMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqTopListDataMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqTopListDataMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqTopListDataMessage::type() const {
  return type_;
}
inline void ReqTopListDataMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ResTopListDataMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResTopListData];
inline bool ResTopListDataMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResTopListDataMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResTopListDataMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResTopListDataMessage::clear_msgid() {
  msgid_ = 166;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResTopListDataMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResTopListDataMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool ResTopListDataMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResTopListDataMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResTopListDataMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResTopListDataMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ResTopListDataMessage::type() const {
  return type_;
}
inline void ResTopListDataMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .com.game.proto.MoneyTopData moneyTopData = 3;
inline int ResTopListDataMessage::moneytopdata_size() const {
  return moneytopdata_.size();
}
inline void ResTopListDataMessage::clear_moneytopdata() {
  moneytopdata_.Clear();
}
inline const ::com::game::proto::MoneyTopData& ResTopListDataMessage::moneytopdata(int index) const {
  return moneytopdata_.Get(index);
}
inline ::com::game::proto::MoneyTopData* ResTopListDataMessage::mutable_moneytopdata(int index) {
  return moneytopdata_.Mutable(index);
}
inline ::com::game::proto::MoneyTopData* ResTopListDataMessage::add_moneytopdata() {
  return moneytopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MoneyTopData >&
ResTopListDataMessage::moneytopdata() const {
  return moneytopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MoneyTopData >*
ResTopListDataMessage::mutable_moneytopdata() {
  return &moneytopdata_;
}

// repeated .com.game.proto.CharmTopData charmTopData = 4;
inline int ResTopListDataMessage::charmtopdata_size() const {
  return charmtopdata_.size();
}
inline void ResTopListDataMessage::clear_charmtopdata() {
  charmtopdata_.Clear();
}
inline const ::com::game::proto::CharmTopData& ResTopListDataMessage::charmtopdata(int index) const {
  return charmtopdata_.Get(index);
}
inline ::com::game::proto::CharmTopData* ResTopListDataMessage::mutable_charmtopdata(int index) {
  return charmtopdata_.Mutable(index);
}
inline ::com::game::proto::CharmTopData* ResTopListDataMessage::add_charmtopdata() {
  return charmtopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::CharmTopData >&
ResTopListDataMessage::charmtopdata() const {
  return charmtopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::CharmTopData >*
ResTopListDataMessage::mutable_charmtopdata() {
  return &charmtopdata_;
}

// repeated .com.game.proto.OnlineTopData onlineTopData = 5;
inline int ResTopListDataMessage::onlinetopdata_size() const {
  return onlinetopdata_.size();
}
inline void ResTopListDataMessage::clear_onlinetopdata() {
  onlinetopdata_.Clear();
}
inline const ::com::game::proto::OnlineTopData& ResTopListDataMessage::onlinetopdata(int index) const {
  return onlinetopdata_.Get(index);
}
inline ::com::game::proto::OnlineTopData* ResTopListDataMessage::mutable_onlinetopdata(int index) {
  return onlinetopdata_.Mutable(index);
}
inline ::com::game::proto::OnlineTopData* ResTopListDataMessage::add_onlinetopdata() {
  return onlinetopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::OnlineTopData >&
ResTopListDataMessage::onlinetopdata() const {
  return onlinetopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::OnlineTopData >*
ResTopListDataMessage::mutable_onlinetopdata() {
  return &onlinetopdata_;
}

// repeated .com.game.proto.TotalMoneyTopData totalMoneyTopData = 6;
inline int ResTopListDataMessage::totalmoneytopdata_size() const {
  return totalmoneytopdata_.size();
}
inline void ResTopListDataMessage::clear_totalmoneytopdata() {
  totalmoneytopdata_.Clear();
}
inline const ::com::game::proto::TotalMoneyTopData& ResTopListDataMessage::totalmoneytopdata(int index) const {
  return totalmoneytopdata_.Get(index);
}
inline ::com::game::proto::TotalMoneyTopData* ResTopListDataMessage::mutable_totalmoneytopdata(int index) {
  return totalmoneytopdata_.Mutable(index);
}
inline ::com::game::proto::TotalMoneyTopData* ResTopListDataMessage::add_totalmoneytopdata() {
  return totalmoneytopdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::TotalMoneyTopData >&
ResTopListDataMessage::totalmoneytopdata() const {
  return totalmoneytopdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::TotalMoneyTopData >*
ResTopListDataMessage::mutable_totalmoneytopdata() {
  return &totalmoneytopdata_;
}

// optional double selfWin = 7;
inline bool ResTopListDataMessage::has_selfwin() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResTopListDataMessage::set_has_selfwin() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResTopListDataMessage::clear_has_selfwin() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResTopListDataMessage::clear_selfwin() {
  selfwin_ = 0;
  clear_has_selfwin();
}
inline double ResTopListDataMessage::selfwin() const {
  return selfwin_;
}
inline void ResTopListDataMessage::set_selfwin(double value) {
  set_has_selfwin();
  selfwin_ = value;
}

// optional int32 selfCharm = 8;
inline bool ResTopListDataMessage::has_selfcharm() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResTopListDataMessage::set_has_selfcharm() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResTopListDataMessage::clear_has_selfcharm() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResTopListDataMessage::clear_selfcharm() {
  selfcharm_ = 0;
  clear_has_selfcharm();
}
inline ::google::protobuf::int32 ResTopListDataMessage::selfcharm() const {
  return selfcharm_;
}
inline void ResTopListDataMessage::set_selfcharm(::google::protobuf::int32 value) {
  set_has_selfcharm();
  selfcharm_ = value;
}

// optional int64 selfOnlineTime = 9;
inline bool ResTopListDataMessage::has_selfonlinetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ResTopListDataMessage::set_has_selfonlinetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ResTopListDataMessage::clear_has_selfonlinetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ResTopListDataMessage::clear_selfonlinetime() {
  selfonlinetime_ = GOOGLE_LONGLONG(0);
  clear_has_selfonlinetime();
}
inline ::google::protobuf::int64 ResTopListDataMessage::selfonlinetime() const {
  return selfonlinetime_;
}
inline void ResTopListDataMessage::set_selfonlinetime(::google::protobuf::int64 value) {
  set_has_selfonlinetime();
  selfonlinetime_ = value;
}

// optional double selfTotalMoney = 10;
inline bool ResTopListDataMessage::has_selftotalmoney() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ResTopListDataMessage::set_has_selftotalmoney() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ResTopListDataMessage::clear_has_selftotalmoney() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ResTopListDataMessage::clear_selftotalmoney() {
  selftotalmoney_ = 0;
  clear_has_selftotalmoney();
}
inline double ResTopListDataMessage::selftotalmoney() const {
  return selftotalmoney_;
}
inline void ResTopListDataMessage::set_selftotalmoney(double value) {
  set_has_selftotalmoney();
  selftotalmoney_ = value;
}

// -------------------------------------------------------------------

// MoneyTopData

// required int64 id = 1;
inline bool MoneyTopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyTopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyTopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyTopData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 MoneyTopData::id() const {
  return id_;
}
inline void MoneyTopData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 rank = 2;
inline bool MoneyTopData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyTopData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyTopData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyTopData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 MoneyTopData::rank() const {
  return rank_;
}
inline void MoneyTopData::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// required double money = 3;
inline bool MoneyTopData::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoneyTopData::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoneyTopData::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoneyTopData::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline double MoneyTopData::money() const {
  return money_;
}
inline void MoneyTopData::set_money(double value) {
  set_has_money();
  money_ = value;
}

// required string name = 4;
inline bool MoneyTopData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoneyTopData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoneyTopData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoneyTopData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MoneyTopData::name() const {
  return *name_;
}
inline void MoneyTopData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MoneyTopData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MoneyTopData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyTopData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* MoneyTopData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string icon = 5;
inline bool MoneyTopData::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MoneyTopData::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MoneyTopData::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MoneyTopData::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& MoneyTopData::icon() const {
  return *icon_;
}
inline void MoneyTopData::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void MoneyTopData::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void MoneyTopData::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyTopData::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* MoneyTopData::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 sex = 6;
inline bool MoneyTopData::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MoneyTopData::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MoneyTopData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MoneyTopData::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 MoneyTopData::sex() const {
  return sex_;
}
inline void MoneyTopData::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 vip = 7;
inline bool MoneyTopData::has_vip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MoneyTopData::set_has_vip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MoneyTopData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MoneyTopData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 MoneyTopData::vip() const {
  return vip_;
}
inline void MoneyTopData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// required int32 headIcon = 8;
inline bool MoneyTopData::has_headicon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MoneyTopData::set_has_headicon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MoneyTopData::clear_has_headicon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MoneyTopData::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 MoneyTopData::headicon() const {
  return headicon_;
}
inline void MoneyTopData::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
}

// -------------------------------------------------------------------

// CharmTopData

// required int64 id = 1;
inline bool CharmTopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharmTopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharmTopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharmTopData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 CharmTopData::id() const {
  return id_;
}
inline void CharmTopData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 rank = 2;
inline bool CharmTopData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharmTopData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharmTopData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharmTopData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 CharmTopData::rank() const {
  return rank_;
}
inline void CharmTopData::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// required int32 charm = 3;
inline bool CharmTopData::has_charm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharmTopData::set_has_charm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharmTopData::clear_has_charm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharmTopData::clear_charm() {
  charm_ = 0;
  clear_has_charm();
}
inline ::google::protobuf::int32 CharmTopData::charm() const {
  return charm_;
}
inline void CharmTopData::set_charm(::google::protobuf::int32 value) {
  set_has_charm();
  charm_ = value;
}

// required string name = 4;
inline bool CharmTopData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharmTopData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharmTopData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharmTopData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CharmTopData::name() const {
  return *name_;
}
inline void CharmTopData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharmTopData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CharmTopData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharmTopData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* CharmTopData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string icon = 5;
inline bool CharmTopData::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharmTopData::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharmTopData::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharmTopData::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& CharmTopData::icon() const {
  return *icon_;
}
inline void CharmTopData::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void CharmTopData::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void CharmTopData::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CharmTopData::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* CharmTopData::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 sex = 6;
inline bool CharmTopData::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CharmTopData::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CharmTopData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CharmTopData::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 CharmTopData::sex() const {
  return sex_;
}
inline void CharmTopData::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 vip = 7;
inline bool CharmTopData::has_vip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CharmTopData::set_has_vip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CharmTopData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CharmTopData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 CharmTopData::vip() const {
  return vip_;
}
inline void CharmTopData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// required int32 headIcon = 8;
inline bool CharmTopData::has_headicon() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CharmTopData::set_has_headicon() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CharmTopData::clear_has_headicon() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CharmTopData::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 CharmTopData::headicon() const {
  return headicon_;
}
inline void CharmTopData::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
}

// -------------------------------------------------------------------

// OnlineTopData

// required int64 id = 1;
inline bool OnlineTopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineTopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineTopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineTopData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 OnlineTopData::id() const {
  return id_;
}
inline void OnlineTopData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 rank = 2;
inline bool OnlineTopData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineTopData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineTopData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineTopData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 OnlineTopData::rank() const {
  return rank_;
}
inline void OnlineTopData::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// required int64 onlineTime = 3;
inline bool OnlineTopData::has_onlinetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlineTopData::set_has_onlinetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlineTopData::clear_has_onlinetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlineTopData::clear_onlinetime() {
  onlinetime_ = GOOGLE_LONGLONG(0);
  clear_has_onlinetime();
}
inline ::google::protobuf::int64 OnlineTopData::onlinetime() const {
  return onlinetime_;
}
inline void OnlineTopData::set_onlinetime(::google::protobuf::int64 value) {
  set_has_onlinetime();
  onlinetime_ = value;
}

// required string name = 4;
inline bool OnlineTopData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnlineTopData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnlineTopData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnlineTopData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& OnlineTopData::name() const {
  return *name_;
}
inline void OnlineTopData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OnlineTopData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void OnlineTopData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnlineTopData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* OnlineTopData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string icon = 5;
inline bool OnlineTopData::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OnlineTopData::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OnlineTopData::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OnlineTopData::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& OnlineTopData::icon() const {
  return *icon_;
}
inline void OnlineTopData::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void OnlineTopData::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void OnlineTopData::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OnlineTopData::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* OnlineTopData::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 sex = 6;
inline bool OnlineTopData::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OnlineTopData::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OnlineTopData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OnlineTopData::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 OnlineTopData::sex() const {
  return sex_;
}
inline void OnlineTopData::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 vip = 7;
inline bool OnlineTopData::has_vip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OnlineTopData::set_has_vip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OnlineTopData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OnlineTopData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 OnlineTopData::vip() const {
  return vip_;
}
inline void OnlineTopData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// required double totalMoney = 8;
inline bool OnlineTopData::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OnlineTopData::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OnlineTopData::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OnlineTopData::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
inline double OnlineTopData::totalmoney() const {
  return totalmoney_;
}
inline void OnlineTopData::set_totalmoney(double value) {
  set_has_totalmoney();
  totalmoney_ = value;
}

// required int32 headIcon = 9;
inline bool OnlineTopData::has_headicon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OnlineTopData::set_has_headicon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OnlineTopData::clear_has_headicon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OnlineTopData::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 OnlineTopData::headicon() const {
  return headicon_;
}
inline void OnlineTopData::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
}

// -------------------------------------------------------------------

// TotalMoneyTopData

// required int64 id = 1;
inline bool TotalMoneyTopData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TotalMoneyTopData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TotalMoneyTopData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TotalMoneyTopData::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 TotalMoneyTopData::id() const {
  return id_;
}
inline void TotalMoneyTopData::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 rank = 2;
inline bool TotalMoneyTopData::has_rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TotalMoneyTopData::set_has_rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TotalMoneyTopData::clear_has_rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TotalMoneyTopData::clear_rank() {
  rank_ = 0;
  clear_has_rank();
}
inline ::google::protobuf::int32 TotalMoneyTopData::rank() const {
  return rank_;
}
inline void TotalMoneyTopData::set_rank(::google::protobuf::int32 value) {
  set_has_rank();
  rank_ = value;
}

// required double totalMoney = 3;
inline bool TotalMoneyTopData::has_totalmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TotalMoneyTopData::set_has_totalmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TotalMoneyTopData::clear_has_totalmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TotalMoneyTopData::clear_totalmoney() {
  totalmoney_ = 0;
  clear_has_totalmoney();
}
inline double TotalMoneyTopData::totalmoney() const {
  return totalmoney_;
}
inline void TotalMoneyTopData::set_totalmoney(double value) {
  set_has_totalmoney();
  totalmoney_ = value;
}

// required string name = 4;
inline bool TotalMoneyTopData::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TotalMoneyTopData::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TotalMoneyTopData::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TotalMoneyTopData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TotalMoneyTopData::name() const {
  return *name_;
}
inline void TotalMoneyTopData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TotalMoneyTopData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TotalMoneyTopData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TotalMoneyTopData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TotalMoneyTopData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string icon = 5;
inline bool TotalMoneyTopData::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TotalMoneyTopData::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TotalMoneyTopData::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TotalMoneyTopData::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& TotalMoneyTopData::icon() const {
  return *icon_;
}
inline void TotalMoneyTopData::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void TotalMoneyTopData::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void TotalMoneyTopData::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TotalMoneyTopData::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* TotalMoneyTopData::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 sex = 6;
inline bool TotalMoneyTopData::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TotalMoneyTopData::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TotalMoneyTopData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TotalMoneyTopData::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 TotalMoneyTopData::sex() const {
  return sex_;
}
inline void TotalMoneyTopData::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// required int32 vip = 7;
inline bool TotalMoneyTopData::has_vip() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TotalMoneyTopData::set_has_vip() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TotalMoneyTopData::clear_has_vip() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TotalMoneyTopData::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 TotalMoneyTopData::vip() const {
  return vip_;
}
inline void TotalMoneyTopData::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// required int32 charm = 8;
inline bool TotalMoneyTopData::has_charm() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TotalMoneyTopData::set_has_charm() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TotalMoneyTopData::clear_has_charm() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TotalMoneyTopData::clear_charm() {
  charm_ = 0;
  clear_has_charm();
}
inline ::google::protobuf::int32 TotalMoneyTopData::charm() const {
  return charm_;
}
inline void TotalMoneyTopData::set_charm(::google::protobuf::int32 value) {
  set_has_charm();
  charm_ = value;
}

// required int32 headIcon = 9;
inline bool TotalMoneyTopData::has_headicon() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TotalMoneyTopData::set_has_headicon() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TotalMoneyTopData::clear_has_headicon() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TotalMoneyTopData::clear_headicon() {
  headicon_ = 0;
  clear_has_headicon();
}
inline ::google::protobuf::int32 TotalMoneyTopData::headicon() const {
  return headicon_;
}
inline void TotalMoneyTopData::set_headicon(::google::protobuf::int32 value) {
  set_has_headicon();
  headicon_ = value;
}

// -------------------------------------------------------------------

// ReqGameRecordPanelMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGameRecordPanel];
inline bool ReqGameRecordPanelMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGameRecordPanelMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGameRecordPanelMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGameRecordPanelMessage::clear_msgid() {
  msgid_ = 180;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGameRecordPanelMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGameRecordPanelMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int32 gameIds = 2;
inline int ReqGameRecordPanelMessage::gameids_size() const {
  return gameids_.size();
}
inline void ReqGameRecordPanelMessage::clear_gameids() {
  gameids_.Clear();
}
inline ::google::protobuf::int32 ReqGameRecordPanelMessage::gameids(int index) const {
  return gameids_.Get(index);
}
inline void ReqGameRecordPanelMessage::set_gameids(int index, ::google::protobuf::int32 value) {
  gameids_.Set(index, value);
}
inline void ReqGameRecordPanelMessage::add_gameids(::google::protobuf::int32 value) {
  gameids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ReqGameRecordPanelMessage::gameids() const {
  return gameids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ReqGameRecordPanelMessage::mutable_gameids() {
  return &gameids_;
}

// -------------------------------------------------------------------

// ResGameRecordPanelMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResGameRecordPanel];
inline bool ResGameRecordPanelMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResGameRecordPanelMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResGameRecordPanelMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResGameRecordPanelMessage::clear_msgid() {
  msgid_ = 181;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResGameRecordPanelMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResGameRecordPanelMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional double maxWinMoney = 2;
inline bool ResGameRecordPanelMessage::has_maxwinmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResGameRecordPanelMessage::set_has_maxwinmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResGameRecordPanelMessage::clear_has_maxwinmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResGameRecordPanelMessage::clear_maxwinmoney() {
  maxwinmoney_ = 0;
  clear_has_maxwinmoney();
}
inline double ResGameRecordPanelMessage::maxwinmoney() const {
  return maxwinmoney_;
}
inline void ResGameRecordPanelMessage::set_maxwinmoney(double value) {
  set_has_maxwinmoney();
  maxwinmoney_ = value;
}

// repeated .com.game.proto.GameRecordPanelData gameRecordPanelDatas = 3;
inline int ResGameRecordPanelMessage::gamerecordpaneldatas_size() const {
  return gamerecordpaneldatas_.size();
}
inline void ResGameRecordPanelMessage::clear_gamerecordpaneldatas() {
  gamerecordpaneldatas_.Clear();
}
inline const ::com::game::proto::GameRecordPanelData& ResGameRecordPanelMessage::gamerecordpaneldatas(int index) const {
  return gamerecordpaneldatas_.Get(index);
}
inline ::com::game::proto::GameRecordPanelData* ResGameRecordPanelMessage::mutable_gamerecordpaneldatas(int index) {
  return gamerecordpaneldatas_.Mutable(index);
}
inline ::com::game::proto::GameRecordPanelData* ResGameRecordPanelMessage::add_gamerecordpaneldatas() {
  return gamerecordpaneldatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordPanelData >&
ResGameRecordPanelMessage::gamerecordpaneldatas() const {
  return gamerecordpaneldatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordPanelData >*
ResGameRecordPanelMessage::mutable_gamerecordpaneldatas() {
  return &gamerecordpaneldatas_;
}

// -------------------------------------------------------------------

// GameRecordPanelData

// optional int32 gameId = 1;
inline bool GameRecordPanelData::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRecordPanelData::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRecordPanelData::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRecordPanelData::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 GameRecordPanelData::gameid() const {
  return gameid_;
}
inline void GameRecordPanelData::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// optional double maxWinMoney = 2;
inline bool GameRecordPanelData::has_maxwinmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRecordPanelData::set_has_maxwinmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRecordPanelData::clear_has_maxwinmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRecordPanelData::clear_maxwinmoney() {
  maxwinmoney_ = 0;
  clear_has_maxwinmoney();
}
inline double GameRecordPanelData::maxwinmoney() const {
  return maxwinmoney_;
}
inline void GameRecordPanelData::set_maxwinmoney(double value) {
  set_has_maxwinmoney();
  maxwinmoney_ = value;
}

// optional int32 winCount = 3;
inline bool GameRecordPanelData::has_wincount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameRecordPanelData::set_has_wincount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameRecordPanelData::clear_has_wincount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameRecordPanelData::clear_wincount() {
  wincount_ = 0;
  clear_has_wincount();
}
inline ::google::protobuf::int32 GameRecordPanelData::wincount() const {
  return wincount_;
}
inline void GameRecordPanelData::set_wincount(::google::protobuf::int32 value) {
  set_has_wincount();
  wincount_ = value;
}

// optional int32 failCount = 4;
inline bool GameRecordPanelData::has_failcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameRecordPanelData::set_has_failcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameRecordPanelData::clear_has_failcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameRecordPanelData::clear_failcount() {
  failcount_ = 0;
  clear_has_failcount();
}
inline ::google::protobuf::int32 GameRecordPanelData::failcount() const {
  return failcount_;
}
inline void GameRecordPanelData::set_failcount(::google::protobuf::int32 value) {
  set_has_failcount();
  failcount_ = value;
}

// -------------------------------------------------------------------

// ReqGameRecordDataMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGameRecordData];
inline bool ReqGameRecordDataMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGameRecordDataMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGameRecordDataMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGameRecordDataMessage::clear_msgid() {
  msgid_ = 182;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGameRecordDataMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGameRecordDataMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ReqGameRecordDataMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGameRecordDataMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGameRecordDataMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGameRecordDataMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ReqGameRecordDataMessage::gameid() const {
  return gameid_;
}
inline void ReqGameRecordDataMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ResGameRecordMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResGameRecordData];
inline bool ResGameRecordMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResGameRecordMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResGameRecordMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResGameRecordMessage::clear_msgid() {
  msgid_ = 183;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResGameRecordMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResGameRecordMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 gameId = 2;
inline bool ResGameRecordMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResGameRecordMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResGameRecordMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResGameRecordMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ResGameRecordMessage::gameid() const {
  return gameid_;
}
inline void ResGameRecordMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// repeated .com.game.proto.GameRecordData gameRecordDatas = 3;
inline int ResGameRecordMessage::gamerecorddatas_size() const {
  return gamerecorddatas_.size();
}
inline void ResGameRecordMessage::clear_gamerecorddatas() {
  gamerecorddatas_.Clear();
}
inline const ::com::game::proto::GameRecordData& ResGameRecordMessage::gamerecorddatas(int index) const {
  return gamerecorddatas_.Get(index);
}
inline ::com::game::proto::GameRecordData* ResGameRecordMessage::mutable_gamerecorddatas(int index) {
  return gamerecorddatas_.Mutable(index);
}
inline ::com::game::proto::GameRecordData* ResGameRecordMessage::add_gamerecorddatas() {
  return gamerecorddatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordData >&
ResGameRecordMessage::gamerecorddatas() const {
  return gamerecorddatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::GameRecordData >*
ResGameRecordMessage::mutable_gamerecorddatas() {
  return &gamerecorddatas_;
}

// -------------------------------------------------------------------

// GameRecordData

// required int32 round = 1;
inline bool GameRecordData::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameRecordData::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameRecordData::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameRecordData::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 GameRecordData::round() const {
  return round_;
}
inline void GameRecordData::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
}

// required double chageMoney = 2;
inline bool GameRecordData::has_chagemoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameRecordData::set_has_chagemoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameRecordData::clear_has_chagemoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameRecordData::clear_chagemoney() {
  chagemoney_ = 0;
  clear_has_chagemoney();
}
inline double GameRecordData::chagemoney() const {
  return chagemoney_;
}
inline void GameRecordData::set_chagemoney(double value) {
  set_has_chagemoney();
  chagemoney_ = value;
}

// optional string positionIds = 3;
inline bool GameRecordData::has_positionids() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameRecordData::set_has_positionids() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameRecordData::clear_has_positionids() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameRecordData::clear_positionids() {
  if (positionids_ != &::google::protobuf::internal::kEmptyString) {
    positionids_->clear();
  }
  clear_has_positionids();
}
inline const ::std::string& GameRecordData::positionids() const {
  return *positionids_;
}
inline void GameRecordData::set_positionids(const ::std::string& value) {
  set_has_positionids();
  if (positionids_ == &::google::protobuf::internal::kEmptyString) {
    positionids_ = new ::std::string;
  }
  positionids_->assign(value);
}
inline void GameRecordData::set_positionids(const char* value) {
  set_has_positionids();
  if (positionids_ == &::google::protobuf::internal::kEmptyString) {
    positionids_ = new ::std::string;
  }
  positionids_->assign(value);
}
inline void GameRecordData::set_positionids(const char* value, size_t size) {
  set_has_positionids();
  if (positionids_ == &::google::protobuf::internal::kEmptyString) {
    positionids_ = new ::std::string;
  }
  positionids_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GameRecordData::mutable_positionids() {
  set_has_positionids();
  if (positionids_ == &::google::protobuf::internal::kEmptyString) {
    positionids_ = new ::std::string;
  }
  return positionids_;
}
inline ::std::string* GameRecordData::release_positionids() {
  clear_has_positionids();
  if (positionids_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = positionids_;
    positionids_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .com.game.proto.CardData cardData = 4;
inline int GameRecordData::carddata_size() const {
  return carddata_.size();
}
inline void GameRecordData::clear_carddata() {
  carddata_.Clear();
}
inline const ::com::game::proto::CardData& GameRecordData::carddata(int index) const {
  return carddata_.Get(index);
}
inline ::com::game::proto::CardData* GameRecordData::mutable_carddata(int index) {
  return carddata_.Mutable(index);
}
inline ::com::game::proto::CardData* GameRecordData::add_carddata() {
  return carddata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::CardData >&
GameRecordData::carddata() const {
  return carddata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::CardData >*
GameRecordData::mutable_carddata() {
  return &carddata_;
}

// repeated .com.game.proto.BetData betData = 5;
inline int GameRecordData::betdata_size() const {
  return betdata_.size();
}
inline void GameRecordData::clear_betdata() {
  betdata_.Clear();
}
inline const ::com::game::proto::BetData& GameRecordData::betdata(int index) const {
  return betdata_.Get(index);
}
inline ::com::game::proto::BetData* GameRecordData::mutable_betdata(int index) {
  return betdata_.Mutable(index);
}
inline ::com::game::proto::BetData* GameRecordData::add_betdata() {
  return betdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::BetData >&
GameRecordData::betdata() const {
  return betdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::BetData >*
GameRecordData::mutable_betdata() {
  return &betdata_;
}

// -------------------------------------------------------------------

// CardData

// required int32 id = 1;
inline bool CardData::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardData::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardData::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardData::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 CardData::id() const {
  return id_;
}
inline void CardData::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 positionId = 2;
inline bool CardData::has_positionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardData::set_has_positionid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardData::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardData::clear_positionid() {
  positionid_ = 0;
  clear_has_positionid();
}
inline ::google::protobuf::int32 CardData::positionid() const {
  return positionid_;
}
inline void CardData::set_positionid(::google::protobuf::int32 value) {
  set_has_positionid();
  positionid_ = value;
}

// optional string cardRecord = 3;
inline bool CardData::has_cardrecord() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardData::set_has_cardrecord() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardData::clear_has_cardrecord() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardData::clear_cardrecord() {
  if (cardrecord_ != &::google::protobuf::internal::kEmptyString) {
    cardrecord_->clear();
  }
  clear_has_cardrecord();
}
inline const ::std::string& CardData::cardrecord() const {
  return *cardrecord_;
}
inline void CardData::set_cardrecord(const ::std::string& value) {
  set_has_cardrecord();
  if (cardrecord_ == &::google::protobuf::internal::kEmptyString) {
    cardrecord_ = new ::std::string;
  }
  cardrecord_->assign(value);
}
inline void CardData::set_cardrecord(const char* value) {
  set_has_cardrecord();
  if (cardrecord_ == &::google::protobuf::internal::kEmptyString) {
    cardrecord_ = new ::std::string;
  }
  cardrecord_->assign(value);
}
inline void CardData::set_cardrecord(const char* value, size_t size) {
  set_has_cardrecord();
  if (cardrecord_ == &::google::protobuf::internal::kEmptyString) {
    cardrecord_ = new ::std::string;
  }
  cardrecord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CardData::mutable_cardrecord() {
  set_has_cardrecord();
  if (cardrecord_ == &::google::protobuf::internal::kEmptyString) {
    cardrecord_ = new ::std::string;
  }
  return cardrecord_;
}
inline ::std::string* CardData::release_cardrecord() {
  clear_has_cardrecord();
  if (cardrecord_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cardrecord_;
    cardrecord_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string commonCardRecord = 4;
inline bool CardData::has_commoncardrecord() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardData::set_has_commoncardrecord() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardData::clear_has_commoncardrecord() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardData::clear_commoncardrecord() {
  if (commoncardrecord_ != &::google::protobuf::internal::kEmptyString) {
    commoncardrecord_->clear();
  }
  clear_has_commoncardrecord();
}
inline const ::std::string& CardData::commoncardrecord() const {
  return *commoncardrecord_;
}
inline void CardData::set_commoncardrecord(const ::std::string& value) {
  set_has_commoncardrecord();
  if (commoncardrecord_ == &::google::protobuf::internal::kEmptyString) {
    commoncardrecord_ = new ::std::string;
  }
  commoncardrecord_->assign(value);
}
inline void CardData::set_commoncardrecord(const char* value) {
  set_has_commoncardrecord();
  if (commoncardrecord_ == &::google::protobuf::internal::kEmptyString) {
    commoncardrecord_ = new ::std::string;
  }
  commoncardrecord_->assign(value);
}
inline void CardData::set_commoncardrecord(const char* value, size_t size) {
  set_has_commoncardrecord();
  if (commoncardrecord_ == &::google::protobuf::internal::kEmptyString) {
    commoncardrecord_ = new ::std::string;
  }
  commoncardrecord_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CardData::mutable_commoncardrecord() {
  set_has_commoncardrecord();
  if (commoncardrecord_ == &::google::protobuf::internal::kEmptyString) {
    commoncardrecord_ = new ::std::string;
  }
  return commoncardrecord_;
}
inline ::std::string* CardData::release_commoncardrecord() {
  clear_has_commoncardrecord();
  if (commoncardrecord_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = commoncardrecord_;
    commoncardrecord_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// BetData

// optional int32 positionId = 1;
inline bool BetData::has_positionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BetData::set_has_positionid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BetData::clear_has_positionid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BetData::clear_positionid() {
  positionid_ = 0;
  clear_has_positionid();
}
inline ::google::protobuf::int32 BetData::positionid() const {
  return positionid_;
}
inline void BetData::set_positionid(::google::protobuf::int32 value) {
  set_has_positionid();
  positionid_ = value;
}

// optional double bettingMoney = 2;
inline bool BetData::has_bettingmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BetData::set_has_bettingmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BetData::clear_has_bettingmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BetData::clear_bettingmoney() {
  bettingmoney_ = 0;
  clear_has_bettingmoney();
}
inline double BetData::bettingmoney() const {
  return bettingmoney_;
}
inline void BetData::set_bettingmoney(double value) {
  set_has_bettingmoney();
  bettingmoney_ = value;
}

// optional string cardType = 3;
inline bool BetData::has_cardtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BetData::set_has_cardtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BetData::clear_has_cardtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BetData::clear_cardtype() {
  if (cardtype_ != &::google::protobuf::internal::kEmptyString) {
    cardtype_->clear();
  }
  clear_has_cardtype();
}
inline const ::std::string& BetData::cardtype() const {
  return *cardtype_;
}
inline void BetData::set_cardtype(const ::std::string& value) {
  set_has_cardtype();
  if (cardtype_ == &::google::protobuf::internal::kEmptyString) {
    cardtype_ = new ::std::string;
  }
  cardtype_->assign(value);
}
inline void BetData::set_cardtype(const char* value) {
  set_has_cardtype();
  if (cardtype_ == &::google::protobuf::internal::kEmptyString) {
    cardtype_ = new ::std::string;
  }
  cardtype_->assign(value);
}
inline void BetData::set_cardtype(const char* value, size_t size) {
  set_has_cardtype();
  if (cardtype_ == &::google::protobuf::internal::kEmptyString) {
    cardtype_ = new ::std::string;
  }
  cardtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BetData::mutable_cardtype() {
  set_has_cardtype();
  if (cardtype_ == &::google::protobuf::internal::kEmptyString) {
    cardtype_ = new ::std::string;
  }
  return cardtype_;
}
inline ::std::string* BetData::release_cardtype() {
  clear_has_cardtype();
  if (cardtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = cardtype_;
    cardtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 bettingMultiple = 4;
inline bool BetData::has_bettingmultiple() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BetData::set_has_bettingmultiple() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BetData::clear_has_bettingmultiple() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BetData::clear_bettingmultiple() {
  bettingmultiple_ = 0;
  clear_has_bettingmultiple();
}
inline ::google::protobuf::int32 BetData::bettingmultiple() const {
  return bettingmultiple_;
}
inline void BetData::set_bettingmultiple(::google::protobuf::int32 value) {
  set_has_bettingmultiple();
  bettingmultiple_ = value;
}

// optional string betting = 5;
inline bool BetData::has_betting() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BetData::set_has_betting() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BetData::clear_has_betting() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BetData::clear_betting() {
  if (betting_ != &::google::protobuf::internal::kEmptyString) {
    betting_->clear();
  }
  clear_has_betting();
}
inline const ::std::string& BetData::betting() const {
  return *betting_;
}
inline void BetData::set_betting(const ::std::string& value) {
  set_has_betting();
  if (betting_ == &::google::protobuf::internal::kEmptyString) {
    betting_ = new ::std::string;
  }
  betting_->assign(value);
}
inline void BetData::set_betting(const char* value) {
  set_has_betting();
  if (betting_ == &::google::protobuf::internal::kEmptyString) {
    betting_ = new ::std::string;
  }
  betting_->assign(value);
}
inline void BetData::set_betting(const char* value, size_t size) {
  set_has_betting();
  if (betting_ == &::google::protobuf::internal::kEmptyString) {
    betting_ = new ::std::string;
  }
  betting_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BetData::mutable_betting() {
  set_has_betting();
  if (betting_ == &::google::protobuf::internal::kEmptyString) {
    betting_ = new ::std::string;
  }
  return betting_;
}
inline ::std::string* BetData::release_betting() {
  clear_has_betting();
  if (betting_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = betting_;
    betting_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqSaveMoneyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqSaveMoney];
inline bool ReqSaveMoneyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSaveMoneyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSaveMoneyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSaveMoneyMessage::clear_msgid() {
  msgid_ = 167;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqSaveMoneyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqSaveMoneyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required double saveMoney = 2;
inline bool ReqSaveMoneyMessage::has_savemoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSaveMoneyMessage::set_has_savemoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSaveMoneyMessage::clear_has_savemoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSaveMoneyMessage::clear_savemoney() {
  savemoney_ = 0;
  clear_has_savemoney();
}
inline double ReqSaveMoneyMessage::savemoney() const {
  return savemoney_;
}
inline void ReqSaveMoneyMessage::set_savemoney(double value) {
  set_has_savemoney();
  savemoney_ = value;
}

// required string password = 3;
inline bool ReqSaveMoneyMessage::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqSaveMoneyMessage::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqSaveMoneyMessage::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqSaveMoneyMessage::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ReqSaveMoneyMessage::password() const {
  return *password_;
}
inline void ReqSaveMoneyMessage::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqSaveMoneyMessage::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqSaveMoneyMessage::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqSaveMoneyMessage::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ReqSaveMoneyMessage::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqDrawMoneyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqDrawMoney];
inline bool ReqDrawMoneyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqDrawMoneyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqDrawMoneyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqDrawMoneyMessage::clear_msgid() {
  msgid_ = 168;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqDrawMoneyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqDrawMoneyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required double drawMoney = 2;
inline bool ReqDrawMoneyMessage::has_drawmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqDrawMoneyMessage::set_has_drawmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqDrawMoneyMessage::clear_has_drawmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqDrawMoneyMessage::clear_drawmoney() {
  drawmoney_ = 0;
  clear_has_drawmoney();
}
inline double ReqDrawMoneyMessage::drawmoney() const {
  return drawmoney_;
}
inline void ReqDrawMoneyMessage::set_drawmoney(double value) {
  set_has_drawmoney();
  drawmoney_ = value;
}

// required string password = 3;
inline bool ReqDrawMoneyMessage::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqDrawMoneyMessage::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqDrawMoneyMessage::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqDrawMoneyMessage::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& ReqDrawMoneyMessage::password() const {
  return *password_;
}
inline void ReqDrawMoneyMessage::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqDrawMoneyMessage::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void ReqDrawMoneyMessage::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqDrawMoneyMessage::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* ReqDrawMoneyMessage::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResNoticeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResNotice];
inline bool ResNoticeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResNoticeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResNoticeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResNoticeMessage::clear_msgid() {
  msgid_ = 170;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResNoticeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResNoticeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string notice = 3;
inline bool ResNoticeMessage::has_notice() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResNoticeMessage::set_has_notice() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResNoticeMessage::clear_has_notice() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResNoticeMessage::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& ResNoticeMessage::notice() const {
  return *notice_;
}
inline void ResNoticeMessage::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void ResNoticeMessage::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void ResNoticeMessage::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResNoticeMessage::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* ResNoticeMessage::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqModifyPlayerInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyPlayerInfo];
inline bool ReqModifyPlayerInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqModifyPlayerInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqModifyPlayerInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqModifyPlayerInfoMessage::clear_msgid() {
  msgid_ = 171;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqModifyPlayerInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqModifyPlayerInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string name = 2;
inline bool ReqModifyPlayerInfoMessage::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqModifyPlayerInfoMessage::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqModifyPlayerInfoMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqModifyPlayerInfoMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ReqModifyPlayerInfoMessage::name() const {
  return *name_;
}
inline void ReqModifyPlayerInfoMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyPlayerInfoMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ReqModifyPlayerInfoMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string icon = 3;
inline bool ReqModifyPlayerInfoMessage::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqModifyPlayerInfoMessage::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqModifyPlayerInfoMessage::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqModifyPlayerInfoMessage::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& ReqModifyPlayerInfoMessage::icon() const {
  return *icon_;
}
inline void ReqModifyPlayerInfoMessage::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyPlayerInfoMessage::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* ReqModifyPlayerInfoMessage::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 sex = 4;
inline bool ReqModifyPlayerInfoMessage::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqModifyPlayerInfoMessage::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqModifyPlayerInfoMessage::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqModifyPlayerInfoMessage::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 ReqModifyPlayerInfoMessage::sex() const {
  return sex_;
}
inline void ReqModifyPlayerInfoMessage::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional string signature = 5;
inline bool ReqModifyPlayerInfoMessage::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqModifyPlayerInfoMessage::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqModifyPlayerInfoMessage::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqModifyPlayerInfoMessage::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& ReqModifyPlayerInfoMessage::signature() const {
  return *signature_;
}
inline void ReqModifyPlayerInfoMessage::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void ReqModifyPlayerInfoMessage::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyPlayerInfoMessage::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* ReqModifyPlayerInfoMessage::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResModifyPlayerInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyPlayerInfo];
inline bool ResModifyPlayerInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResModifyPlayerInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResModifyPlayerInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResModifyPlayerInfoMessage::clear_msgid() {
  msgid_ = 172;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResModifyPlayerInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResModifyPlayerInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string name = 2;
inline bool ResModifyPlayerInfoMessage::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResModifyPlayerInfoMessage::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResModifyPlayerInfoMessage::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResModifyPlayerInfoMessage::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ResModifyPlayerInfoMessage::name() const {
  return *name_;
}
inline void ResModifyPlayerInfoMessage::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResModifyPlayerInfoMessage::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ResModifyPlayerInfoMessage::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string icon = 3;
inline bool ResModifyPlayerInfoMessage::has_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResModifyPlayerInfoMessage::set_has_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResModifyPlayerInfoMessage::clear_has_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResModifyPlayerInfoMessage::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& ResModifyPlayerInfoMessage::icon() const {
  return *icon_;
}
inline void ResModifyPlayerInfoMessage::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResModifyPlayerInfoMessage::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* ResModifyPlayerInfoMessage::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 sex = 4;
inline bool ResModifyPlayerInfoMessage::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResModifyPlayerInfoMessage::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResModifyPlayerInfoMessage::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResModifyPlayerInfoMessage::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 ResModifyPlayerInfoMessage::sex() const {
  return sex_;
}
inline void ResModifyPlayerInfoMessage::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
}

// optional string signature = 5;
inline bool ResModifyPlayerInfoMessage::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResModifyPlayerInfoMessage::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResModifyPlayerInfoMessage::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResModifyPlayerInfoMessage::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& ResModifyPlayerInfoMessage::signature() const {
  return *signature_;
}
inline void ResModifyPlayerInfoMessage::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void ResModifyPlayerInfoMessage::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResModifyPlayerInfoMessage::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* ResModifyPlayerInfoMessage::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqModifyBankPassWordMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyBankPassWord];
inline bool ReqModifyBankPassWordMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqModifyBankPassWordMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqModifyBankPassWordMessage::clear_msgid() {
  msgid_ = 173;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqModifyBankPassWordMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqModifyBankPassWordMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 type = 2;
inline bool ReqModifyBankPassWordMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqModifyBankPassWordMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqModifyBankPassWordMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqModifyBankPassWordMessage::type() const {
  return type_;
}
inline void ReqModifyBankPassWordMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string bankOldPassword = 3;
inline bool ReqModifyBankPassWordMessage::has_bankoldpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_bankoldpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqModifyBankPassWordMessage::clear_has_bankoldpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqModifyBankPassWordMessage::clear_bankoldpassword() {
  if (bankoldpassword_ != &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_->clear();
  }
  clear_has_bankoldpassword();
}
inline const ::std::string& ReqModifyBankPassWordMessage::bankoldpassword() const {
  return *bankoldpassword_;
}
inline void ReqModifyBankPassWordMessage::set_bankoldpassword(const ::std::string& value) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_bankoldpassword(const char* value) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_bankoldpassword(const char* value, size_t size) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyBankPassWordMessage::mutable_bankoldpassword() {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  return bankoldpassword_;
}
inline ::std::string* ReqModifyBankPassWordMessage::release_bankoldpassword() {
  clear_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankoldpassword_;
    bankoldpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankNewPassword = 4;
inline bool ReqModifyBankPassWordMessage::has_banknewpassword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_banknewpassword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqModifyBankPassWordMessage::clear_has_banknewpassword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqModifyBankPassWordMessage::clear_banknewpassword() {
  if (banknewpassword_ != &::google::protobuf::internal::kEmptyString) {
    banknewpassword_->clear();
  }
  clear_has_banknewpassword();
}
inline const ::std::string& ReqModifyBankPassWordMessage::banknewpassword() const {
  return *banknewpassword_;
}
inline void ReqModifyBankPassWordMessage::set_banknewpassword(const ::std::string& value) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_banknewpassword(const char* value) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_banknewpassword(const char* value, size_t size) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyBankPassWordMessage::mutable_banknewpassword() {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  return banknewpassword_;
}
inline ::std::string* ReqModifyBankPassWordMessage::release_banknewpassword() {
  clear_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = banknewpassword_;
    banknewpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string phone = 5;
inline bool ReqModifyBankPassWordMessage::has_phone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_phone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqModifyBankPassWordMessage::clear_has_phone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqModifyBankPassWordMessage::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& ReqModifyBankPassWordMessage::phone() const {
  return *phone_;
}
inline void ReqModifyBankPassWordMessage::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyBankPassWordMessage::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* ReqModifyBankPassWordMessage::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string verify = 6;
inline bool ReqModifyBankPassWordMessage::has_verify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqModifyBankPassWordMessage::set_has_verify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqModifyBankPassWordMessage::clear_has_verify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqModifyBankPassWordMessage::clear_verify() {
  if (verify_ != &::google::protobuf::internal::kEmptyString) {
    verify_->clear();
  }
  clear_has_verify();
}
inline const ::std::string& ReqModifyBankPassWordMessage::verify() const {
  return *verify_;
}
inline void ReqModifyBankPassWordMessage::set_verify(const ::std::string& value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_verify(const char* value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqModifyBankPassWordMessage::set_verify(const char* value, size_t size) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyBankPassWordMessage::mutable_verify() {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  return verify_;
}
inline ::std::string* ReqModifyBankPassWordMessage::release_verify() {
  clear_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = verify_;
    verify_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResModifyBankPassWordMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyBankPassWord];
inline bool ResModifyBankPassWordMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResModifyBankPassWordMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResModifyBankPassWordMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResModifyBankPassWordMessage::clear_msgid() {
  msgid_ = 174;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResModifyBankPassWordMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResModifyBankPassWordMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 code = 2;
inline bool ResModifyBankPassWordMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResModifyBankPassWordMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResModifyBankPassWordMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResModifyBankPassWordMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ResModifyBankPassWordMessage::code() const {
  return code_;
}
inline void ResModifyBankPassWordMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// ReqModifyLoginPassWordMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqModifyLoginPassWord];
inline bool ReqModifyLoginPassWordMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqModifyLoginPassWordMessage::clear_msgid() {
  msgid_ = 175;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqModifyLoginPassWordMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqModifyLoginPassWordMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 type = 2;
inline bool ReqModifyLoginPassWordMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqModifyLoginPassWordMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqModifyLoginPassWordMessage::type() const {
  return type_;
}
inline void ReqModifyLoginPassWordMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string bankOldPassword = 3;
inline bool ReqModifyLoginPassWordMessage::has_bankoldpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_bankoldpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_bankoldpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqModifyLoginPassWordMessage::clear_bankoldpassword() {
  if (bankoldpassword_ != &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_->clear();
  }
  clear_has_bankoldpassword();
}
inline const ::std::string& ReqModifyLoginPassWordMessage::bankoldpassword() const {
  return *bankoldpassword_;
}
inline void ReqModifyLoginPassWordMessage::set_bankoldpassword(const ::std::string& value) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_bankoldpassword(const char* value) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_bankoldpassword(const char* value, size_t size) {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  bankoldpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyLoginPassWordMessage::mutable_bankoldpassword() {
  set_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    bankoldpassword_ = new ::std::string;
  }
  return bankoldpassword_;
}
inline ::std::string* ReqModifyLoginPassWordMessage::release_bankoldpassword() {
  clear_has_bankoldpassword();
  if (bankoldpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankoldpassword_;
    bankoldpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankNewPassword = 4;
inline bool ReqModifyLoginPassWordMessage::has_banknewpassword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_banknewpassword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_banknewpassword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqModifyLoginPassWordMessage::clear_banknewpassword() {
  if (banknewpassword_ != &::google::protobuf::internal::kEmptyString) {
    banknewpassword_->clear();
  }
  clear_has_banknewpassword();
}
inline const ::std::string& ReqModifyLoginPassWordMessage::banknewpassword() const {
  return *banknewpassword_;
}
inline void ReqModifyLoginPassWordMessage::set_banknewpassword(const ::std::string& value) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_banknewpassword(const char* value) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_banknewpassword(const char* value, size_t size) {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  banknewpassword_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyLoginPassWordMessage::mutable_banknewpassword() {
  set_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    banknewpassword_ = new ::std::string;
  }
  return banknewpassword_;
}
inline ::std::string* ReqModifyLoginPassWordMessage::release_banknewpassword() {
  clear_has_banknewpassword();
  if (banknewpassword_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = banknewpassword_;
    banknewpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string phone = 5;
inline bool ReqModifyLoginPassWordMessage::has_phone() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_phone() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_phone() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqModifyLoginPassWordMessage::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& ReqModifyLoginPassWordMessage::phone() const {
  return *phone_;
}
inline void ReqModifyLoginPassWordMessage::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyLoginPassWordMessage::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* ReqModifyLoginPassWordMessage::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string verify = 6;
inline bool ReqModifyLoginPassWordMessage::has_verify() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqModifyLoginPassWordMessage::set_has_verify() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqModifyLoginPassWordMessage::clear_has_verify() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqModifyLoginPassWordMessage::clear_verify() {
  if (verify_ != &::google::protobuf::internal::kEmptyString) {
    verify_->clear();
  }
  clear_has_verify();
}
inline const ::std::string& ReqModifyLoginPassWordMessage::verify() const {
  return *verify_;
}
inline void ReqModifyLoginPassWordMessage::set_verify(const ::std::string& value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_verify(const char* value) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(value);
}
inline void ReqModifyLoginPassWordMessage::set_verify(const char* value, size_t size) {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  verify_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqModifyLoginPassWordMessage::mutable_verify() {
  set_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    verify_ = new ::std::string;
  }
  return verify_;
}
inline ::std::string* ReqModifyLoginPassWordMessage::release_verify() {
  clear_has_verify();
  if (verify_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = verify_;
    verify_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResModifyLoginPassWordMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResModifyLoginPassWord];
inline bool ResModifyLoginPassWordMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResModifyLoginPassWordMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResModifyLoginPassWordMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResModifyLoginPassWordMessage::clear_msgid() {
  msgid_ = 176;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResModifyLoginPassWordMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResModifyLoginPassWordMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 code = 2;
inline bool ResModifyLoginPassWordMessage::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResModifyLoginPassWordMessage::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResModifyLoginPassWordMessage::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResModifyLoginPassWordMessage::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ResModifyLoginPassWordMessage::code() const {
  return code_;
}
inline void ResModifyLoginPassWordMessage::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// ReqBindBankCardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBindBankCard];
inline bool ReqBindBankCardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBindBankCardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBindBankCardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBindBankCardMessage::clear_msgid() {
  msgid_ = 177;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBindBankCardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBindBankCardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string bankCardAccount = 2;
inline bool ReqBindBankCardMessage::has_bankcardaccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBindBankCardMessage::set_has_bankcardaccount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBindBankCardMessage::clear_has_bankcardaccount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBindBankCardMessage::clear_bankcardaccount() {
  if (bankcardaccount_ != &::google::protobuf::internal::kEmptyString) {
    bankcardaccount_->clear();
  }
  clear_has_bankcardaccount();
}
inline const ::std::string& ReqBindBankCardMessage::bankcardaccount() const {
  return *bankcardaccount_;
}
inline void ReqBindBankCardMessage::set_bankcardaccount(const ::std::string& value) {
  set_has_bankcardaccount();
  if (bankcardaccount_ == &::google::protobuf::internal::kEmptyString) {
    bankcardaccount_ = new ::std::string;
  }
  bankcardaccount_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankcardaccount(const char* value) {
  set_has_bankcardaccount();
  if (bankcardaccount_ == &::google::protobuf::internal::kEmptyString) {
    bankcardaccount_ = new ::std::string;
  }
  bankcardaccount_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankcardaccount(const char* value, size_t size) {
  set_has_bankcardaccount();
  if (bankcardaccount_ == &::google::protobuf::internal::kEmptyString) {
    bankcardaccount_ = new ::std::string;
  }
  bankcardaccount_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindBankCardMessage::mutable_bankcardaccount() {
  set_has_bankcardaccount();
  if (bankcardaccount_ == &::google::protobuf::internal::kEmptyString) {
    bankcardaccount_ = new ::std::string;
  }
  return bankcardaccount_;
}
inline ::std::string* ReqBindBankCardMessage::release_bankcardaccount() {
  clear_has_bankcardaccount();
  if (bankcardaccount_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardaccount_;
    bankcardaccount_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankCardName = 3;
inline bool ReqBindBankCardMessage::has_bankcardname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBindBankCardMessage::set_has_bankcardname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBindBankCardMessage::clear_has_bankcardname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBindBankCardMessage::clear_bankcardname() {
  if (bankcardname_ != &::google::protobuf::internal::kEmptyString) {
    bankcardname_->clear();
  }
  clear_has_bankcardname();
}
inline const ::std::string& ReqBindBankCardMessage::bankcardname() const {
  return *bankcardname_;
}
inline void ReqBindBankCardMessage::set_bankcardname(const ::std::string& value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankcardname(const char* value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankcardname(const char* value, size_t size) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindBankCardMessage::mutable_bankcardname() {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  return bankcardname_;
}
inline ::std::string* ReqBindBankCardMessage::release_bankcardname() {
  clear_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardname_;
    bankcardname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankBelong = 4;
inline bool ReqBindBankCardMessage::has_bankbelong() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqBindBankCardMessage::set_has_bankbelong() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqBindBankCardMessage::clear_has_bankbelong() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqBindBankCardMessage::clear_bankbelong() {
  if (bankbelong_ != &::google::protobuf::internal::kEmptyString) {
    bankbelong_->clear();
  }
  clear_has_bankbelong();
}
inline const ::std::string& ReqBindBankCardMessage::bankbelong() const {
  return *bankbelong_;
}
inline void ReqBindBankCardMessage::set_bankbelong(const ::std::string& value) {
  set_has_bankbelong();
  if (bankbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankbelong_ = new ::std::string;
  }
  bankbelong_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankbelong(const char* value) {
  set_has_bankbelong();
  if (bankbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankbelong_ = new ::std::string;
  }
  bankbelong_->assign(value);
}
inline void ReqBindBankCardMessage::set_bankbelong(const char* value, size_t size) {
  set_has_bankbelong();
  if (bankbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankbelong_ = new ::std::string;
  }
  bankbelong_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqBindBankCardMessage::mutable_bankbelong() {
  set_has_bankbelong();
  if (bankbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankbelong_ = new ::std::string;
  }
  return bankbelong_;
}
inline ::std::string* ReqBindBankCardMessage::release_bankbelong() {
  clear_has_bankbelong();
  if (bankbelong_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankbelong_;
    bankbelong_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResBindBankCardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBindBankCard];
inline bool ResBindBankCardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBindBankCardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBindBankCardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBindBankCardMessage::clear_msgid() {
  msgid_ = 178;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBindBankCardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBindBankCardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string bankCardAcc = 2;
inline bool ResBindBankCardMessage::has_bankcardacc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResBindBankCardMessage::set_has_bankcardacc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResBindBankCardMessage::clear_has_bankcardacc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResBindBankCardMessage::clear_bankcardacc() {
  if (bankcardacc_ != &::google::protobuf::internal::kEmptyString) {
    bankcardacc_->clear();
  }
  clear_has_bankcardacc();
}
inline const ::std::string& ResBindBankCardMessage::bankcardacc() const {
  return *bankcardacc_;
}
inline void ResBindBankCardMessage::set_bankcardacc(const ::std::string& value) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardacc(const char* value) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardacc(const char* value, size_t size) {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  bankcardacc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResBindBankCardMessage::mutable_bankcardacc() {
  set_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    bankcardacc_ = new ::std::string;
  }
  return bankcardacc_;
}
inline ::std::string* ResBindBankCardMessage::release_bankcardacc() {
  clear_has_bankcardacc();
  if (bankcardacc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardacc_;
    bankcardacc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankCardName = 3;
inline bool ResBindBankCardMessage::has_bankcardname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResBindBankCardMessage::set_has_bankcardname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResBindBankCardMessage::clear_has_bankcardname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResBindBankCardMessage::clear_bankcardname() {
  if (bankcardname_ != &::google::protobuf::internal::kEmptyString) {
    bankcardname_->clear();
  }
  clear_has_bankcardname();
}
inline const ::std::string& ResBindBankCardMessage::bankcardname() const {
  return *bankcardname_;
}
inline void ResBindBankCardMessage::set_bankcardname(const ::std::string& value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardname(const char* value) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardname(const char* value, size_t size) {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  bankcardname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResBindBankCardMessage::mutable_bankcardname() {
  set_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    bankcardname_ = new ::std::string;
  }
  return bankcardname_;
}
inline ::std::string* ResBindBankCardMessage::release_bankcardname() {
  clear_has_bankcardname();
  if (bankcardname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardname_;
    bankcardname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string bankCardBelong = 4;
inline bool ResBindBankCardMessage::has_bankcardbelong() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResBindBankCardMessage::set_has_bankcardbelong() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResBindBankCardMessage::clear_has_bankcardbelong() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResBindBankCardMessage::clear_bankcardbelong() {
  if (bankcardbelong_ != &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_->clear();
  }
  clear_has_bankcardbelong();
}
inline const ::std::string& ResBindBankCardMessage::bankcardbelong() const {
  return *bankcardbelong_;
}
inline void ResBindBankCardMessage::set_bankcardbelong(const ::std::string& value) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardbelong(const char* value) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(value);
}
inline void ResBindBankCardMessage::set_bankcardbelong(const char* value, size_t size) {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  bankcardbelong_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResBindBankCardMessage::mutable_bankcardbelong() {
  set_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    bankcardbelong_ = new ::std::string;
  }
  return bankcardbelong_;
}
inline ::std::string* ResBindBankCardMessage::release_bankcardbelong() {
  clear_has_bankcardbelong();
  if (bankcardbelong_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = bankcardbelong_;
    bankcardbelong_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqRechargeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRecharge];
inline bool ReqRechargeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRechargeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRechargeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRechargeMessage::clear_msgid() {
  msgid_ = 200;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqRechargeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqRechargeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string rechargeInfo = 2;
inline bool ReqRechargeMessage::has_rechargeinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqRechargeMessage::set_has_rechargeinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqRechargeMessage::clear_has_rechargeinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqRechargeMessage::clear_rechargeinfo() {
  if (rechargeinfo_ != &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_->clear();
  }
  clear_has_rechargeinfo();
}
inline const ::std::string& ReqRechargeMessage::rechargeinfo() const {
  return *rechargeinfo_;
}
inline void ReqRechargeMessage::set_rechargeinfo(const ::std::string& value) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(value);
}
inline void ReqRechargeMessage::set_rechargeinfo(const char* value) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(value);
}
inline void ReqRechargeMessage::set_rechargeinfo(const char* value, size_t size) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRechargeMessage::mutable_rechargeinfo() {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  return rechargeinfo_;
}
inline ::std::string* ReqRechargeMessage::release_rechargeinfo() {
  clear_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rechargeinfo_;
    rechargeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResRechargeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResRecharge];
inline bool ResRechargeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResRechargeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResRechargeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResRechargeMessage::clear_msgid() {
  msgid_ = 201;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResRechargeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResRechargeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string rechargeInfo = 2;
inline bool ResRechargeMessage::has_rechargeinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResRechargeMessage::set_has_rechargeinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResRechargeMessage::clear_has_rechargeinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResRechargeMessage::clear_rechargeinfo() {
  if (rechargeinfo_ != &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_->clear();
  }
  clear_has_rechargeinfo();
}
inline const ::std::string& ResRechargeMessage::rechargeinfo() const {
  return *rechargeinfo_;
}
inline void ResRechargeMessage::set_rechargeinfo(const ::std::string& value) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(value);
}
inline void ResRechargeMessage::set_rechargeinfo(const char* value) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(value);
}
inline void ResRechargeMessage::set_rechargeinfo(const char* value, size_t size) {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  rechargeinfo_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResRechargeMessage::mutable_rechargeinfo() {
  set_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    rechargeinfo_ = new ::std::string;
  }
  return rechargeinfo_;
}
inline ::std::string* ResRechargeMessage::release_rechargeinfo() {
  clear_has_rechargeinfo();
  if (rechargeinfo_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rechargeinfo_;
    rechargeinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqRechargeIOSMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRechargeIOS];
inline bool ReqRechargeIOSMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRechargeIOSMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRechargeIOSMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRechargeIOSMessage::clear_msgid() {
  msgid_ = 202;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqRechargeIOSMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqRechargeIOSMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string iosPayJsonResult = 2;
inline bool ReqRechargeIOSMessage::has_iospayjsonresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqRechargeIOSMessage::set_has_iospayjsonresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqRechargeIOSMessage::clear_has_iospayjsonresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqRechargeIOSMessage::clear_iospayjsonresult() {
  if (iospayjsonresult_ != &::google::protobuf::internal::kEmptyString) {
    iospayjsonresult_->clear();
  }
  clear_has_iospayjsonresult();
}
inline const ::std::string& ReqRechargeIOSMessage::iospayjsonresult() const {
  return *iospayjsonresult_;
}
inline void ReqRechargeIOSMessage::set_iospayjsonresult(const ::std::string& value) {
  set_has_iospayjsonresult();
  if (iospayjsonresult_ == &::google::protobuf::internal::kEmptyString) {
    iospayjsonresult_ = new ::std::string;
  }
  iospayjsonresult_->assign(value);
}
inline void ReqRechargeIOSMessage::set_iospayjsonresult(const char* value) {
  set_has_iospayjsonresult();
  if (iospayjsonresult_ == &::google::protobuf::internal::kEmptyString) {
    iospayjsonresult_ = new ::std::string;
  }
  iospayjsonresult_->assign(value);
}
inline void ReqRechargeIOSMessage::set_iospayjsonresult(const char* value, size_t size) {
  set_has_iospayjsonresult();
  if (iospayjsonresult_ == &::google::protobuf::internal::kEmptyString) {
    iospayjsonresult_ = new ::std::string;
  }
  iospayjsonresult_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRechargeIOSMessage::mutable_iospayjsonresult() {
  set_has_iospayjsonresult();
  if (iospayjsonresult_ == &::google::protobuf::internal::kEmptyString) {
    iospayjsonresult_ = new ::std::string;
  }
  return iospayjsonresult_;
}
inline ::std::string* ReqRechargeIOSMessage::release_iospayjsonresult() {
  clear_has_iospayjsonresult();
  if (iospayjsonresult_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = iospayjsonresult_;
    iospayjsonresult_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required string serverOrderId = 3;
inline bool ReqRechargeIOSMessage::has_serverorderid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqRechargeIOSMessage::set_has_serverorderid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqRechargeIOSMessage::clear_has_serverorderid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqRechargeIOSMessage::clear_serverorderid() {
  if (serverorderid_ != &::google::protobuf::internal::kEmptyString) {
    serverorderid_->clear();
  }
  clear_has_serverorderid();
}
inline const ::std::string& ReqRechargeIOSMessage::serverorderid() const {
  return *serverorderid_;
}
inline void ReqRechargeIOSMessage::set_serverorderid(const ::std::string& value) {
  set_has_serverorderid();
  if (serverorderid_ == &::google::protobuf::internal::kEmptyString) {
    serverorderid_ = new ::std::string;
  }
  serverorderid_->assign(value);
}
inline void ReqRechargeIOSMessage::set_serverorderid(const char* value) {
  set_has_serverorderid();
  if (serverorderid_ == &::google::protobuf::internal::kEmptyString) {
    serverorderid_ = new ::std::string;
  }
  serverorderid_->assign(value);
}
inline void ReqRechargeIOSMessage::set_serverorderid(const char* value, size_t size) {
  set_has_serverorderid();
  if (serverorderid_ == &::google::protobuf::internal::kEmptyString) {
    serverorderid_ = new ::std::string;
  }
  serverorderid_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqRechargeIOSMessage::mutable_serverorderid() {
  set_has_serverorderid();
  if (serverorderid_ == &::google::protobuf::internal::kEmptyString) {
    serverorderid_ = new ::std::string;
  }
  return serverorderid_;
}
inline ::std::string* ReqRechargeIOSMessage::release_serverorderid() {
  clear_has_serverorderid();
  if (serverorderid_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = serverorderid_;
    serverorderid_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResRechargeIOSMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResRechargeIOS];
inline bool ResRechargeIOSMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResRechargeIOSMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResRechargeIOSMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResRechargeIOSMessage::clear_msgid() {
  msgid_ = 203;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResRechargeIOSMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResRechargeIOSMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required string iosPayResults = 2;
inline bool ResRechargeIOSMessage::has_iospayresults() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResRechargeIOSMessage::set_has_iospayresults() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResRechargeIOSMessage::clear_has_iospayresults() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResRechargeIOSMessage::clear_iospayresults() {
  if (iospayresults_ != &::google::protobuf::internal::kEmptyString) {
    iospayresults_->clear();
  }
  clear_has_iospayresults();
}
inline const ::std::string& ResRechargeIOSMessage::iospayresults() const {
  return *iospayresults_;
}
inline void ResRechargeIOSMessage::set_iospayresults(const ::std::string& value) {
  set_has_iospayresults();
  if (iospayresults_ == &::google::protobuf::internal::kEmptyString) {
    iospayresults_ = new ::std::string;
  }
  iospayresults_->assign(value);
}
inline void ResRechargeIOSMessage::set_iospayresults(const char* value) {
  set_has_iospayresults();
  if (iospayresults_ == &::google::protobuf::internal::kEmptyString) {
    iospayresults_ = new ::std::string;
  }
  iospayresults_->assign(value);
}
inline void ResRechargeIOSMessage::set_iospayresults(const char* value, size_t size) {
  set_has_iospayresults();
  if (iospayresults_ == &::google::protobuf::internal::kEmptyString) {
    iospayresults_ = new ::std::string;
  }
  iospayresults_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResRechargeIOSMessage::mutable_iospayresults() {
  set_has_iospayresults();
  if (iospayresults_ == &::google::protobuf::internal::kEmptyString) {
    iospayresults_ = new ::std::string;
  }
  return iospayresults_;
}
inline ::std::string* ResRechargeIOSMessage::release_iospayresults() {
  clear_has_iospayresults();
  if (iospayresults_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = iospayresults_;
    iospayresults_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqWithDrawCashMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqWithDrawCash];
inline bool ReqWithDrawCashMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqWithDrawCashMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqWithDrawCashMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqWithDrawCashMessage::clear_msgid() {
  msgid_ = 250;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqWithDrawCashMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqWithDrawCashMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 type = 2;
inline bool ReqWithDrawCashMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqWithDrawCashMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqWithDrawCashMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqWithDrawCashMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqWithDrawCashMessage::type() const {
  return type_;
}
inline void ReqWithDrawCashMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 rmb = 3;
inline bool ReqWithDrawCashMessage::has_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqWithDrawCashMessage::set_has_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqWithDrawCashMessage::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqWithDrawCashMessage::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 ReqWithDrawCashMessage::rmb() const {
  return rmb_;
}
inline void ReqWithDrawCashMessage::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// -------------------------------------------------------------------

// ResWithDrawCashMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResWithDrawCash];
inline bool ResWithDrawCashMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResWithDrawCashMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResWithDrawCashMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResWithDrawCashMessage::clear_msgid() {
  msgid_ = 251;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResWithDrawCashMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResWithDrawCashMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 result = 2;
inline bool ResWithDrawCashMessage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResWithDrawCashMessage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResWithDrawCashMessage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResWithDrawCashMessage::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResWithDrawCashMessage::result() const {
  return result_;
}
inline void ResWithDrawCashMessage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 rmb = 3;
inline bool ResWithDrawCashMessage::has_rmb() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResWithDrawCashMessage::set_has_rmb() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResWithDrawCashMessage::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResWithDrawCashMessage::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 ResWithDrawCashMessage::rmb() const {
  return rmb_;
}
inline void ResWithDrawCashMessage::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// optional int32 type = 4;
inline bool ResWithDrawCashMessage::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResWithDrawCashMessage::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResWithDrawCashMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResWithDrawCashMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ResWithDrawCashMessage::type() const {
  return type_;
}
inline void ResWithDrawCashMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ReqChangeCardBgMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChangeCardBg];
inline bool ReqChangeCardBgMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChangeCardBgMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChangeCardBgMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChangeCardBgMessage::clear_msgid() {
  msgid_ = 301;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqChangeCardBgMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqChangeCardBgMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 reqType = 2;
inline bool ReqChangeCardBgMessage::has_reqtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChangeCardBgMessage::set_has_reqtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChangeCardBgMessage::clear_has_reqtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChangeCardBgMessage::clear_reqtype() {
  reqtype_ = 0;
  clear_has_reqtype();
}
inline ::google::protobuf::int32 ReqChangeCardBgMessage::reqtype() const {
  return reqtype_;
}
inline void ReqChangeCardBgMessage::set_reqtype(::google::protobuf::int32 value) {
  set_has_reqtype();
  reqtype_ = value;
}

// required int32 reqIndex = 3;
inline bool ReqChangeCardBgMessage::has_reqindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqChangeCardBgMessage::set_has_reqindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqChangeCardBgMessage::clear_has_reqindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqChangeCardBgMessage::clear_reqindex() {
  reqindex_ = 0;
  clear_has_reqindex();
}
inline ::google::protobuf::int32 ReqChangeCardBgMessage::reqindex() const {
  return reqindex_;
}
inline void ReqChangeCardBgMessage::set_reqindex(::google::protobuf::int32 value) {
  set_has_reqindex();
  reqindex_ = value;
}

// -------------------------------------------------------------------

// ResChangeCardBgMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResChangeCardBg];
inline bool ResChangeCardBgMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResChangeCardBgMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResChangeCardBgMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResChangeCardBgMessage::clear_msgid() {
  msgid_ = 302;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResChangeCardBgMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResChangeCardBgMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 resType = 2;
inline bool ResChangeCardBgMessage::has_restype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResChangeCardBgMessage::set_has_restype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResChangeCardBgMessage::clear_has_restype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResChangeCardBgMessage::clear_restype() {
  restype_ = 0;
  clear_has_restype();
}
inline ::google::protobuf::int32 ResChangeCardBgMessage::restype() const {
  return restype_;
}
inline void ResChangeCardBgMessage::set_restype(::google::protobuf::int32 value) {
  set_has_restype();
  restype_ = value;
}

// optional int32 resIndex = 3;
inline bool ResChangeCardBgMessage::has_resindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResChangeCardBgMessage::set_has_resindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResChangeCardBgMessage::clear_has_resindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResChangeCardBgMessage::clear_resindex() {
  resindex_ = 0;
  clear_has_resindex();
}
inline ::google::protobuf::int32 ResChangeCardBgMessage::resindex() const {
  return resindex_;
}
inline void ResChangeCardBgMessage::set_resindex(::google::protobuf::int32 value) {
  set_has_resindex();
  resindex_ = value;
}

// -------------------------------------------------------------------

// ReqApplyAgencyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqApplyAgency];
inline bool ReqApplyAgencyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqApplyAgencyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqApplyAgencyMessage::clear_msgid() {
  msgid_ = 310;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqApplyAgencyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqApplyAgencyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string agentAcc = 2;
inline bool ReqApplyAgencyMessage::has_agentacc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_agentacc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqApplyAgencyMessage::clear_has_agentacc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqApplyAgencyMessage::clear_agentacc() {
  if (agentacc_ != &::google::protobuf::internal::kEmptyString) {
    agentacc_->clear();
  }
  clear_has_agentacc();
}
inline const ::std::string& ReqApplyAgencyMessage::agentacc() const {
  return *agentacc_;
}
inline void ReqApplyAgencyMessage::set_agentacc(const ::std::string& value) {
  set_has_agentacc();
  if (agentacc_ == &::google::protobuf::internal::kEmptyString) {
    agentacc_ = new ::std::string;
  }
  agentacc_->assign(value);
}
inline void ReqApplyAgencyMessage::set_agentacc(const char* value) {
  set_has_agentacc();
  if (agentacc_ == &::google::protobuf::internal::kEmptyString) {
    agentacc_ = new ::std::string;
  }
  agentacc_->assign(value);
}
inline void ReqApplyAgencyMessage::set_agentacc(const char* value, size_t size) {
  set_has_agentacc();
  if (agentacc_ == &::google::protobuf::internal::kEmptyString) {
    agentacc_ = new ::std::string;
  }
  agentacc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqApplyAgencyMessage::mutable_agentacc() {
  set_has_agentacc();
  if (agentacc_ == &::google::protobuf::internal::kEmptyString) {
    agentacc_ = new ::std::string;
  }
  return agentacc_;
}
inline ::std::string* ReqApplyAgencyMessage::release_agentacc() {
  clear_has_agentacc();
  if (agentacc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = agentacc_;
    agentacc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string QQ = 3;
inline bool ReqApplyAgencyMessage::has_qq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_qq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqApplyAgencyMessage::clear_has_qq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqApplyAgencyMessage::clear_qq() {
  if (qq_ != &::google::protobuf::internal::kEmptyString) {
    qq_->clear();
  }
  clear_has_qq();
}
inline const ::std::string& ReqApplyAgencyMessage::qq() const {
  return *qq_;
}
inline void ReqApplyAgencyMessage::set_qq(const ::std::string& value) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(value);
}
inline void ReqApplyAgencyMessage::set_qq(const char* value) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(value);
}
inline void ReqApplyAgencyMessage::set_qq(const char* value, size_t size) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqApplyAgencyMessage::mutable_qq() {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  return qq_;
}
inline ::std::string* ReqApplyAgencyMessage::release_qq() {
  clear_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = qq_;
    qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string wechat = 4;
inline bool ReqApplyAgencyMessage::has_wechat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_wechat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqApplyAgencyMessage::clear_has_wechat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqApplyAgencyMessage::clear_wechat() {
  if (wechat_ != &::google::protobuf::internal::kEmptyString) {
    wechat_->clear();
  }
  clear_has_wechat();
}
inline const ::std::string& ReqApplyAgencyMessage::wechat() const {
  return *wechat_;
}
inline void ReqApplyAgencyMessage::set_wechat(const ::std::string& value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void ReqApplyAgencyMessage::set_wechat(const char* value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void ReqApplyAgencyMessage::set_wechat(const char* value, size_t size) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqApplyAgencyMessage::mutable_wechat() {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  return wechat_;
}
inline ::std::string* ReqApplyAgencyMessage::release_wechat() {
  clear_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = wechat_;
    wechat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string agentName = 5;
inline bool ReqApplyAgencyMessage::has_agentname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_agentname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqApplyAgencyMessage::clear_has_agentname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqApplyAgencyMessage::clear_agentname() {
  if (agentname_ != &::google::protobuf::internal::kEmptyString) {
    agentname_->clear();
  }
  clear_has_agentname();
}
inline const ::std::string& ReqApplyAgencyMessage::agentname() const {
  return *agentname_;
}
inline void ReqApplyAgencyMessage::set_agentname(const ::std::string& value) {
  set_has_agentname();
  if (agentname_ == &::google::protobuf::internal::kEmptyString) {
    agentname_ = new ::std::string;
  }
  agentname_->assign(value);
}
inline void ReqApplyAgencyMessage::set_agentname(const char* value) {
  set_has_agentname();
  if (agentname_ == &::google::protobuf::internal::kEmptyString) {
    agentname_ = new ::std::string;
  }
  agentname_->assign(value);
}
inline void ReqApplyAgencyMessage::set_agentname(const char* value, size_t size) {
  set_has_agentname();
  if (agentname_ == &::google::protobuf::internal::kEmptyString) {
    agentname_ = new ::std::string;
  }
  agentname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqApplyAgencyMessage::mutable_agentname() {
  set_has_agentname();
  if (agentname_ == &::google::protobuf::internal::kEmptyString) {
    agentname_ = new ::std::string;
  }
  return agentname_;
}
inline ::std::string* ReqApplyAgencyMessage::release_agentname() {
  clear_has_agentname();
  if (agentname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = agentname_;
    agentname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string reason = 6;
inline bool ReqApplyAgencyMessage::has_reason() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqApplyAgencyMessage::set_has_reason() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqApplyAgencyMessage::clear_has_reason() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqApplyAgencyMessage::clear_reason() {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& ReqApplyAgencyMessage::reason() const {
  return *reason_;
}
inline void ReqApplyAgencyMessage::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void ReqApplyAgencyMessage::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void ReqApplyAgencyMessage::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqApplyAgencyMessage::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  return reason_;
}
inline ::std::string* ReqApplyAgencyMessage::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResApplyAgencyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResApplyAgency];
inline bool ResApplyAgencyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResApplyAgencyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResApplyAgencyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResApplyAgencyMessage::clear_msgid() {
  msgid_ = 311;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResApplyAgencyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResApplyAgencyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 result = 2;
inline bool ResApplyAgencyMessage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResApplyAgencyMessage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResApplyAgencyMessage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResApplyAgencyMessage::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResApplyAgencyMessage::result() const {
  return result_;
}
inline void ResApplyAgencyMessage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqChatWithServiceMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChatWithService];
inline bool ReqChatWithServiceMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChatWithServiceMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChatWithServiceMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChatWithServiceMessage::clear_msgid() {
  msgid_ = 312;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqChatWithServiceMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqChatWithServiceMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool ReqChatWithServiceMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChatWithServiceMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChatWithServiceMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChatWithServiceMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqChatWithServiceMessage::type() const {
  return type_;
}
inline void ReqChatWithServiceMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string content = 3;
inline bool ReqChatWithServiceMessage::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqChatWithServiceMessage::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqChatWithServiceMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqChatWithServiceMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ReqChatWithServiceMessage::content() const {
  return *content_;
}
inline void ReqChatWithServiceMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatWithServiceMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatWithServiceMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqChatWithServiceMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ReqChatWithServiceMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResChatWithServiceMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResChatWithService];
inline bool ResChatWithServiceMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResChatWithServiceMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResChatWithServiceMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResChatWithServiceMessage::clear_msgid() {
  msgid_ = 313;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResChatWithServiceMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResChatWithServiceMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated string contents = 2;
inline int ResChatWithServiceMessage::contents_size() const {
  return contents_.size();
}
inline void ResChatWithServiceMessage::clear_contents() {
  contents_.Clear();
}
inline const ::std::string& ResChatWithServiceMessage::contents(int index) const {
  return contents_.Get(index);
}
inline ::std::string* ResChatWithServiceMessage::mutable_contents(int index) {
  return contents_.Mutable(index);
}
inline void ResChatWithServiceMessage::set_contents(int index, const ::std::string& value) {
  contents_.Mutable(index)->assign(value);
}
inline void ResChatWithServiceMessage::set_contents(int index, const char* value) {
  contents_.Mutable(index)->assign(value);
}
inline void ResChatWithServiceMessage::set_contents(int index, const char* value, size_t size) {
  contents_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResChatWithServiceMessage::add_contents() {
  return contents_.Add();
}
inline void ResChatWithServiceMessage::add_contents(const ::std::string& value) {
  contents_.Add()->assign(value);
}
inline void ResChatWithServiceMessage::add_contents(const char* value) {
  contents_.Add()->assign(value);
}
inline void ResChatWithServiceMessage::add_contents(const char* value, size_t size) {
  contents_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResChatWithServiceMessage::contents() const {
  return contents_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResChatWithServiceMessage::mutable_contents() {
  return &contents_;
}

// -------------------------------------------------------------------

// ReqReportAgencyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReportAgency];
inline bool ReqReportAgencyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReportAgencyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReportAgencyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReportAgencyMessage::clear_msgid() {
  msgid_ = 314;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqReportAgencyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqReportAgencyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string weChat = 2;
inline bool ReqReportAgencyMessage::has_wechat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqReportAgencyMessage::set_has_wechat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqReportAgencyMessage::clear_has_wechat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqReportAgencyMessage::clear_wechat() {
  if (wechat_ != &::google::protobuf::internal::kEmptyString) {
    wechat_->clear();
  }
  clear_has_wechat();
}
inline const ::std::string& ReqReportAgencyMessage::wechat() const {
  return *wechat_;
}
inline void ReqReportAgencyMessage::set_wechat(const ::std::string& value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void ReqReportAgencyMessage::set_wechat(const char* value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void ReqReportAgencyMessage::set_wechat(const char* value, size_t size) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqReportAgencyMessage::mutable_wechat() {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  return wechat_;
}
inline ::std::string* ReqReportAgencyMessage::release_wechat() {
  clear_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = wechat_;
    wechat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string reason = 3;
inline bool ReqReportAgencyMessage::has_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqReportAgencyMessage::set_has_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqReportAgencyMessage::clear_has_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqReportAgencyMessage::clear_reason() {
  if (reason_ != &::google::protobuf::internal::kEmptyString) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& ReqReportAgencyMessage::reason() const {
  return *reason_;
}
inline void ReqReportAgencyMessage::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void ReqReportAgencyMessage::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
}
inline void ReqReportAgencyMessage::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqReportAgencyMessage::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    reason_ = new ::std::string;
  }
  return reason_;
}
inline ::std::string* ReqReportAgencyMessage::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResReportAgencyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResReportAgency];
inline bool ResReportAgencyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResReportAgencyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResReportAgencyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResReportAgencyMessage::clear_msgid() {
  msgid_ = 315;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResReportAgencyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResReportAgencyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 result = 2;
inline bool ResReportAgencyMessage::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResReportAgencyMessage::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResReportAgencyMessage::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResReportAgencyMessage::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 ResReportAgencyMessage::result() const {
  return result_;
}
inline void ResReportAgencyMessage::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqWithDrawCashInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqWithDrawCashInfo];
inline bool ReqWithDrawCashInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqWithDrawCashInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqWithDrawCashInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqWithDrawCashInfoMessage::clear_msgid() {
  msgid_ = 316;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqWithDrawCashInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqWithDrawCashInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResWithDrawCashInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResWithDrawCashInfo];
inline bool ResWithDrawCashInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResWithDrawCashInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResWithDrawCashInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResWithDrawCashInfoMessage::clear_msgid() {
  msgid_ = 317;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResWithDrawCashInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResWithDrawCashInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.WithDrawCashInfo withDrawCashInfo = 2;
inline int ResWithDrawCashInfoMessage::withdrawcashinfo_size() const {
  return withdrawcashinfo_.size();
}
inline void ResWithDrawCashInfoMessage::clear_withdrawcashinfo() {
  withdrawcashinfo_.Clear();
}
inline const ::com::game::proto::WithDrawCashInfo& ResWithDrawCashInfoMessage::withdrawcashinfo(int index) const {
  return withdrawcashinfo_.Get(index);
}
inline ::com::game::proto::WithDrawCashInfo* ResWithDrawCashInfoMessage::mutable_withdrawcashinfo(int index) {
  return withdrawcashinfo_.Mutable(index);
}
inline ::com::game::proto::WithDrawCashInfo* ResWithDrawCashInfoMessage::add_withdrawcashinfo() {
  return withdrawcashinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::WithDrawCashInfo >&
ResWithDrawCashInfoMessage::withdrawcashinfo() const {
  return withdrawcashinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::WithDrawCashInfo >*
ResWithDrawCashInfoMessage::mutable_withdrawcashinfo() {
  return &withdrawcashinfo_;
}

// -------------------------------------------------------------------

// WithDrawCashInfo

// optional string id = 1;
inline bool WithDrawCashInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WithDrawCashInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WithDrawCashInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WithDrawCashInfo::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& WithDrawCashInfo::id() const {
  return *id_;
}
inline void WithDrawCashInfo::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void WithDrawCashInfo::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void WithDrawCashInfo::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WithDrawCashInfo::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* WithDrawCashInfo::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string alipyacc = 2;
inline bool WithDrawCashInfo::has_alipyacc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WithDrawCashInfo::set_has_alipyacc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WithDrawCashInfo::clear_has_alipyacc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WithDrawCashInfo::clear_alipyacc() {
  if (alipyacc_ != &::google::protobuf::internal::kEmptyString) {
    alipyacc_->clear();
  }
  clear_has_alipyacc();
}
inline const ::std::string& WithDrawCashInfo::alipyacc() const {
  return *alipyacc_;
}
inline void WithDrawCashInfo::set_alipyacc(const ::std::string& value) {
  set_has_alipyacc();
  if (alipyacc_ == &::google::protobuf::internal::kEmptyString) {
    alipyacc_ = new ::std::string;
  }
  alipyacc_->assign(value);
}
inline void WithDrawCashInfo::set_alipyacc(const char* value) {
  set_has_alipyacc();
  if (alipyacc_ == &::google::protobuf::internal::kEmptyString) {
    alipyacc_ = new ::std::string;
  }
  alipyacc_->assign(value);
}
inline void WithDrawCashInfo::set_alipyacc(const char* value, size_t size) {
  set_has_alipyacc();
  if (alipyacc_ == &::google::protobuf::internal::kEmptyString) {
    alipyacc_ = new ::std::string;
  }
  alipyacc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WithDrawCashInfo::mutable_alipyacc() {
  set_has_alipyacc();
  if (alipyacc_ == &::google::protobuf::internal::kEmptyString) {
    alipyacc_ = new ::std::string;
  }
  return alipyacc_;
}
inline ::std::string* WithDrawCashInfo::release_alipyacc() {
  clear_has_alipyacc();
  if (alipyacc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = alipyacc_;
    alipyacc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 time = 3;
inline bool WithDrawCashInfo::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WithDrawCashInfo::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WithDrawCashInfo::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WithDrawCashInfo::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 WithDrawCashInfo::time() const {
  return time_;
}
inline void WithDrawCashInfo::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional double money = 4;
inline bool WithDrawCashInfo::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WithDrawCashInfo::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WithDrawCashInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WithDrawCashInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline double WithDrawCashInfo::money() const {
  return money_;
}
inline void WithDrawCashInfo::set_money(double value) {
  set_has_money();
  money_ = value;
}

// optional int32 result = 5;
inline bool WithDrawCashInfo::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WithDrawCashInfo::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WithDrawCashInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WithDrawCashInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WithDrawCashInfo::result() const {
  return result_;
}
inline void WithDrawCashInfo::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// UpdateWithDrawCashInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateWithDrawCashInfo];
inline bool UpdateWithDrawCashInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateWithDrawCashInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateWithDrawCashInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateWithDrawCashInfoMessage::clear_msgid() {
  msgid_ = 318;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdateWithDrawCashInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdateWithDrawCashInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional string id = 2;
inline bool UpdateWithDrawCashInfoMessage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateWithDrawCashInfoMessage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateWithDrawCashInfoMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateWithDrawCashInfoMessage::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& UpdateWithDrawCashInfoMessage::id() const {
  return *id_;
}
inline void UpdateWithDrawCashInfoMessage::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void UpdateWithDrawCashInfoMessage::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void UpdateWithDrawCashInfoMessage::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateWithDrawCashInfoMessage::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* UpdateWithDrawCashInfoMessage::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 state = 3;
inline bool UpdateWithDrawCashInfoMessage::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateWithDrawCashInfoMessage::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateWithDrawCashInfoMessage::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateWithDrawCashInfoMessage::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UpdateWithDrawCashInfoMessage::state() const {
  return state_;
}
inline void UpdateWithDrawCashInfoMessage::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// -------------------------------------------------------------------

// ReqAgencyInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAgencyInfo];
inline bool ReqAgencyInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAgencyInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAgencyInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAgencyInfoMessage::clear_msgid() {
  msgid_ = 319;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqAgencyInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqAgencyInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResAgencyInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResAgencyInfo];
inline bool ResAgencyInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResAgencyInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResAgencyInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResAgencyInfoMessage::clear_msgid() {
  msgid_ = 320;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResAgencyInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResAgencyInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.AgencyInfo agencyInfo = 2;
inline int ResAgencyInfoMessage::agencyinfo_size() const {
  return agencyinfo_.size();
}
inline void ResAgencyInfoMessage::clear_agencyinfo() {
  agencyinfo_.Clear();
}
inline const ::com::game::proto::AgencyInfo& ResAgencyInfoMessage::agencyinfo(int index) const {
  return agencyinfo_.Get(index);
}
inline ::com::game::proto::AgencyInfo* ResAgencyInfoMessage::mutable_agencyinfo(int index) {
  return agencyinfo_.Mutable(index);
}
inline ::com::game::proto::AgencyInfo* ResAgencyInfoMessage::add_agencyinfo() {
  return agencyinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgencyInfo >&
ResAgencyInfoMessage::agencyinfo() const {
  return agencyinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgencyInfo >*
ResAgencyInfoMessage::mutable_agencyinfo() {
  return &agencyinfo_;
}

// -------------------------------------------------------------------

// AgencyInfo

// optional int32 id = 1;
inline bool AgencyInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgencyInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgencyInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgencyInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 AgencyInfo::id() const {
  return id_;
}
inline void AgencyInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool AgencyInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgencyInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgencyInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgencyInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AgencyInfo::name() const {
  return *name_;
}
inline void AgencyInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AgencyInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void AgencyInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AgencyInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* AgencyInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string QQ = 3;
inline bool AgencyInfo::has_qq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AgencyInfo::set_has_qq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AgencyInfo::clear_has_qq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AgencyInfo::clear_qq() {
  if (qq_ != &::google::protobuf::internal::kEmptyString) {
    qq_->clear();
  }
  clear_has_qq();
}
inline const ::std::string& AgencyInfo::qq() const {
  return *qq_;
}
inline void AgencyInfo::set_qq(const ::std::string& value) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(value);
}
inline void AgencyInfo::set_qq(const char* value) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(value);
}
inline void AgencyInfo::set_qq(const char* value, size_t size) {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  qq_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AgencyInfo::mutable_qq() {
  set_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    qq_ = new ::std::string;
  }
  return qq_;
}
inline ::std::string* AgencyInfo::release_qq() {
  clear_has_qq();
  if (qq_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = qq_;
    qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string weChat = 4;
inline bool AgencyInfo::has_wechat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AgencyInfo::set_has_wechat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AgencyInfo::clear_has_wechat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AgencyInfo::clear_wechat() {
  if (wechat_ != &::google::protobuf::internal::kEmptyString) {
    wechat_->clear();
  }
  clear_has_wechat();
}
inline const ::std::string& AgencyInfo::wechat() const {
  return *wechat_;
}
inline void AgencyInfo::set_wechat(const ::std::string& value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void AgencyInfo::set_wechat(const char* value) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(value);
}
inline void AgencyInfo::set_wechat(const char* value, size_t size) {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  wechat_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AgencyInfo::mutable_wechat() {
  set_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    wechat_ = new ::std::string;
  }
  return wechat_;
}
inline ::std::string* AgencyInfo::release_wechat() {
  clear_has_wechat();
  if (wechat_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = wechat_;
    wechat_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string describe = 5;
inline bool AgencyInfo::has_describe() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AgencyInfo::set_has_describe() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AgencyInfo::clear_has_describe() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AgencyInfo::clear_describe() {
  if (describe_ != &::google::protobuf::internal::kEmptyString) {
    describe_->clear();
  }
  clear_has_describe();
}
inline const ::std::string& AgencyInfo::describe() const {
  return *describe_;
}
inline void AgencyInfo::set_describe(const ::std::string& value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::kEmptyString) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void AgencyInfo::set_describe(const char* value) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::kEmptyString) {
    describe_ = new ::std::string;
  }
  describe_->assign(value);
}
inline void AgencyInfo::set_describe(const char* value, size_t size) {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::kEmptyString) {
    describe_ = new ::std::string;
  }
  describe_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AgencyInfo::mutable_describe() {
  set_has_describe();
  if (describe_ == &::google::protobuf::internal::kEmptyString) {
    describe_ = new ::std::string;
  }
  return describe_;
}
inline ::std::string* AgencyInfo::release_describe() {
  clear_has_describe();
  if (describe_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = describe_;
    describe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// UpdateBankWithdrawStateMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateBankWithdrawState];
inline bool UpdateBankWithdrawStateMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateBankWithdrawStateMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateBankWithdrawStateMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateBankWithdrawStateMessage::clear_msgid() {
  msgid_ = 321;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdateBankWithdrawStateMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdateBankWithdrawStateMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional bool isOpen = 2;
inline bool UpdateBankWithdrawStateMessage::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateBankWithdrawStateMessage::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateBankWithdrawStateMessage::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateBankWithdrawStateMessage::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool UpdateBankWithdrawStateMessage::isopen() const {
  return isopen_;
}
inline void UpdateBankWithdrawStateMessage::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// -------------------------------------------------------------------

// UpdateReferrerInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateReferrerInfo];
inline bool UpdateReferrerInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateReferrerInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateReferrerInfoMessage::clear_msgid() {
  msgid_ = 322;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdateReferrerInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdateReferrerInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 num1 = 2;
inline bool UpdateReferrerInfoMessage::has_num1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_num1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateReferrerInfoMessage::clear_has_num1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateReferrerInfoMessage::clear_num1() {
  num1_ = 0;
  clear_has_num1();
}
inline ::google::protobuf::int32 UpdateReferrerInfoMessage::num1() const {
  return num1_;
}
inline void UpdateReferrerInfoMessage::set_num1(::google::protobuf::int32 value) {
  set_has_num1();
  num1_ = value;
}

// optional int32 num2 = 3;
inline bool UpdateReferrerInfoMessage::has_num2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_num2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateReferrerInfoMessage::clear_has_num2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateReferrerInfoMessage::clear_num2() {
  num2_ = 0;
  clear_has_num2();
}
inline ::google::protobuf::int32 UpdateReferrerInfoMessage::num2() const {
  return num2_;
}
inline void UpdateReferrerInfoMessage::set_num2(::google::protobuf::int32 value) {
  set_has_num2();
  num2_ = value;
}

// optional int32 num3 = 4;
inline bool UpdateReferrerInfoMessage::has_num3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_num3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateReferrerInfoMessage::clear_has_num3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateReferrerInfoMessage::clear_num3() {
  num3_ = 0;
  clear_has_num3();
}
inline ::google::protobuf::int32 UpdateReferrerInfoMessage::num3() const {
  return num3_;
}
inline void UpdateReferrerInfoMessage::set_num3(::google::protobuf::int32 value) {
  set_has_num3();
  num3_ = value;
}

// optional int32 num4 = 5;
inline bool UpdateReferrerInfoMessage::has_num4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_num4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateReferrerInfoMessage::clear_has_num4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateReferrerInfoMessage::clear_num4() {
  num4_ = 0;
  clear_has_num4();
}
inline ::google::protobuf::int32 UpdateReferrerInfoMessage::num4() const {
  return num4_;
}
inline void UpdateReferrerInfoMessage::set_num4(::google::protobuf::int32 value) {
  set_has_num4();
  num4_ = value;
}

// optional double getMoney = 6;
inline bool UpdateReferrerInfoMessage::has_getmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdateReferrerInfoMessage::set_has_getmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdateReferrerInfoMessage::clear_has_getmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdateReferrerInfoMessage::clear_getmoney() {
  getmoney_ = 0;
  clear_has_getmoney();
}
inline double UpdateReferrerInfoMessage::getmoney() const {
  return getmoney_;
}
inline void UpdateReferrerInfoMessage::set_getmoney(double value) {
  set_has_getmoney();
  getmoney_ = value;
}

// -------------------------------------------------------------------

// ReqTransferReferMoneyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTransferReferMoney];
inline bool ReqTransferReferMoneyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTransferReferMoneyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTransferReferMoneyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTransferReferMoneyMessage::clear_msgid() {
  msgid_ = 323;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqTransferReferMoneyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqTransferReferMoneyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResSystemNoticeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResSystemNotice];
inline bool ResSystemNoticeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResSystemNoticeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResSystemNoticeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResSystemNoticeMessage::clear_msgid() {
  msgid_ = 324;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResSystemNoticeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResSystemNoticeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 state = 2;
inline bool ResSystemNoticeMessage::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResSystemNoticeMessage::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResSystemNoticeMessage::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResSystemNoticeMessage::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ResSystemNoticeMessage::state() const {
  return state_;
}
inline void ResSystemNoticeMessage::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional double money = 3;
inline bool ResSystemNoticeMessage::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResSystemNoticeMessage::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResSystemNoticeMessage::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResSystemNoticeMessage::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline double ResSystemNoticeMessage::money() const {
  return money_;
}
inline void ResSystemNoticeMessage::set_money(double value) {
  set_has_money();
  money_ = value;
}

// optional string content = 4;
inline bool ResSystemNoticeMessage::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResSystemNoticeMessage::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResSystemNoticeMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResSystemNoticeMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ResSystemNoticeMessage::content() const {
  return *content_;
}
inline void ResSystemNoticeMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ResSystemNoticeMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ResSystemNoticeMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResSystemNoticeMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ResSystemNoticeMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 vip = 5;
inline bool ResSystemNoticeMessage::has_vip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResSystemNoticeMessage::set_has_vip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResSystemNoticeMessage::clear_has_vip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResSystemNoticeMessage::clear_vip() {
  vip_ = 0;
  clear_has_vip();
}
inline ::google::protobuf::int32 ResSystemNoticeMessage::vip() const {
  return vip_;
}
inline void ResSystemNoticeMessage::set_vip(::google::protobuf::int32 value) {
  set_has_vip();
  vip_ = value;
}

// optional int32 gameid = 6;
inline bool ResSystemNoticeMessage::has_gameid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResSystemNoticeMessage::set_has_gameid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResSystemNoticeMessage::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResSystemNoticeMessage::clear_gameid() {
  gameid_ = 0;
  clear_has_gameid();
}
inline ::google::protobuf::int32 ResSystemNoticeMessage::gameid() const {
  return gameid_;
}
inline void ResSystemNoticeMessage::set_gameid(::google::protobuf::int32 value) {
  set_has_gameid();
  gameid_ = value;
}

// -------------------------------------------------------------------

// ReqReadMailMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReadMail];
inline bool ReqReadMailMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReadMailMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReadMailMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReadMailMessage::clear_msgid() {
  msgid_ = 401;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqReadMailMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqReadMailMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int64 mailId = 2;
inline bool ReqReadMailMessage::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqReadMailMessage::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqReadMailMessage::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqReadMailMessage::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 ReqReadMailMessage::mailid() const {
  return mailid_;
}
inline void ReqReadMailMessage::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// ReqDeleteMailMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqDeleteMail];
inline bool ReqDeleteMailMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqDeleteMailMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqDeleteMailMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqDeleteMailMessage::clear_msgid() {
  msgid_ = 400;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqDeleteMailMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqDeleteMailMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int64 mailIds = 2;
inline int ReqDeleteMailMessage::mailids_size() const {
  return mailids_.size();
}
inline void ReqDeleteMailMessage::clear_mailids() {
  mailids_.Clear();
}
inline ::google::protobuf::int64 ReqDeleteMailMessage::mailids(int index) const {
  return mailids_.Get(index);
}
inline void ReqDeleteMailMessage::set_mailids(int index, ::google::protobuf::int64 value) {
  mailids_.Set(index, value);
}
inline void ReqDeleteMailMessage::add_mailids(::google::protobuf::int64 value) {
  mailids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ReqDeleteMailMessage::mailids() const {
  return mailids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ReqDeleteMailMessage::mutable_mailids() {
  return &mailids_;
}

// -------------------------------------------------------------------

// ReqGetMailMoneyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetMailMoney];
inline bool ReqGetMailMoneyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetMailMoneyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetMailMoneyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetMailMoneyMessage::clear_msgid() {
  msgid_ = 402;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGetMailMoneyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGetMailMoneyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int64 mailId = 2;
inline bool ReqGetMailMoneyMessage::has_mailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqGetMailMoneyMessage::set_has_mailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqGetMailMoneyMessage::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqGetMailMoneyMessage::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 ReqGetMailMoneyMessage::mailid() const {
  return mailid_;
}
inline void ReqGetMailMoneyMessage::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// -------------------------------------------------------------------

// UpdateMailMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateMail];
inline bool UpdateMailMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateMailMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateMailMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateMailMessage::clear_msgid() {
  msgid_ = 403;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdateMailMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdateMailMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool UpdateMailMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateMailMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateMailMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateMailMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UpdateMailMessage::type() const {
  return type_;
}
inline void UpdateMailMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated .com.game.proto.MailInfo mails = 3;
inline int UpdateMailMessage::mails_size() const {
  return mails_.size();
}
inline void UpdateMailMessage::clear_mails() {
  mails_.Clear();
}
inline const ::com::game::proto::MailInfo& UpdateMailMessage::mails(int index) const {
  return mails_.Get(index);
}
inline ::com::game::proto::MailInfo* UpdateMailMessage::mutable_mails(int index) {
  return mails_.Mutable(index);
}
inline ::com::game::proto::MailInfo* UpdateMailMessage::add_mails() {
  return mails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailInfo >&
UpdateMailMessage::mails() const {
  return mails_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailInfo >*
UpdateMailMessage::mutable_mails() {
  return &mails_;
}

// -------------------------------------------------------------------

// MailInfo

// optional int64 mailId = 1;
inline bool MailInfo::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailInfo::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailInfo::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailInfo::clear_mailid() {
  mailid_ = GOOGLE_LONGLONG(0);
  clear_has_mailid();
}
inline ::google::protobuf::int64 MailInfo::mailid() const {
  return mailid_;
}
inline void MailInfo::set_mailid(::google::protobuf::int64 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional string sendName = 2;
inline bool MailInfo::has_sendname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailInfo::set_has_sendname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailInfo::clear_has_sendname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailInfo::clear_sendname() {
  if (sendname_ != &::google::protobuf::internal::kEmptyString) {
    sendname_->clear();
  }
  clear_has_sendname();
}
inline const ::std::string& MailInfo::sendname() const {
  return *sendname_;
}
inline void MailInfo::set_sendname(const ::std::string& value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void MailInfo::set_sendname(const char* value) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(value);
}
inline void MailInfo::set_sendname(const char* value, size_t size) {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  sendname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailInfo::mutable_sendname() {
  set_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    sendname_ = new ::std::string;
  }
  return sendname_;
}
inline ::std::string* MailInfo::release_sendname() {
  clear_has_sendname();
  if (sendname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = sendname_;
    sendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string title = 3;
inline bool MailInfo::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailInfo::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailInfo::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailInfo::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailInfo::title() const {
  return *title_;
}
inline void MailInfo::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailInfo::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailInfo::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailInfo::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MailInfo::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string notice = 4;
inline bool MailInfo::has_notice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailInfo::set_has_notice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailInfo::clear_has_notice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailInfo::clear_notice() {
  if (notice_ != &::google::protobuf::internal::kEmptyString) {
    notice_->clear();
  }
  clear_has_notice();
}
inline const ::std::string& MailInfo::notice() const {
  return *notice_;
}
inline void MailInfo::set_notice(const ::std::string& value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void MailInfo::set_notice(const char* value) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void MailInfo::set_notice(const char* value, size_t size) {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailInfo::mutable_notice() {
  set_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    notice_ = new ::std::string;
  }
  return notice_;
}
inline ::std::string* MailInfo::release_notice() {
  clear_has_notice();
  if (notice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = notice_;
    notice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 creatTime = 5;
inline bool MailInfo::has_creattime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailInfo::set_has_creattime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailInfo::clear_has_creattime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailInfo::clear_creattime() {
  creattime_ = GOOGLE_LONGLONG(0);
  clear_has_creattime();
}
inline ::google::protobuf::int64 MailInfo::creattime() const {
  return creattime_;
}
inline void MailInfo::set_creattime(::google::protobuf::int64 value) {
  set_has_creattime();
  creattime_ = value;
}

// optional bool isRead = 6;
inline bool MailInfo::has_isread() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailInfo::set_has_isread() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailInfo::clear_has_isread() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailInfo::clear_isread() {
  isread_ = false;
  clear_has_isread();
}
inline bool MailInfo::isread() const {
  return isread_;
}
inline void MailInfo::set_isread(bool value) {
  set_has_isread();
  isread_ = value;
}

// optional double money = 7;
inline bool MailInfo::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailInfo::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailInfo::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailInfo::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline double MailInfo::money() const {
  return money_;
}
inline void MailInfo::set_money(double value) {
  set_has_money();
  money_ = value;
}

// optional int64 getMoneyTime = 8;
inline bool MailInfo::has_getmoneytime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailInfo::set_has_getmoneytime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailInfo::clear_has_getmoneytime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailInfo::clear_getmoneytime() {
  getmoneytime_ = GOOGLE_LONGLONG(0);
  clear_has_getmoneytime();
}
inline ::google::protobuf::int64 MailInfo::getmoneytime() const {
  return getmoneytime_;
}
inline void MailInfo::set_getmoneytime(::google::protobuf::int64 value) {
  set_has_getmoneytime();
  getmoneytime_ = value;
}

// repeated .com.game.proto.MailGoods goodsList = 9;
inline int MailInfo::goodslist_size() const {
  return goodslist_.size();
}
inline void MailInfo::clear_goodslist() {
  goodslist_.Clear();
}
inline const ::com::game::proto::MailGoods& MailInfo::goodslist(int index) const {
  return goodslist_.Get(index);
}
inline ::com::game::proto::MailGoods* MailInfo::mutable_goodslist(int index) {
  return goodslist_.Mutable(index);
}
inline ::com::game::proto::MailGoods* MailInfo::add_goodslist() {
  return goodslist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailGoods >&
MailInfo::goodslist() const {
  return goodslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::MailGoods >*
MailInfo::mutable_goodslist() {
  return &goodslist_;
}

// -------------------------------------------------------------------

// MailGoods

// optional int32 goodsModelId = 1;
inline bool MailGoods::has_goodsmodelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailGoods::set_has_goodsmodelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailGoods::clear_has_goodsmodelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailGoods::clear_goodsmodelid() {
  goodsmodelid_ = 0;
  clear_has_goodsmodelid();
}
inline ::google::protobuf::int32 MailGoods::goodsmodelid() const {
  return goodsmodelid_;
}
inline void MailGoods::set_goodsmodelid(::google::protobuf::int32 value) {
  set_has_goodsmodelid();
  goodsmodelid_ = value;
}

// optional int32 goodsNum = 2;
inline bool MailGoods::has_goodsnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailGoods::set_has_goodsnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailGoods::clear_has_goodsnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailGoods::clear_goodsnum() {
  goodsnum_ = 0;
  clear_has_goodsnum();
}
inline ::google::protobuf::int32 MailGoods::goodsnum() const {
  return goodsnum_;
}
inline void MailGoods::set_goodsnum(::google::protobuf::int32 value) {
  set_has_goodsnum();
  goodsnum_ = value;
}

// -------------------------------------------------------------------

// UpdatePlayerRechargeInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdatePlayerRechargeInfo];
inline bool UpdatePlayerRechargeInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_msgid() {
  msgid_ = 404;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdatePlayerRechargeInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdatePlayerRechargeInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool UpdatePlayerRechargeInfoMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 UpdatePlayerRechargeInfoMessage::type() const {
  return type_;
}
inline void UpdatePlayerRechargeInfoMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 agencyRechargeCount = 3;
inline bool UpdatePlayerRechargeInfoMessage::has_agencyrechargecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_agencyrechargecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_agencyrechargecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_agencyrechargecount() {
  agencyrechargecount_ = 0;
  clear_has_agencyrechargecount();
}
inline ::google::protobuf::int32 UpdatePlayerRechargeInfoMessage::agencyrechargecount() const {
  return agencyrechargecount_;
}
inline void UpdatePlayerRechargeInfoMessage::set_agencyrechargecount(::google::protobuf::int32 value) {
  set_has_agencyrechargecount();
  agencyrechargecount_ = value;
}

// optional double agencyRechargeMoney = 4;
inline bool UpdatePlayerRechargeInfoMessage::has_agencyrechargemoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_agencyrechargemoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_agencyrechargemoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_agencyrechargemoney() {
  agencyrechargemoney_ = 0;
  clear_has_agencyrechargemoney();
}
inline double UpdatePlayerRechargeInfoMessage::agencyrechargemoney() const {
  return agencyrechargemoney_;
}
inline void UpdatePlayerRechargeInfoMessage::set_agencyrechargemoney(double value) {
  set_has_agencyrechargemoney();
  agencyrechargemoney_ = value;
}

// optional int32 officialRechargeCount = 5;
inline bool UpdatePlayerRechargeInfoMessage::has_officialrechargecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_officialrechargecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_officialrechargecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_officialrechargecount() {
  officialrechargecount_ = 0;
  clear_has_officialrechargecount();
}
inline ::google::protobuf::int32 UpdatePlayerRechargeInfoMessage::officialrechargecount() const {
  return officialrechargecount_;
}
inline void UpdatePlayerRechargeInfoMessage::set_officialrechargecount(::google::protobuf::int32 value) {
  set_has_officialrechargecount();
  officialrechargecount_ = value;
}

// optional double officialRechargeMoney = 6;
inline bool UpdatePlayerRechargeInfoMessage::has_officialrechargemoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void UpdatePlayerRechargeInfoMessage::set_has_officialrechargemoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_has_officialrechargemoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void UpdatePlayerRechargeInfoMessage::clear_officialrechargemoney() {
  officialrechargemoney_ = 0;
  clear_has_officialrechargemoney();
}
inline double UpdatePlayerRechargeInfoMessage::officialrechargemoney() const {
  return officialrechargemoney_;
}
inline void UpdatePlayerRechargeInfoMessage::set_officialrechargemoney(double value) {
  set_has_officialrechargemoney();
  officialrechargemoney_ = value;
}

// -------------------------------------------------------------------

// UpdateControllerRechargeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = UpdateControllerRecharge];
inline bool UpdateControllerRechargeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateControllerRechargeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateControllerRechargeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateControllerRechargeMessage::clear_msgid() {
  msgid_ = 405;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login UpdateControllerRechargeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void UpdateControllerRechargeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional bool isOpen = 2;
inline bool UpdateControllerRechargeMessage::has_isopen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateControllerRechargeMessage::set_has_isopen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateControllerRechargeMessage::clear_has_isopen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateControllerRechargeMessage::clear_isopen() {
  isopen_ = false;
  clear_has_isopen();
}
inline bool UpdateControllerRechargeMessage::isopen() const {
  return isopen_;
}
inline void UpdateControllerRechargeMessage::set_isopen(bool value) {
  set_has_isopen();
  isopen_ = value;
}

// optional string rechargeChannel = 3;
inline bool UpdateControllerRechargeMessage::has_rechargechannel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateControllerRechargeMessage::set_has_rechargechannel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateControllerRechargeMessage::clear_has_rechargechannel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateControllerRechargeMessage::clear_rechargechannel() {
  if (rechargechannel_ != &::google::protobuf::internal::kEmptyString) {
    rechargechannel_->clear();
  }
  clear_has_rechargechannel();
}
inline const ::std::string& UpdateControllerRechargeMessage::rechargechannel() const {
  return *rechargechannel_;
}
inline void UpdateControllerRechargeMessage::set_rechargechannel(const ::std::string& value) {
  set_has_rechargechannel();
  if (rechargechannel_ == &::google::protobuf::internal::kEmptyString) {
    rechargechannel_ = new ::std::string;
  }
  rechargechannel_->assign(value);
}
inline void UpdateControllerRechargeMessage::set_rechargechannel(const char* value) {
  set_has_rechargechannel();
  if (rechargechannel_ == &::google::protobuf::internal::kEmptyString) {
    rechargechannel_ = new ::std::string;
  }
  rechargechannel_->assign(value);
}
inline void UpdateControllerRechargeMessage::set_rechargechannel(const char* value, size_t size) {
  set_has_rechargechannel();
  if (rechargechannel_ == &::google::protobuf::internal::kEmptyString) {
    rechargechannel_ = new ::std::string;
  }
  rechargechannel_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UpdateControllerRechargeMessage::mutable_rechargechannel() {
  set_has_rechargechannel();
  if (rechargechannel_ == &::google::protobuf::internal::kEmptyString) {
    rechargechannel_ = new ::std::string;
  }
  return rechargechannel_;
}
inline ::std::string* UpdateControllerRechargeMessage::release_rechargechannel() {
  clear_has_rechargechannel();
  if (rechargechannel_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rechargechannel_;
    rechargechannel_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 initRatio = 4;
inline bool UpdateControllerRechargeMessage::has_initratio() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateControllerRechargeMessage::set_has_initratio() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateControllerRechargeMessage::clear_has_initratio() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateControllerRechargeMessage::clear_initratio() {
  initratio_ = 0;
  clear_has_initratio();
}
inline ::google::protobuf::int32 UpdateControllerRechargeMessage::initratio() const {
  return initratio_;
}
inline void UpdateControllerRechargeMessage::set_initratio(::google::protobuf::int32 value) {
  set_has_initratio();
  initratio_ = value;
}

// -------------------------------------------------------------------

// ReqChatWithAgentMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqChatWithAgent];
inline bool ReqChatWithAgentMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqChatWithAgentMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqChatWithAgentMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqChatWithAgentMessage::clear_msgid() {
  msgid_ = 325;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqChatWithAgentMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqChatWithAgentMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool ReqChatWithAgentMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqChatWithAgentMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqChatWithAgentMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqChatWithAgentMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqChatWithAgentMessage::type() const {
  return type_;
}
inline void ReqChatWithAgentMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 agentId = 3;
inline bool ReqChatWithAgentMessage::has_agentid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqChatWithAgentMessage::set_has_agentid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqChatWithAgentMessage::clear_has_agentid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqChatWithAgentMessage::clear_agentid() {
  agentid_ = 0;
  clear_has_agentid();
}
inline ::google::protobuf::int32 ReqChatWithAgentMessage::agentid() const {
  return agentid_;
}
inline void ReqChatWithAgentMessage::set_agentid(::google::protobuf::int32 value) {
  set_has_agentid();
  agentid_ = value;
}

// optional string content = 4;
inline bool ReqChatWithAgentMessage::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqChatWithAgentMessage::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqChatWithAgentMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqChatWithAgentMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ReqChatWithAgentMessage::content() const {
  return *content_;
}
inline void ReqChatWithAgentMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatWithAgentMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqChatWithAgentMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqChatWithAgentMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ReqChatWithAgentMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResChatWithAgentMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResChatWithAgent];
inline bool ResChatWithAgentMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResChatWithAgentMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResChatWithAgentMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResChatWithAgentMessage::clear_msgid() {
  msgid_ = 326;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResChatWithAgentMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResChatWithAgentMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.AgentChatInfo chatInfo = 2;
inline int ResChatWithAgentMessage::chatinfo_size() const {
  return chatinfo_.size();
}
inline void ResChatWithAgentMessage::clear_chatinfo() {
  chatinfo_.Clear();
}
inline const ::com::game::proto::AgentChatInfo& ResChatWithAgentMessage::chatinfo(int index) const {
  return chatinfo_.Get(index);
}
inline ::com::game::proto::AgentChatInfo* ResChatWithAgentMessage::mutable_chatinfo(int index) {
  return chatinfo_.Mutable(index);
}
inline ::com::game::proto::AgentChatInfo* ResChatWithAgentMessage::add_chatinfo() {
  return chatinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgentChatInfo >&
ResChatWithAgentMessage::chatinfo() const {
  return chatinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AgentChatInfo >*
ResChatWithAgentMessage::mutable_chatinfo() {
  return &chatinfo_;
}

// -------------------------------------------------------------------

// AgentChatInfo

// optional int32 agentId = 1;
inline bool AgentChatInfo::has_agentid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgentChatInfo::set_has_agentid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgentChatInfo::clear_has_agentid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgentChatInfo::clear_agentid() {
  agentid_ = 0;
  clear_has_agentid();
}
inline ::google::protobuf::int32 AgentChatInfo::agentid() const {
  return agentid_;
}
inline void AgentChatInfo::set_agentid(::google::protobuf::int32 value) {
  set_has_agentid();
  agentid_ = value;
}

// repeated string content = 2;
inline int AgentChatInfo::content_size() const {
  return content_.size();
}
inline void AgentChatInfo::clear_content() {
  content_.Clear();
}
inline const ::std::string& AgentChatInfo::content(int index) const {
  return content_.Get(index);
}
inline ::std::string* AgentChatInfo::mutable_content(int index) {
  return content_.Mutable(index);
}
inline void AgentChatInfo::set_content(int index, const ::std::string& value) {
  content_.Mutable(index)->assign(value);
}
inline void AgentChatInfo::set_content(int index, const char* value) {
  content_.Mutable(index)->assign(value);
}
inline void AgentChatInfo::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AgentChatInfo::add_content() {
  return content_.Add();
}
inline void AgentChatInfo::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
}
inline void AgentChatInfo::add_content(const char* value) {
  content_.Add()->assign(value);
}
inline void AgentChatInfo::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AgentChatInfo::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AgentChatInfo::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// ReqAgentChatWithServiceMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAgentChatWithService];
inline bool ReqAgentChatWithServiceMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAgentChatWithServiceMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAgentChatWithServiceMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAgentChatWithServiceMessage::clear_msgid() {
  msgid_ = 327;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqAgentChatWithServiceMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqAgentChatWithServiceMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 type = 2;
inline bool ReqAgentChatWithServiceMessage::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqAgentChatWithServiceMessage::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqAgentChatWithServiceMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqAgentChatWithServiceMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ReqAgentChatWithServiceMessage::type() const {
  return type_;
}
inline void ReqAgentChatWithServiceMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional string content = 3;
inline bool ReqAgentChatWithServiceMessage::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqAgentChatWithServiceMessage::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqAgentChatWithServiceMessage::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqAgentChatWithServiceMessage::clear_content() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ReqAgentChatWithServiceMessage::content() const {
  return *content_;
}
inline void ReqAgentChatWithServiceMessage::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqAgentChatWithServiceMessage::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(value);
}
inline void ReqAgentChatWithServiceMessage::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqAgentChatWithServiceMessage::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    content_ = new ::std::string;
  }
  return content_;
}
inline ::std::string* ReqAgentChatWithServiceMessage::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ResAgentChatWithServiceMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResAgentChatWithService];
inline bool ResAgentChatWithServiceMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResAgentChatWithServiceMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResAgentChatWithServiceMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResAgentChatWithServiceMessage::clear_msgid() {
  msgid_ = 328;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResAgentChatWithServiceMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResAgentChatWithServiceMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated string content = 2;
inline int ResAgentChatWithServiceMessage::content_size() const {
  return content_.size();
}
inline void ResAgentChatWithServiceMessage::clear_content() {
  content_.Clear();
}
inline const ::std::string& ResAgentChatWithServiceMessage::content(int index) const {
  return content_.Get(index);
}
inline ::std::string* ResAgentChatWithServiceMessage::mutable_content(int index) {
  return content_.Mutable(index);
}
inline void ResAgentChatWithServiceMessage::set_content(int index, const ::std::string& value) {
  content_.Mutable(index)->assign(value);
}
inline void ResAgentChatWithServiceMessage::set_content(int index, const char* value) {
  content_.Mutable(index)->assign(value);
}
inline void ResAgentChatWithServiceMessage::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResAgentChatWithServiceMessage::add_content() {
  return content_.Add();
}
inline void ResAgentChatWithServiceMessage::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
}
inline void ResAgentChatWithServiceMessage::add_content(const char* value) {
  content_.Add()->assign(value);
}
inline void ResAgentChatWithServiceMessage::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResAgentChatWithServiceMessage::content() const {
  return content_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResAgentChatWithServiceMessage::mutable_content() {
  return &content_;
}

// -------------------------------------------------------------------

// ReqCommonMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCommon];
inline bool ReqCommonMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCommonMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCommonMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCommonMessage::clear_msgid() {
  msgid_ = 410;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqCommonMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqCommonMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 subMsgID = 2;
inline bool ReqCommonMessage::has_submsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqCommonMessage::set_has_submsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqCommonMessage::clear_has_submsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqCommonMessage::clear_submsgid() {
  submsgid_ = 0;
  clear_has_submsgid();
}
inline ::google::protobuf::int32 ReqCommonMessage::submsgid() const {
  return submsgid_;
}
inline void ReqCommonMessage::set_submsgid(::google::protobuf::int32 value) {
  set_has_submsgid();
  submsgid_ = value;
}

// repeated string strs = 3;
inline int ReqCommonMessage::strs_size() const {
  return strs_.size();
}
inline void ReqCommonMessage::clear_strs() {
  strs_.Clear();
}
inline const ::std::string& ReqCommonMessage::strs(int index) const {
  return strs_.Get(index);
}
inline ::std::string* ReqCommonMessage::mutable_strs(int index) {
  return strs_.Mutable(index);
}
inline void ReqCommonMessage::set_strs(int index, const ::std::string& value) {
  strs_.Mutable(index)->assign(value);
}
inline void ReqCommonMessage::set_strs(int index, const char* value) {
  strs_.Mutable(index)->assign(value);
}
inline void ReqCommonMessage::set_strs(int index, const char* value, size_t size) {
  strs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqCommonMessage::add_strs() {
  return strs_.Add();
}
inline void ReqCommonMessage::add_strs(const ::std::string& value) {
  strs_.Add()->assign(value);
}
inline void ReqCommonMessage::add_strs(const char* value) {
  strs_.Add()->assign(value);
}
inline void ReqCommonMessage::add_strs(const char* value, size_t size) {
  strs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReqCommonMessage::strs() const {
  return strs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReqCommonMessage::mutable_strs() {
  return &strs_;
}

// repeated bytes buffs = 4;
inline int ReqCommonMessage::buffs_size() const {
  return buffs_.size();
}
inline void ReqCommonMessage::clear_buffs() {
  buffs_.Clear();
}
inline const ::std::string& ReqCommonMessage::buffs(int index) const {
  return buffs_.Get(index);
}
inline ::std::string* ReqCommonMessage::mutable_buffs(int index) {
  return buffs_.Mutable(index);
}
inline void ReqCommonMessage::set_buffs(int index, const ::std::string& value) {
  buffs_.Mutable(index)->assign(value);
}
inline void ReqCommonMessage::set_buffs(int index, const char* value) {
  buffs_.Mutable(index)->assign(value);
}
inline void ReqCommonMessage::set_buffs(int index, const void* value, size_t size) {
  buffs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqCommonMessage::add_buffs() {
  return buffs_.Add();
}
inline void ReqCommonMessage::add_buffs(const ::std::string& value) {
  buffs_.Add()->assign(value);
}
inline void ReqCommonMessage::add_buffs(const char* value) {
  buffs_.Add()->assign(value);
}
inline void ReqCommonMessage::add_buffs(const void* value, size_t size) {
  buffs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ReqCommonMessage::buffs() const {
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ReqCommonMessage::mutable_buffs() {
  return &buffs_;
}

// -------------------------------------------------------------------

// ResCommonMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResCommon];
inline bool ResCommonMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResCommonMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResCommonMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResCommonMessage::clear_msgid() {
  msgid_ = 411;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResCommonMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResCommonMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 subMsgID = 2;
inline bool ResCommonMessage::has_submsgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResCommonMessage::set_has_submsgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResCommonMessage::clear_has_submsgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResCommonMessage::clear_submsgid() {
  submsgid_ = 0;
  clear_has_submsgid();
}
inline ::google::protobuf::int32 ResCommonMessage::submsgid() const {
  return submsgid_;
}
inline void ResCommonMessage::set_submsgid(::google::protobuf::int32 value) {
  set_has_submsgid();
  submsgid_ = value;
}

// repeated string strs = 3;
inline int ResCommonMessage::strs_size() const {
  return strs_.size();
}
inline void ResCommonMessage::clear_strs() {
  strs_.Clear();
}
inline const ::std::string& ResCommonMessage::strs(int index) const {
  return strs_.Get(index);
}
inline ::std::string* ResCommonMessage::mutable_strs(int index) {
  return strs_.Mutable(index);
}
inline void ResCommonMessage::set_strs(int index, const ::std::string& value) {
  strs_.Mutable(index)->assign(value);
}
inline void ResCommonMessage::set_strs(int index, const char* value) {
  strs_.Mutable(index)->assign(value);
}
inline void ResCommonMessage::set_strs(int index, const char* value, size_t size) {
  strs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResCommonMessage::add_strs() {
  return strs_.Add();
}
inline void ResCommonMessage::add_strs(const ::std::string& value) {
  strs_.Add()->assign(value);
}
inline void ResCommonMessage::add_strs(const char* value) {
  strs_.Add()->assign(value);
}
inline void ResCommonMessage::add_strs(const char* value, size_t size) {
  strs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResCommonMessage::strs() const {
  return strs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResCommonMessage::mutable_strs() {
  return &strs_;
}

// repeated bytes buffs = 4;
inline int ResCommonMessage::buffs_size() const {
  return buffs_.size();
}
inline void ResCommonMessage::clear_buffs() {
  buffs_.Clear();
}
inline const ::std::string& ResCommonMessage::buffs(int index) const {
  return buffs_.Get(index);
}
inline ::std::string* ResCommonMessage::mutable_buffs(int index) {
  return buffs_.Mutable(index);
}
inline void ResCommonMessage::set_buffs(int index, const ::std::string& value) {
  buffs_.Mutable(index)->assign(value);
}
inline void ResCommonMessage::set_buffs(int index, const char* value) {
  buffs_.Mutable(index)->assign(value);
}
inline void ResCommonMessage::set_buffs(int index, const void* value, size_t size) {
  buffs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResCommonMessage::add_buffs() {
  return buffs_.Add();
}
inline void ResCommonMessage::add_buffs(const ::std::string& value) {
  buffs_.Add()->assign(value);
}
inline void ResCommonMessage::add_buffs(const char* value) {
  buffs_.Add()->assign(value);
}
inline void ResCommonMessage::add_buffs(const void* value, size_t size) {
  buffs_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ResCommonMessage::buffs() const {
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ResCommonMessage::mutable_buffs() {
  return &buffs_;
}

// -------------------------------------------------------------------

// RefreshOnlineAwardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = RefreshOnlineAward];
inline bool RefreshOnlineAwardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RefreshOnlineAwardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RefreshOnlineAwardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RefreshOnlineAwardMessage::clear_msgid() {
  msgid_ = 601;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login RefreshOnlineAwardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void RefreshOnlineAwardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int64 nextGetAwardTime = 2;
inline bool RefreshOnlineAwardMessage::has_nextgetawardtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RefreshOnlineAwardMessage::set_has_nextgetawardtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RefreshOnlineAwardMessage::clear_has_nextgetawardtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RefreshOnlineAwardMessage::clear_nextgetawardtime() {
  nextgetawardtime_ = GOOGLE_LONGLONG(0);
  clear_has_nextgetawardtime();
}
inline ::google::protobuf::int64 RefreshOnlineAwardMessage::nextgetawardtime() const {
  return nextgetawardtime_;
}
inline void RefreshOnlineAwardMessage::set_nextgetawardtime(::google::protobuf::int64 value) {
  set_has_nextgetawardtime();
  nextgetawardtime_ = value;
}

// optional int32 remainNum = 3;
inline bool RefreshOnlineAwardMessage::has_remainnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RefreshOnlineAwardMessage::set_has_remainnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RefreshOnlineAwardMessage::clear_has_remainnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RefreshOnlineAwardMessage::clear_remainnum() {
  remainnum_ = 0;
  clear_has_remainnum();
}
inline ::google::protobuf::int32 RefreshOnlineAwardMessage::remainnum() const {
  return remainnum_;
}
inline void RefreshOnlineAwardMessage::set_remainnum(::google::protobuf::int32 value) {
  set_has_remainnum();
  remainnum_ = value;
}

// -------------------------------------------------------------------

// ReqGetOnlineAwardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetOnlineAward];
inline bool ReqGetOnlineAwardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetOnlineAwardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetOnlineAwardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetOnlineAwardMessage::clear_msgid() {
  msgid_ = 602;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGetOnlineAwardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGetOnlineAwardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResGetOnlineAwardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResGetOnlineAward];
inline bool ResGetOnlineAwardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResGetOnlineAwardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResGetOnlineAwardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResGetOnlineAwardMessage::clear_msgid() {
  msgid_ = 603;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResGetOnlineAwardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResGetOnlineAwardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional double normalMoney = 2;
inline bool ResGetOnlineAwardMessage::has_normalmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResGetOnlineAwardMessage::set_has_normalmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResGetOnlineAwardMessage::clear_has_normalmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResGetOnlineAwardMessage::clear_normalmoney() {
  normalmoney_ = 0;
  clear_has_normalmoney();
}
inline double ResGetOnlineAwardMessage::normalmoney() const {
  return normalmoney_;
}
inline void ResGetOnlineAwardMessage::set_normalmoney(double value) {
  set_has_normalmoney();
  normalmoney_ = value;
}

// optional double vipMoney = 3;
inline bool ResGetOnlineAwardMessage::has_vipmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResGetOnlineAwardMessage::set_has_vipmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResGetOnlineAwardMessage::clear_has_vipmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResGetOnlineAwardMessage::clear_vipmoney() {
  vipmoney_ = 0;
  clear_has_vipmoney();
}
inline double ResGetOnlineAwardMessage::vipmoney() const {
  return vipmoney_;
}
inline void ResGetOnlineAwardMessage::set_vipmoney(double value) {
  set_has_vipmoney();
  vipmoney_ = value;
}

// optional int32 remainDayNum = 4;
inline bool ResGetOnlineAwardMessage::has_remaindaynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResGetOnlineAwardMessage::set_has_remaindaynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResGetOnlineAwardMessage::clear_has_remaindaynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResGetOnlineAwardMessage::clear_remaindaynum() {
  remaindaynum_ = 0;
  clear_has_remaindaynum();
}
inline ::google::protobuf::int32 ResGetOnlineAwardMessage::remaindaynum() const {
  return remaindaynum_;
}
inline void ResGetOnlineAwardMessage::set_remaindaynum(::google::protobuf::int32 value) {
  set_has_remaindaynum();
  remaindaynum_ = value;
}

// -------------------------------------------------------------------

// ReqGetBankruptcyAwardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetBankruptcyAward];
inline bool ReqGetBankruptcyAwardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetBankruptcyAwardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetBankruptcyAwardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetBankruptcyAwardMessage::clear_msgid() {
  msgid_ = 604;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGetBankruptcyAwardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGetBankruptcyAwardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResGetBankruptcyAwardMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResGetBankruptcyAward];
inline bool ResGetBankruptcyAwardMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResGetBankruptcyAwardMessage::clear_msgid() {
  msgid_ = 605;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResGetBankruptcyAwardMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResGetBankruptcyAwardMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional double money = 2;
inline bool ResGetBankruptcyAwardMessage::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResGetBankruptcyAwardMessage::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline double ResGetBankruptcyAwardMessage::money() const {
  return money_;
}
inline void ResGetBankruptcyAwardMessage::set_money(double value) {
  set_has_money();
  money_ = value;
}

// optional double minMoney = 3;
inline bool ResGetBankruptcyAwardMessage::has_minmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_minmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_minmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResGetBankruptcyAwardMessage::clear_minmoney() {
  minmoney_ = 0;
  clear_has_minmoney();
}
inline double ResGetBankruptcyAwardMessage::minmoney() const {
  return minmoney_;
}
inline void ResGetBankruptcyAwardMessage::set_minmoney(double value) {
  set_has_minmoney();
  minmoney_ = value;
}

// optional int32 remainDayNum = 4;
inline bool ResGetBankruptcyAwardMessage::has_remaindaynum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_remaindaynum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_remaindaynum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResGetBankruptcyAwardMessage::clear_remaindaynum() {
  remaindaynum_ = 0;
  clear_has_remaindaynum();
}
inline ::google::protobuf::int32 ResGetBankruptcyAwardMessage::remaindaynum() const {
  return remaindaynum_;
}
inline void ResGetBankruptcyAwardMessage::set_remaindaynum(::google::protobuf::int32 value) {
  set_has_remaindaynum();
  remaindaynum_ = value;
}

// optional int32 dayNormalNum = 5;
inline bool ResGetBankruptcyAwardMessage::has_daynormalnum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_daynormalnum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_daynormalnum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResGetBankruptcyAwardMessage::clear_daynormalnum() {
  daynormalnum_ = 0;
  clear_has_daynormalnum();
}
inline ::google::protobuf::int32 ResGetBankruptcyAwardMessage::daynormalnum() const {
  return daynormalnum_;
}
inline void ResGetBankruptcyAwardMessage::set_daynormalnum(::google::protobuf::int32 value) {
  set_has_daynormalnum();
  daynormalnum_ = value;
}

// optional int32 dayVIPNum = 6;
inline bool ResGetBankruptcyAwardMessage::has_dayvipnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResGetBankruptcyAwardMessage::set_has_dayvipnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResGetBankruptcyAwardMessage::clear_has_dayvipnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResGetBankruptcyAwardMessage::clear_dayvipnum() {
  dayvipnum_ = 0;
  clear_has_dayvipnum();
}
inline ::google::protobuf::int32 ResGetBankruptcyAwardMessage::dayvipnum() const {
  return dayvipnum_;
}
inline void ResGetBankruptcyAwardMessage::set_dayvipnum(::google::protobuf::int32 value) {
  set_has_dayvipnum();
  dayvipnum_ = value;
}

// -------------------------------------------------------------------

// ReqPresentCharmValueMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPresentCharmValue];
inline bool ReqPresentCharmValueMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPresentCharmValueMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPresentCharmValueMessage::clear_msgid() {
  msgid_ = 606;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqPresentCharmValueMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqPresentCharmValueMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int64 playerId = 2;
inline bool ReqPresentCharmValueMessage::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPresentCharmValueMessage::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPresentCharmValueMessage::clear_playerid() {
  playerid_ = GOOGLE_LONGLONG(0);
  clear_has_playerid();
}
inline ::google::protobuf::int64 ReqPresentCharmValueMessage::playerid() const {
  return playerid_;
}
inline void ReqPresentCharmValueMessage::set_playerid(::google::protobuf::int64 value) {
  set_has_playerid();
  playerid_ = value;
}

// optional int32 presentPosFrom = 3;
inline bool ReqPresentCharmValueMessage::has_presentposfrom() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_presentposfrom() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqPresentCharmValueMessage::clear_has_presentposfrom() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqPresentCharmValueMessage::clear_presentposfrom() {
  presentposfrom_ = 0;
  clear_has_presentposfrom();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::presentposfrom() const {
  return presentposfrom_;
}
inline void ReqPresentCharmValueMessage::set_presentposfrom(::google::protobuf::int32 value) {
  set_has_presentposfrom();
  presentposfrom_ = value;
}

// optional int32 presentPosTo = 4;
inline bool ReqPresentCharmValueMessage::has_presentposto() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_presentposto() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqPresentCharmValueMessage::clear_has_presentposto() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqPresentCharmValueMessage::clear_presentposto() {
  presentposto_ = 0;
  clear_has_presentposto();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::presentposto() const {
  return presentposto_;
}
inline void ReqPresentCharmValueMessage::set_presentposto(::google::protobuf::int32 value) {
  set_has_presentposto();
  presentposto_ = value;
}

// optional int32 subGameId = 5;
inline bool ReqPresentCharmValueMessage::has_subgameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_subgameid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqPresentCharmValueMessage::clear_has_subgameid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqPresentCharmValueMessage::clear_subgameid() {
  subgameid_ = 0;
  clear_has_subgameid();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::subgameid() const {
  return subgameid_;
}
inline void ReqPresentCharmValueMessage::set_subgameid(::google::protobuf::int32 value) {
  set_has_subgameid();
  subgameid_ = value;
}

// optional int32 presentType = 6;
inline bool ReqPresentCharmValueMessage::has_presenttype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_presenttype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqPresentCharmValueMessage::clear_has_presenttype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqPresentCharmValueMessage::clear_presenttype() {
  presenttype_ = 0;
  clear_has_presenttype();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::presenttype() const {
  return presenttype_;
}
inline void ReqPresentCharmValueMessage::set_presenttype(::google::protobuf::int32 value) {
  set_has_presenttype();
  presenttype_ = value;
}

// optional int32 presentValue = 7;
inline bool ReqPresentCharmValueMessage::has_presentvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_presentvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqPresentCharmValueMessage::clear_has_presentvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqPresentCharmValueMessage::clear_presentvalue() {
  presentvalue_ = 0;
  clear_has_presentvalue();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::presentvalue() const {
  return presentvalue_;
}
inline void ReqPresentCharmValueMessage::set_presentvalue(::google::protobuf::int32 value) {
  set_has_presentvalue();
  presentvalue_ = value;
}

// optional double costMoney = 8;
inline bool ReqPresentCharmValueMessage::has_costmoney() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_costmoney() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqPresentCharmValueMessage::clear_has_costmoney() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqPresentCharmValueMessage::clear_costmoney() {
  costmoney_ = 0;
  clear_has_costmoney();
}
inline double ReqPresentCharmValueMessage::costmoney() const {
  return costmoney_;
}
inline void ReqPresentCharmValueMessage::set_costmoney(double value) {
  set_has_costmoney();
  costmoney_ = value;
}

// optional int32 changeCharmValue = 9;
inline bool ReqPresentCharmValueMessage::has_changecharmvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqPresentCharmValueMessage::set_has_changecharmvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqPresentCharmValueMessage::clear_has_changecharmvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqPresentCharmValueMessage::clear_changecharmvalue() {
  changecharmvalue_ = 0;
  clear_has_changecharmvalue();
}
inline ::google::protobuf::int32 ReqPresentCharmValueMessage::changecharmvalue() const {
  return changecharmvalue_;
}
inline void ReqPresentCharmValueMessage::set_changecharmvalue(::google::protobuf::int32 value) {
  set_has_changecharmvalue();
  changecharmvalue_ = value;
}

// -------------------------------------------------------------------

// ResPresentCharmValueMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResPresentCharmValue];
inline bool ResPresentCharmValueMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResPresentCharmValueMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResPresentCharmValueMessage::clear_msgid() {
  msgid_ = 607;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResPresentCharmValueMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResPresentCharmValueMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int64 fromPlayerId = 2;
inline bool ResPresentCharmValueMessage::has_fromplayerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_fromplayerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResPresentCharmValueMessage::clear_has_fromplayerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResPresentCharmValueMessage::clear_fromplayerid() {
  fromplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_fromplayerid();
}
inline ::google::protobuf::int64 ResPresentCharmValueMessage::fromplayerid() const {
  return fromplayerid_;
}
inline void ResPresentCharmValueMessage::set_fromplayerid(::google::protobuf::int64 value) {
  set_has_fromplayerid();
  fromplayerid_ = value;
}

// optional int64 toPlayerId = 3;
inline bool ResPresentCharmValueMessage::has_toplayerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_toplayerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResPresentCharmValueMessage::clear_has_toplayerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResPresentCharmValueMessage::clear_toplayerid() {
  toplayerid_ = GOOGLE_LONGLONG(0);
  clear_has_toplayerid();
}
inline ::google::protobuf::int64 ResPresentCharmValueMessage::toplayerid() const {
  return toplayerid_;
}
inline void ResPresentCharmValueMessage::set_toplayerid(::google::protobuf::int64 value) {
  set_has_toplayerid();
  toplayerid_ = value;
}

// optional int32 presentPosFrom = 4;
inline bool ResPresentCharmValueMessage::has_presentposfrom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_presentposfrom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResPresentCharmValueMessage::clear_has_presentposfrom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResPresentCharmValueMessage::clear_presentposfrom() {
  presentposfrom_ = 0;
  clear_has_presentposfrom();
}
inline ::google::protobuf::int32 ResPresentCharmValueMessage::presentposfrom() const {
  return presentposfrom_;
}
inline void ResPresentCharmValueMessage::set_presentposfrom(::google::protobuf::int32 value) {
  set_has_presentposfrom();
  presentposfrom_ = value;
}

// optional int32 presentPosTo = 5;
inline bool ResPresentCharmValueMessage::has_presentposto() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_presentposto() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResPresentCharmValueMessage::clear_has_presentposto() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResPresentCharmValueMessage::clear_presentposto() {
  presentposto_ = 0;
  clear_has_presentposto();
}
inline ::google::protobuf::int32 ResPresentCharmValueMessage::presentposto() const {
  return presentposto_;
}
inline void ResPresentCharmValueMessage::set_presentposto(::google::protobuf::int32 value) {
  set_has_presentposto();
  presentposto_ = value;
}

// optional int32 presentValue = 6;
inline bool ResPresentCharmValueMessage::has_presentvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_presentvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResPresentCharmValueMessage::clear_has_presentvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResPresentCharmValueMessage::clear_presentvalue() {
  presentvalue_ = 0;
  clear_has_presentvalue();
}
inline ::google::protobuf::int32 ResPresentCharmValueMessage::presentvalue() const {
  return presentvalue_;
}
inline void ResPresentCharmValueMessage::set_presentvalue(::google::protobuf::int32 value) {
  set_has_presentvalue();
  presentvalue_ = value;
}

// optional int32 changeCharmValue = 7;
inline bool ResPresentCharmValueMessage::has_changecharmvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResPresentCharmValueMessage::set_has_changecharmvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResPresentCharmValueMessage::clear_has_changecharmvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResPresentCharmValueMessage::clear_changecharmvalue() {
  changecharmvalue_ = 0;
  clear_has_changecharmvalue();
}
inline ::google::protobuf::int32 ResPresentCharmValueMessage::changecharmvalue() const {
  return changecharmvalue_;
}
inline void ResPresentCharmValueMessage::set_changecharmvalue(::google::protobuf::int32 value) {
  set_has_changecharmvalue();
  changecharmvalue_ = value;
}

// -------------------------------------------------------------------

// ReqGetStartUpMoneyMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetStartUpMoney];
inline bool ReqGetStartUpMoneyMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetStartUpMoneyMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetStartUpMoneyMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetStartUpMoneyMessage::clear_msgid() {
  msgid_ = 608;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGetStartUpMoneyMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGetStartUpMoneyMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqSignInMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqSignIn];
inline bool ReqSignInMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSignInMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSignInMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSignInMessage::clear_msgid() {
  msgid_ = 609;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqSignInMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqSignInMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 signinType = 2;
inline bool ReqSignInMessage::has_signintype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSignInMessage::set_has_signintype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSignInMessage::clear_has_signintype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSignInMessage::clear_signintype() {
  signintype_ = 0;
  clear_has_signintype();
}
inline ::google::protobuf::int32 ReqSignInMessage::signintype() const {
  return signintype_;
}
inline void ReqSignInMessage::set_signintype(::google::protobuf::int32 value) {
  set_has_signintype();
  signintype_ = value;
}

// optional int32 signinDay = 3;
inline bool ReqSignInMessage::has_signinday() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqSignInMessage::set_has_signinday() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqSignInMessage::clear_has_signinday() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqSignInMessage::clear_signinday() {
  signinday_ = 0;
  clear_has_signinday();
}
inline ::google::protobuf::int32 ReqSignInMessage::signinday() const {
  return signinday_;
}
inline void ReqSignInMessage::set_signinday(::google::protobuf::int32 value) {
  set_has_signinday();
  signinday_ = value;
}

// -------------------------------------------------------------------

// ResSignInMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResSignIn];
inline bool ResSignInMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResSignInMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResSignInMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResSignInMessage::clear_msgid() {
  msgid_ = 610;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResSignInMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResSignInMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 curSignInNum = 2;
inline bool ResSignInMessage::has_cursigninnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResSignInMessage::set_has_cursigninnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResSignInMessage::clear_has_cursigninnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResSignInMessage::clear_cursigninnum() {
  cursigninnum_ = 0;
  clear_has_cursigninnum();
}
inline ::google::protobuf::int32 ResSignInMessage::cursigninnum() const {
  return cursigninnum_;
}
inline void ResSignInMessage::set_cursigninnum(::google::protobuf::int32 value) {
  set_has_cursigninnum();
  cursigninnum_ = value;
}

// repeated int32 state = 3;
inline int ResSignInMessage::state_size() const {
  return state_.size();
}
inline void ResSignInMessage::clear_state() {
  state_.Clear();
}
inline ::google::protobuf::int32 ResSignInMessage::state(int index) const {
  return state_.Get(index);
}
inline void ResSignInMessage::set_state(int index, ::google::protobuf::int32 value) {
  state_.Set(index, value);
}
inline void ResSignInMessage::add_state(::google::protobuf::int32 value) {
  state_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResSignInMessage::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResSignInMessage::mutable_state() {
  return &state_;
}

// optional int32 nextSignIn = 4;
inline bool ResSignInMessage::has_nextsignin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResSignInMessage::set_has_nextsignin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResSignInMessage::clear_has_nextsignin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResSignInMessage::clear_nextsignin() {
  nextsignin_ = 0;
  clear_has_nextsignin();
}
inline ::google::protobuf::int32 ResSignInMessage::nextsignin() const {
  return nextsignin_;
}
inline void ResSignInMessage::set_nextsignin(::google::protobuf::int32 value) {
  set_has_nextsignin();
  nextsignin_ = value;
}

// optional bool canSignIn = 5;
inline bool ResSignInMessage::has_cansignin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResSignInMessage::set_has_cansignin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResSignInMessage::clear_has_cansignin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResSignInMessage::clear_cansignin() {
  cansignin_ = false;
  clear_has_cansignin();
}
inline bool ResSignInMessage::cansignin() const {
  return cansignin_;
}
inline void ResSignInMessage::set_cansignin(bool value) {
  set_has_cansignin();
  cansignin_ = value;
}

// optional double normalMoney = 6;
inline bool ResSignInMessage::has_normalmoney() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResSignInMessage::set_has_normalmoney() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResSignInMessage::clear_has_normalmoney() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResSignInMessage::clear_normalmoney() {
  normalmoney_ = 0;
  clear_has_normalmoney();
}
inline double ResSignInMessage::normalmoney() const {
  return normalmoney_;
}
inline void ResSignInMessage::set_normalmoney(double value) {
  set_has_normalmoney();
  normalmoney_ = value;
}

// optional double vipMoney = 7;
inline bool ResSignInMessage::has_vipmoney() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResSignInMessage::set_has_vipmoney() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResSignInMessage::clear_has_vipmoney() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResSignInMessage::clear_vipmoney() {
  vipmoney_ = 0;
  clear_has_vipmoney();
}
inline double ResSignInMessage::vipmoney() const {
  return vipmoney_;
}
inline void ResSignInMessage::set_vipmoney(double value) {
  set_has_vipmoney();
  vipmoney_ = value;
}

// -------------------------------------------------------------------

// ResSignInDataMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResSignInData];
inline bool ResSignInDataMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResSignInDataMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResSignInDataMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResSignInDataMessage::clear_msgid() {
  msgid_ = 611;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResSignInDataMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResSignInDataMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int32 addUpDay = 2;
inline int ResSignInDataMessage::addupday_size() const {
  return addupday_.size();
}
inline void ResSignInDataMessage::clear_addupday() {
  addupday_.Clear();
}
inline ::google::protobuf::int32 ResSignInDataMessage::addupday(int index) const {
  return addupday_.Get(index);
}
inline void ResSignInDataMessage::set_addupday(int index, ::google::protobuf::int32 value) {
  addupday_.Set(index, value);
}
inline void ResSignInDataMessage::add_addupday(::google::protobuf::int32 value) {
  addupday_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResSignInDataMessage::addupday() const {
  return addupday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResSignInDataMessage::mutable_addupday() {
  return &addupday_;
}

// repeated double addUpDayMoney = 3;
inline int ResSignInDataMessage::addupdaymoney_size() const {
  return addupdaymoney_.size();
}
inline void ResSignInDataMessage::clear_addupdaymoney() {
  addupdaymoney_.Clear();
}
inline double ResSignInDataMessage::addupdaymoney(int index) const {
  return addupdaymoney_.Get(index);
}
inline void ResSignInDataMessage::set_addupdaymoney(int index, double value) {
  addupdaymoney_.Set(index, value);
}
inline void ResSignInDataMessage::add_addupdaymoney(double value) {
  addupdaymoney_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
ResSignInDataMessage::addupdaymoney() const {
  return addupdaymoney_;
}
inline ::google::protobuf::RepeatedField< double >*
ResSignInDataMessage::mutable_addupdaymoney() {
  return &addupdaymoney_;
}

// repeated int32 continueDay = 4;
inline int ResSignInDataMessage::continueday_size() const {
  return continueday_.size();
}
inline void ResSignInDataMessage::clear_continueday() {
  continueday_.Clear();
}
inline ::google::protobuf::int32 ResSignInDataMessage::continueday(int index) const {
  return continueday_.Get(index);
}
inline void ResSignInDataMessage::set_continueday(int index, ::google::protobuf::int32 value) {
  continueday_.Set(index, value);
}
inline void ResSignInDataMessage::add_continueday(::google::protobuf::int32 value) {
  continueday_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResSignInDataMessage::continueday() const {
  return continueday_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResSignInDataMessage::mutable_continueday() {
  return &continueday_;
}

// repeated double continueDayMoney = 5;
inline int ResSignInDataMessage::continuedaymoney_size() const {
  return continuedaymoney_.size();
}
inline void ResSignInDataMessage::clear_continuedaymoney() {
  continuedaymoney_.Clear();
}
inline double ResSignInDataMessage::continuedaymoney(int index) const {
  return continuedaymoney_.Get(index);
}
inline void ResSignInDataMessage::set_continuedaymoney(int index, double value) {
  continuedaymoney_.Set(index, value);
}
inline void ResSignInDataMessage::add_continuedaymoney(double value) {
  continuedaymoney_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
ResSignInDataMessage::continuedaymoney() const {
  return continuedaymoney_;
}
inline ::google::protobuf::RepeatedField< double >*
ResSignInDataMessage::mutable_continuedaymoney() {
  return &continuedaymoney_;
}

// repeated int32 vipAdd = 6;
inline int ResSignInDataMessage::vipadd_size() const {
  return vipadd_.size();
}
inline void ResSignInDataMessage::clear_vipadd() {
  vipadd_.Clear();
}
inline ::google::protobuf::int32 ResSignInDataMessage::vipadd(int index) const {
  return vipadd_.Get(index);
}
inline void ResSignInDataMessage::set_vipadd(int index, ::google::protobuf::int32 value) {
  vipadd_.Set(index, value);
}
inline void ResSignInDataMessage::add_vipadd(::google::protobuf::int32 value) {
  vipadd_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ResSignInDataMessage::vipadd() const {
  return vipadd_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ResSignInDataMessage::mutable_vipadd() {
  return &vipadd_;
}

// -------------------------------------------------------------------

// ResBarrageChangeMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBarrageChange];
inline bool ResBarrageChangeMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBarrageChangeMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBarrageChangeMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBarrageChangeMessage::clear_msgid() {
  msgid_ = 612;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBarrageChangeMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBarrageChangeMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 remainNum = 2;
inline bool ResBarrageChangeMessage::has_remainnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResBarrageChangeMessage::set_has_remainnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResBarrageChangeMessage::clear_has_remainnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResBarrageChangeMessage::clear_remainnum() {
  remainnum_ = 0;
  clear_has_remainnum();
}
inline ::google::protobuf::int32 ResBarrageChangeMessage::remainnum() const {
  return remainnum_;
}
inline void ResBarrageChangeMessage::set_remainnum(::google::protobuf::int32 value) {
  set_has_remainnum();
  remainnum_ = value;
}

// optional int32 maxNum = 3;
inline bool ResBarrageChangeMessage::has_maxnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResBarrageChangeMessage::set_has_maxnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResBarrageChangeMessage::clear_has_maxnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResBarrageChangeMessage::clear_maxnum() {
  maxnum_ = 0;
  clear_has_maxnum();
}
inline ::google::protobuf::int32 ResBarrageChangeMessage::maxnum() const {
  return maxnum_;
}
inline void ResBarrageChangeMessage::set_maxnum(::google::protobuf::int32 value) {
  set_has_maxnum();
  maxnum_ = value;
}

// -------------------------------------------------------------------

// ResVIPInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResVIPInfo];
inline bool ResVIPInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResVIPInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResVIPInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResVIPInfoMessage::clear_msgid() {
  msgid_ = 613;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResVIPInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResVIPInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 vipLevel = 2;
inline bool ResVIPInfoMessage::has_viplevel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResVIPInfoMessage::set_has_viplevel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResVIPInfoMessage::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResVIPInfoMessage::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 ResVIPInfoMessage::viplevel() const {
  return viplevel_;
}
inline void ResVIPInfoMessage::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional double rechargeMoney = 3;
inline bool ResVIPInfoMessage::has_rechargemoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResVIPInfoMessage::set_has_rechargemoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResVIPInfoMessage::clear_has_rechargemoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResVIPInfoMessage::clear_rechargemoney() {
  rechargemoney_ = 0;
  clear_has_rechargemoney();
}
inline double ResVIPInfoMessage::rechargemoney() const {
  return rechargemoney_;
}
inline void ResVIPInfoMessage::set_rechargemoney(double value) {
  set_has_rechargemoney();
  rechargemoney_ = value;
}

// -------------------------------------------------------------------

// ResCharmInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResCharmInfo];
inline bool ResCharmInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResCharmInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResCharmInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResCharmInfoMessage::clear_msgid() {
  msgid_ = 614;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResCharmInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResCharmInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 titleId = 2;
inline bool ResCharmInfoMessage::has_titleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResCharmInfoMessage::set_has_titleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResCharmInfoMessage::clear_has_titleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResCharmInfoMessage::clear_titleid() {
  titleid_ = 0;
  clear_has_titleid();
}
inline ::google::protobuf::int32 ResCharmInfoMessage::titleid() const {
  return titleid_;
}
inline void ResCharmInfoMessage::set_titleid(::google::protobuf::int32 value) {
  set_has_titleid();
  titleid_ = value;
}

// optional double gameMaxWinMoney = 3;
inline bool ResCharmInfoMessage::has_gamemaxwinmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResCharmInfoMessage::set_has_gamemaxwinmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResCharmInfoMessage::clear_has_gamemaxwinmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResCharmInfoMessage::clear_gamemaxwinmoney() {
  gamemaxwinmoney_ = 0;
  clear_has_gamemaxwinmoney();
}
inline double ResCharmInfoMessage::gamemaxwinmoney() const {
  return gamemaxwinmoney_;
}
inline void ResCharmInfoMessage::set_gamemaxwinmoney(double value) {
  set_has_gamemaxwinmoney();
  gamemaxwinmoney_ = value;
}

// optional int32 charmValue = 4;
inline bool ResCharmInfoMessage::has_charmvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResCharmInfoMessage::set_has_charmvalue() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResCharmInfoMessage::clear_has_charmvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResCharmInfoMessage::clear_charmvalue() {
  charmvalue_ = 0;
  clear_has_charmvalue();
}
inline ::google::protobuf::int32 ResCharmInfoMessage::charmvalue() const {
  return charmvalue_;
}
inline void ResCharmInfoMessage::set_charmvalue(::google::protobuf::int32 value) {
  set_has_charmvalue();
  charmvalue_ = value;
}

// -------------------------------------------------------------------

// ReqTurntableDataMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTurntableData];
inline bool ReqTurntableDataMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTurntableDataMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTurntableDataMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTurntableDataMessage::clear_msgid() {
  msgid_ = 617;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqTurntableDataMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqTurntableDataMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqTurntableMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqTurntable];
inline bool ReqTurntableMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTurntableMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTurntableMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTurntableMessage::clear_msgid() {
  msgid_ = 618;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqTurntableMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqTurntableMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqLftfreshMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftfresh];
inline bool ReqLftfreshMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLftfreshMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLftfreshMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLftfreshMessage::clear_msgid() {
  msgid_ = 642;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLftfreshMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLftfreshMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqLftScratchMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftScratch];
inline bool ReqLftScratchMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLftScratchMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLftScratchMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLftScratchMessage::clear_msgid() {
  msgid_ = 640;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLftScratchMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLftScratchMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqHftReceiveMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHftReceive];
inline bool ReqHftReceiveMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHftReceiveMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHftReceiveMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHftReceiveMessage::clear_msgid() {
  msgid_ = 650;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqHftReceiveMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqHftReceiveMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqHftScratchMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqHftScratch];
inline bool ReqHftScratchMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqHftScratchMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqHftScratchMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqHftScratchMessage::clear_msgid() {
  msgid_ = 651;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqHftScratchMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqHftScratchMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResHftScratchMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResHftScratch];
inline bool ResHftScratchMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResHftScratchMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResHftScratchMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResHftScratchMessage::clear_msgid() {
  msgid_ = 652;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResHftScratchMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResHftScratchMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 profitId = 2;
inline bool ResHftScratchMessage::has_profitid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResHftScratchMessage::set_has_profitid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResHftScratchMessage::clear_has_profitid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResHftScratchMessage::clear_profitid() {
  profitid_ = 0;
  clear_has_profitid();
}
inline ::google::protobuf::int32 ResHftScratchMessage::profitid() const {
  return profitid_;
}
inline void ResHftScratchMessage::set_profitid(::google::protobuf::int32 value) {
  set_has_profitid();
  profitid_ = value;
}

// optional double profitMoney = 3;
inline bool ResHftScratchMessage::has_profitmoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResHftScratchMessage::set_has_profitmoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResHftScratchMessage::clear_has_profitmoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResHftScratchMessage::clear_profitmoney() {
  profitmoney_ = 0;
  clear_has_profitmoney();
}
inline double ResHftScratchMessage::profitmoney() const {
  return profitmoney_;
}
inline void ResHftScratchMessage::set_profitmoney(double value) {
  set_has_profitmoney();
  profitmoney_ = value;
}

// optional double AmountMoney = 4;
inline bool ResHftScratchMessage::has_amountmoney() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResHftScratchMessage::set_has_amountmoney() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResHftScratchMessage::clear_has_amountmoney() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResHftScratchMessage::clear_amountmoney() {
  amountmoney_ = 0;
  clear_has_amountmoney();
}
inline double ResHftScratchMessage::amountmoney() const {
  return amountmoney_;
}
inline void ResHftScratchMessage::set_amountmoney(double value) {
  set_has_amountmoney();
  amountmoney_ = value;
}

// optional int32 ReceiveId = 5;
inline bool ResHftScratchMessage::has_receiveid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResHftScratchMessage::set_has_receiveid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResHftScratchMessage::clear_has_receiveid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResHftScratchMessage::clear_receiveid() {
  receiveid_ = 0;
  clear_has_receiveid();
}
inline ::google::protobuf::int32 ResHftScratchMessage::receiveid() const {
  return receiveid_;
}
inline void ResHftScratchMessage::set_receiveid(::google::protobuf::int32 value) {
  set_has_receiveid();
  receiveid_ = value;
}

// optional string opendate = 6;
inline bool ResHftScratchMessage::has_opendate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResHftScratchMessage::set_has_opendate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResHftScratchMessage::clear_has_opendate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResHftScratchMessage::clear_opendate() {
  if (opendate_ != &::google::protobuf::internal::kEmptyString) {
    opendate_->clear();
  }
  clear_has_opendate();
}
inline const ::std::string& ResHftScratchMessage::opendate() const {
  return *opendate_;
}
inline void ResHftScratchMessage::set_opendate(const ::std::string& value) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(value);
}
inline void ResHftScratchMessage::set_opendate(const char* value) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(value);
}
inline void ResHftScratchMessage::set_opendate(const char* value, size_t size) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResHftScratchMessage::mutable_opendate() {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  return opendate_;
}
inline ::std::string* ResHftScratchMessage::release_opendate() {
  clear_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opendate_;
    opendate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string receivedate = 7;
inline bool ResHftScratchMessage::has_receivedate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ResHftScratchMessage::set_has_receivedate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ResHftScratchMessage::clear_has_receivedate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ResHftScratchMessage::clear_receivedate() {
  if (receivedate_ != &::google::protobuf::internal::kEmptyString) {
    receivedate_->clear();
  }
  clear_has_receivedate();
}
inline const ::std::string& ResHftScratchMessage::receivedate() const {
  return *receivedate_;
}
inline void ResHftScratchMessage::set_receivedate(const ::std::string& value) {
  set_has_receivedate();
  if (receivedate_ == &::google::protobuf::internal::kEmptyString) {
    receivedate_ = new ::std::string;
  }
  receivedate_->assign(value);
}
inline void ResHftScratchMessage::set_receivedate(const char* value) {
  set_has_receivedate();
  if (receivedate_ == &::google::protobuf::internal::kEmptyString) {
    receivedate_ = new ::std::string;
  }
  receivedate_->assign(value);
}
inline void ResHftScratchMessage::set_receivedate(const char* value, size_t size) {
  set_has_receivedate();
  if (receivedate_ == &::google::protobuf::internal::kEmptyString) {
    receivedate_ = new ::std::string;
  }
  receivedate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResHftScratchMessage::mutable_receivedate() {
  set_has_receivedate();
  if (receivedate_ == &::google::protobuf::internal::kEmptyString) {
    receivedate_ = new ::std::string;
  }
  return receivedate_;
}
inline ::std::string* ResHftScratchMessage::release_receivedate() {
  clear_has_receivedate();
  if (receivedate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = receivedate_;
    receivedate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 time = 8;
inline bool ResHftScratchMessage::has_time() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResHftScratchMessage::set_has_time() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResHftScratchMessage::clear_has_time() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResHftScratchMessage::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 ResHftScratchMessage::time() const {
  return time_;
}
inline void ResHftScratchMessage::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional int32 zt = 9;
inline bool ResHftScratchMessage::has_zt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ResHftScratchMessage::set_has_zt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ResHftScratchMessage::clear_has_zt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ResHftScratchMessage::clear_zt() {
  zt_ = 0;
  clear_has_zt();
}
inline ::google::protobuf::int32 ResHftScratchMessage::zt() const {
  return zt_;
}
inline void ResHftScratchMessage::set_zt(::google::protobuf::int32 value) {
  set_has_zt();
  zt_ = value;
}

// -------------------------------------------------------------------

// ReqLftRwScratchMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftRwScratch];
inline bool ReqLftRwScratchMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLftRwScratchMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLftRwScratchMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLftRwScratchMessage::clear_msgid() {
  msgid_ = 660;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLftRwScratchMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLftRwScratchMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqLftRwReceiveMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqLftRwReceive];
inline bool ReqLftRwReceiveMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqLftRwReceiveMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqLftRwReceiveMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqLftRwReceiveMessage::clear_msgid() {
  msgid_ = 661;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqLftRwReceiveMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqLftRwReceiveMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 Id = 2;
inline bool ReqLftRwReceiveMessage::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqLftRwReceiveMessage::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqLftRwReceiveMessage::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqLftRwReceiveMessage::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ReqLftRwReceiveMessage::id() const {
  return id_;
}
inline void ReqLftRwReceiveMessage::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// ResLftRwScratchMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResLftRwScratch];
inline bool ResLftRwScratchMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResLftRwScratchMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResLftRwScratchMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResLftRwScratchMessage::clear_msgid() {
  msgid_ = 662;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResLftRwScratchMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResLftRwScratchMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.LftrwInfo lftews = 2;
inline int ResLftRwScratchMessage::lftews_size() const {
  return lftews_.size();
}
inline void ResLftRwScratchMessage::clear_lftews() {
  lftews_.Clear();
}
inline const ::com::game::proto::LftrwInfo& ResLftRwScratchMessage::lftews(int index) const {
  return lftews_.Get(index);
}
inline ::com::game::proto::LftrwInfo* ResLftRwScratchMessage::mutable_lftews(int index) {
  return lftews_.Mutable(index);
}
inline ::com::game::proto::LftrwInfo* ResLftRwScratchMessage::add_lftews() {
  return lftews_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::LftrwInfo >&
ResLftRwScratchMessage::lftews() const {
  return lftews_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::LftrwInfo >*
ResLftRwScratchMessage::mutable_lftews() {
  return &lftews_;
}

// optional string opendate = 3;
inline bool ResLftRwScratchMessage::has_opendate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResLftRwScratchMessage::set_has_opendate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResLftRwScratchMessage::clear_has_opendate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResLftRwScratchMessage::clear_opendate() {
  if (opendate_ != &::google::protobuf::internal::kEmptyString) {
    opendate_->clear();
  }
  clear_has_opendate();
}
inline const ::std::string& ResLftRwScratchMessage::opendate() const {
  return *opendate_;
}
inline void ResLftRwScratchMessage::set_opendate(const ::std::string& value) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(value);
}
inline void ResLftRwScratchMessage::set_opendate(const char* value) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(value);
}
inline void ResLftRwScratchMessage::set_opendate(const char* value, size_t size) {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  opendate_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ResLftRwScratchMessage::mutable_opendate() {
  set_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    opendate_ = new ::std::string;
  }
  return opendate_;
}
inline ::std::string* ResLftRwScratchMessage::release_opendate() {
  clear_has_opendate();
  if (opendate_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = opendate_;
    opendate_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int32 zt = 4;
inline bool ResLftRwScratchMessage::has_zt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResLftRwScratchMessage::set_has_zt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResLftRwScratchMessage::clear_has_zt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResLftRwScratchMessage::clear_zt() {
  zt_ = 0;
  clear_has_zt();
}
inline ::google::protobuf::int32 ResLftRwScratchMessage::zt() const {
  return zt_;
}
inline void ResLftRwScratchMessage::set_zt(::google::protobuf::int32 value) {
  set_has_zt();
  zt_ = value;
}

// -------------------------------------------------------------------

// LftrwInfo

// optional int32 Id = 1;
inline bool LftrwInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LftrwInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LftrwInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LftrwInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 LftrwInfo::id() const {
  return id_;
}
inline void LftrwInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional double needMoney = 2;
inline bool LftrwInfo::has_needmoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LftrwInfo::set_has_needmoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LftrwInfo::clear_has_needmoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LftrwInfo::clear_needmoney() {
  needmoney_ = 0;
  clear_has_needmoney();
}
inline double LftrwInfo::needmoney() const {
  return needmoney_;
}
inline void LftrwInfo::set_needmoney(double value) {
  set_has_needmoney();
  needmoney_ = value;
}

// optional double receiveMoney = 3;
inline bool LftrwInfo::has_receivemoney() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LftrwInfo::set_has_receivemoney() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LftrwInfo::clear_has_receivemoney() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LftrwInfo::clear_receivemoney() {
  receivemoney_ = 0;
  clear_has_receivemoney();
}
inline double LftrwInfo::receivemoney() const {
  return receivemoney_;
}
inline void LftrwInfo::set_receivemoney(double value) {
  set_has_receivemoney();
  receivemoney_ = value;
}

// optional int32 state = 4;
inline bool LftrwInfo::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LftrwInfo::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LftrwInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LftrwInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 LftrwInfo::state() const {
  return state_;
}
inline void LftrwInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// optional double profitMoney = 5;
inline bool LftrwInfo::has_profitmoney() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LftrwInfo::set_has_profitmoney() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LftrwInfo::clear_has_profitmoney() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LftrwInfo::clear_profitmoney() {
  profitmoney_ = 0;
  clear_has_profitmoney();
}
inline double LftrwInfo::profitmoney() const {
  return profitmoney_;
}
inline void LftrwInfo::set_profitmoney(double value) {
  set_has_profitmoney();
  profitmoney_ = value;
}

// -------------------------------------------------------------------

// ReqhuodongMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = Reqhuodong];
inline bool ReqhuodongMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqhuodongMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqhuodongMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqhuodongMessage::clear_msgid() {
  msgid_ = 670;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqhuodongMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqhuodongMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReshuodongMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = Reshuodong];
inline bool ReshuodongMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReshuodongMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReshuodongMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReshuodongMessage::clear_msgid() {
  msgid_ = 671;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReshuodongMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReshuodongMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.huodonginfo huodongs = 2;
inline int ReshuodongMessage::huodongs_size() const {
  return huodongs_.size();
}
inline void ReshuodongMessage::clear_huodongs() {
  huodongs_.Clear();
}
inline const ::com::game::proto::huodonginfo& ReshuodongMessage::huodongs(int index) const {
  return huodongs_.Get(index);
}
inline ::com::game::proto::huodonginfo* ReshuodongMessage::mutable_huodongs(int index) {
  return huodongs_.Mutable(index);
}
inline ::com::game::proto::huodonginfo* ReshuodongMessage::add_huodongs() {
  return huodongs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::huodonginfo >&
ReshuodongMessage::huodongs() const {
  return huodongs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::huodonginfo >*
ReshuodongMessage::mutable_huodongs() {
  return &huodongs_;
}

// -------------------------------------------------------------------

// huodonginfo

// optional int32 Id = 1;
inline bool huodonginfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void huodonginfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void huodonginfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void huodonginfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 huodonginfo::id() const {
  return id_;
}
inline void huodonginfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 zt = 2;
inline bool huodonginfo::has_zt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void huodonginfo::set_has_zt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void huodonginfo::clear_has_zt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void huodonginfo::clear_zt() {
  zt_ = 0;
  clear_has_zt();
}
inline ::google::protobuf::int32 huodonginfo::zt() const {
  return zt_;
}
inline void huodonginfo::set_zt(::google::protobuf::int32 value) {
  set_has_zt();
  zt_ = value;
}

// -------------------------------------------------------------------

// ReqExpandPlayerInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqExpandPlayerInfo];
inline bool ReqExpandPlayerInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqExpandPlayerInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqExpandPlayerInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqExpandPlayerInfoMessage::clear_msgid() {
  msgid_ = 672;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqExpandPlayerInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqExpandPlayerInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqGetShopGoodsMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqGetShopGoods];
inline bool ReqGetShopGoodsMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetShopGoodsMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetShopGoodsMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetShopGoodsMessage::clear_msgid() {
  msgid_ = 673;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqGetShopGoodsMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqGetShopGoodsMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ReqBuyItemMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBuyItem];
inline bool ReqBuyItemMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuyItemMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuyItemMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuyItemMessage::clear_msgid() {
  msgid_ = 674;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBuyItemMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBuyItemMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional int32 goodsId = 2;
inline bool ReqBuyItemMessage::has_goodsid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBuyItemMessage::set_has_goodsid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBuyItemMessage::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBuyItemMessage::clear_goodsid() {
  goodsid_ = 0;
  clear_has_goodsid();
}
inline ::google::protobuf::int32 ReqBuyItemMessage::goodsid() const {
  return goodsid_;
}
inline void ReqBuyItemMessage::set_goodsid(::google::protobuf::int32 value) {
  set_has_goodsid();
  goodsid_ = value;
}

// optional int32 num = 3;
inline bool ReqBuyItemMessage::has_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBuyItemMessage::set_has_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBuyItemMessage::clear_has_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBuyItemMessage::clear_num() {
  num_ = 0;
  clear_has_num();
}
inline ::google::protobuf::int32 ReqBuyItemMessage::num() const {
  return num_;
}
inline void ReqBuyItemMessage::set_num(::google::protobuf::int32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// ReqRemainderTaskMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqRemainderTask];
inline bool ReqRemainderTaskMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRemainderTaskMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRemainderTaskMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRemainderTaskMessage::clear_msgid() {
  msgid_ = 675;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqRemainderTaskMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqRemainderTaskMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResRemainderTaskMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResRemainderTask];
inline bool ResRemainderTaskMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResRemainderTaskMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResRemainderTaskMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResRemainderTaskMessage::clear_msgid() {
  msgid_ = 676;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResRemainderTaskMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResRemainderTaskMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional double gold = 2;
inline bool ResRemainderTaskMessage::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResRemainderTaskMessage::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResRemainderTaskMessage::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResRemainderTaskMessage::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline double ResRemainderTaskMessage::gold() const {
  return gold_;
}
inline void ResRemainderTaskMessage::set_gold(double value) {
  set_has_gold();
  gold_ = value;
}

// -------------------------------------------------------------------

// ItemBaseAttribute

// optional int64 id = 1;
inline bool ItemBaseAttribute::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemBaseAttribute::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemBaseAttribute::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemBaseAttribute::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 ItemBaseAttribute::id() const {
  return id_;
}
inline void ItemBaseAttribute::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 modelId = 2;
inline bool ItemBaseAttribute::has_modelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemBaseAttribute::set_has_modelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemBaseAttribute::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemBaseAttribute::clear_modelid() {
  modelid_ = 0;
  clear_has_modelid();
}
inline ::google::protobuf::int32 ItemBaseAttribute::modelid() const {
  return modelid_;
}
inline void ItemBaseAttribute::set_modelid(::google::protobuf::int32 value) {
  set_has_modelid();
  modelid_ = value;
}

// optional int32 count = 3;
inline bool ItemBaseAttribute::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemBaseAttribute::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemBaseAttribute::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemBaseAttribute::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ItemBaseAttribute::count() const {
  return count_;
}
inline void ItemBaseAttribute::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// ResBackpackListMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResBackpackList];
inline bool ResBackpackListMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResBackpackListMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResBackpackListMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResBackpackListMessage::clear_msgid() {
  msgid_ = 677;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResBackpackListMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResBackpackListMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.ItemBaseAttribute goodList = 2;
inline int ResBackpackListMessage::goodlist_size() const {
  return goodlist_.size();
}
inline void ResBackpackListMessage::clear_goodlist() {
  goodlist_.Clear();
}
inline const ::com::game::proto::ItemBaseAttribute& ResBackpackListMessage::goodlist(int index) const {
  return goodlist_.Get(index);
}
inline ::com::game::proto::ItemBaseAttribute* ResBackpackListMessage::mutable_goodlist(int index) {
  return goodlist_.Mutable(index);
}
inline ::com::game::proto::ItemBaseAttribute* ResBackpackListMessage::add_goodlist() {
  return goodlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::ItemBaseAttribute >&
ResBackpackListMessage::goodlist() const {
  return goodlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::ItemBaseAttribute >*
ResBackpackListMessage::mutable_goodlist() {
  return &goodlist_;
}

// optional int32 type = 3;
inline bool ResBackpackListMessage::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResBackpackListMessage::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResBackpackListMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResBackpackListMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ResBackpackListMessage::type() const {
  return type_;
}
inline void ResBackpackListMessage::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// ReqReceiveMailItemMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqReceiveMailItem];
inline bool ReqReceiveMailItemMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqReceiveMailItemMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqReceiveMailItemMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqReceiveMailItemMessage::clear_msgid() {
  msgid_ = 679;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqReceiveMailItemMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqReceiveMailItemMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated int64 mailIds = 2;
inline int ReqReceiveMailItemMessage::mailids_size() const {
  return mailids_.size();
}
inline void ReqReceiveMailItemMessage::clear_mailids() {
  mailids_.Clear();
}
inline ::google::protobuf::int64 ReqReceiveMailItemMessage::mailids(int index) const {
  return mailids_.Get(index);
}
inline void ReqReceiveMailItemMessage::set_mailids(int index, ::google::protobuf::int64 value) {
  mailids_.Set(index, value);
}
inline void ReqReceiveMailItemMessage::add_mailids(::google::protobuf::int64 value) {
  mailids_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ReqReceiveMailItemMessage::mailids() const {
  return mailids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ReqReceiveMailItemMessage::mutable_mailids() {
  return &mailids_;
}

// -------------------------------------------------------------------

// ReqOpenUpMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqOpenUp];
inline bool ReqOpenUpMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqOpenUpMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqOpenUpMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqOpenUpMessage::clear_msgid() {
  msgid_ = 680;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqOpenUpMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqOpenUpMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResOpenUpMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResOpenUp];
inline bool ResOpenUpMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResOpenUpMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResOpenUpMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResOpenUpMessage::clear_msgid() {
  msgid_ = 681;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResOpenUpMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResOpenUpMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.openupinfo openupinfos = 2;
inline int ResOpenUpMessage::openupinfos_size() const {
  return openupinfos_.size();
}
inline void ResOpenUpMessage::clear_openupinfos() {
  openupinfos_.Clear();
}
inline const ::com::game::proto::openupinfo& ResOpenUpMessage::openupinfos(int index) const {
  return openupinfos_.Get(index);
}
inline ::com::game::proto::openupinfo* ResOpenUpMessage::mutable_openupinfos(int index) {
  return openupinfos_.Mutable(index);
}
inline ::com::game::proto::openupinfo* ResOpenUpMessage::add_openupinfos() {
  return openupinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::openupinfo >&
ResOpenUpMessage::openupinfos() const {
  return openupinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::openupinfo >*
ResOpenUpMessage::mutable_openupinfos() {
  return &openupinfos_;
}

// -------------------------------------------------------------------

// openupinfo

// optional string names = 1;
inline bool openupinfo::has_names() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void openupinfo::set_has_names() {
  _has_bits_[0] |= 0x00000001u;
}
inline void openupinfo::clear_has_names() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void openupinfo::clear_names() {
  if (names_ != &::google::protobuf::internal::kEmptyString) {
    names_->clear();
  }
  clear_has_names();
}
inline const ::std::string& openupinfo::names() const {
  return *names_;
}
inline void openupinfo::set_names(const ::std::string& value) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::kEmptyString) {
    names_ = new ::std::string;
  }
  names_->assign(value);
}
inline void openupinfo::set_names(const char* value) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::kEmptyString) {
    names_ = new ::std::string;
  }
  names_->assign(value);
}
inline void openupinfo::set_names(const char* value, size_t size) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::kEmptyString) {
    names_ = new ::std::string;
  }
  names_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* openupinfo::mutable_names() {
  set_has_names();
  if (names_ == &::google::protobuf::internal::kEmptyString) {
    names_ = new ::std::string;
  }
  return names_;
}
inline ::std::string* openupinfo::release_names() {
  clear_has_names();
  if (names_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = names_;
    names_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 times = 2;
inline bool openupinfo::has_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void openupinfo::set_has_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void openupinfo::clear_has_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void openupinfo::clear_times() {
  times_ = GOOGLE_LONGLONG(0);
  clear_has_times();
}
inline ::google::protobuf::int64 openupinfo::times() const {
  return times_;
}
inline void openupinfo::set_times(::google::protobuf::int64 value) {
  set_has_times();
  times_ = value;
}

// -------------------------------------------------------------------

// ReqShareInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqShareInfo];
inline bool ReqShareInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqShareInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqShareInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqShareInfoMessage::clear_msgid() {
  msgid_ = 682;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqShareInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqShareInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResShareInfoMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResShareInfo];
inline bool ResShareInfoMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResShareInfoMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResShareInfoMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResShareInfoMessage::clear_msgid() {
  msgid_ = 683;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResShareInfoMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResShareInfoMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// optional double downShareMoney = 2;
inline bool ResShareInfoMessage::has_downsharemoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResShareInfoMessage::clear_has_downsharemoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResShareInfoMessage::clear_downsharemoney() {
  downsharemoney_ = 0;
  clear_has_downsharemoney();
}
inline double ResShareInfoMessage::downsharemoney() const {
  return downsharemoney_;
}
inline void ResShareInfoMessage::set_downsharemoney(double value) {
  set_has_downsharemoney();
  downsharemoney_ = value;
}

// optional int32 downShareNum1 = 3;
inline bool ResShareInfoMessage::has_downsharenum1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharenum1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResShareInfoMessage::clear_has_downsharenum1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResShareInfoMessage::clear_downsharenum1() {
  downsharenum1_ = 0;
  clear_has_downsharenum1();
}
inline ::google::protobuf::int32 ResShareInfoMessage::downsharenum1() const {
  return downsharenum1_;
}
inline void ResShareInfoMessage::set_downsharenum1(::google::protobuf::int32 value) {
  set_has_downsharenum1();
  downsharenum1_ = value;
}

// optional int32 downShareNum2 = 4;
inline bool ResShareInfoMessage::has_downsharenum2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharenum2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResShareInfoMessage::clear_has_downsharenum2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResShareInfoMessage::clear_downsharenum2() {
  downsharenum2_ = 0;
  clear_has_downsharenum2();
}
inline ::google::protobuf::int32 ResShareInfoMessage::downsharenum2() const {
  return downsharenum2_;
}
inline void ResShareInfoMessage::set_downsharenum2(::google::protobuf::int32 value) {
  set_has_downsharenum2();
  downsharenum2_ = value;
}

// optional int32 downShareNum3 = 5;
inline bool ResShareInfoMessage::has_downsharenum3() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharenum3() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ResShareInfoMessage::clear_has_downsharenum3() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ResShareInfoMessage::clear_downsharenum3() {
  downsharenum3_ = 0;
  clear_has_downsharenum3();
}
inline ::google::protobuf::int32 ResShareInfoMessage::downsharenum3() const {
  return downsharenum3_;
}
inline void ResShareInfoMessage::set_downsharenum3(::google::protobuf::int32 value) {
  set_has_downsharenum3();
  downsharenum3_ = value;
}

// optional int32 downShareNum4 = 6;
inline bool ResShareInfoMessage::has_downsharenum4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharenum4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ResShareInfoMessage::clear_has_downsharenum4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ResShareInfoMessage::clear_downsharenum4() {
  downsharenum4_ = 0;
  clear_has_downsharenum4();
}
inline ::google::protobuf::int32 ResShareInfoMessage::downsharenum4() const {
  return downsharenum4_;
}
inline void ResShareInfoMessage::set_downsharenum4(::google::protobuf::int32 value) {
  set_has_downsharenum4();
  downsharenum4_ = value;
}

// repeated .com.game.proto.DownShareDesc downShareDesc = 7;
inline int ResShareInfoMessage::downsharedesc_size() const {
  return downsharedesc_.size();
}
inline void ResShareInfoMessage::clear_downsharedesc() {
  downsharedesc_.Clear();
}
inline const ::com::game::proto::DownShareDesc& ResShareInfoMessage::downsharedesc(int index) const {
  return downsharedesc_.Get(index);
}
inline ::com::game::proto::DownShareDesc* ResShareInfoMessage::mutable_downsharedesc(int index) {
  return downsharedesc_.Mutable(index);
}
inline ::com::game::proto::DownShareDesc* ResShareInfoMessage::add_downsharedesc() {
  return downsharedesc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::DownShareDesc >&
ResShareInfoMessage::downsharedesc() const {
  return downsharedesc_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::DownShareDesc >*
ResShareInfoMessage::mutable_downsharedesc() {
  return &downsharedesc_;
}

// optional double downShareMoneyTotal1 = 8;
inline bool ResShareInfoMessage::has_downsharemoneytotal1() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemoneytotal1() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ResShareInfoMessage::clear_has_downsharemoneytotal1() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ResShareInfoMessage::clear_downsharemoneytotal1() {
  downsharemoneytotal1_ = 0;
  clear_has_downsharemoneytotal1();
}
inline double ResShareInfoMessage::downsharemoneytotal1() const {
  return downsharemoneytotal1_;
}
inline void ResShareInfoMessage::set_downsharemoneytotal1(double value) {
  set_has_downsharemoneytotal1();
  downsharemoneytotal1_ = value;
}

// optional double downShareMoneyTotal2 = 9;
inline bool ResShareInfoMessage::has_downsharemoneytotal2() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemoneytotal2() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ResShareInfoMessage::clear_has_downsharemoneytotal2() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ResShareInfoMessage::clear_downsharemoneytotal2() {
  downsharemoneytotal2_ = 0;
  clear_has_downsharemoneytotal2();
}
inline double ResShareInfoMessage::downsharemoneytotal2() const {
  return downsharemoneytotal2_;
}
inline void ResShareInfoMessage::set_downsharemoneytotal2(double value) {
  set_has_downsharemoneytotal2();
  downsharemoneytotal2_ = value;
}

// optional double downShareMoneyTotal3 = 10;
inline bool ResShareInfoMessage::has_downsharemoneytotal3() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemoneytotal3() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ResShareInfoMessage::clear_has_downsharemoneytotal3() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ResShareInfoMessage::clear_downsharemoneytotal3() {
  downsharemoneytotal3_ = 0;
  clear_has_downsharemoneytotal3();
}
inline double ResShareInfoMessage::downsharemoneytotal3() const {
  return downsharemoneytotal3_;
}
inline void ResShareInfoMessage::set_downsharemoneytotal3(double value) {
  set_has_downsharemoneytotal3();
  downsharemoneytotal3_ = value;
}

// optional double downShareMoneyTotal4 = 11;
inline bool ResShareInfoMessage::has_downsharemoneytotal4() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemoneytotal4() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ResShareInfoMessage::clear_has_downsharemoneytotal4() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ResShareInfoMessage::clear_downsharemoneytotal4() {
  downsharemoneytotal4_ = 0;
  clear_has_downsharemoneytotal4();
}
inline double ResShareInfoMessage::downsharemoneytotal4() const {
  return downsharemoneytotal4_;
}
inline void ResShareInfoMessage::set_downsharemoneytotal4(double value) {
  set_has_downsharemoneytotal4();
  downsharemoneytotal4_ = value;
}

// optional double downShareMonthMoney1 = 12;
inline bool ResShareInfoMessage::has_downsharemonthmoney1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemonthmoney1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ResShareInfoMessage::clear_has_downsharemonthmoney1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ResShareInfoMessage::clear_downsharemonthmoney1() {
  downsharemonthmoney1_ = 0;
  clear_has_downsharemonthmoney1();
}
inline double ResShareInfoMessage::downsharemonthmoney1() const {
  return downsharemonthmoney1_;
}
inline void ResShareInfoMessage::set_downsharemonthmoney1(double value) {
  set_has_downsharemonthmoney1();
  downsharemonthmoney1_ = value;
}

// optional double downShareMonthMoney2 = 13;
inline bool ResShareInfoMessage::has_downsharemonthmoney2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemonthmoney2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ResShareInfoMessage::clear_has_downsharemonthmoney2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ResShareInfoMessage::clear_downsharemonthmoney2() {
  downsharemonthmoney2_ = 0;
  clear_has_downsharemonthmoney2();
}
inline double ResShareInfoMessage::downsharemonthmoney2() const {
  return downsharemonthmoney2_;
}
inline void ResShareInfoMessage::set_downsharemonthmoney2(double value) {
  set_has_downsharemonthmoney2();
  downsharemonthmoney2_ = value;
}

// optional double downShareMonthMoney3 = 14;
inline bool ResShareInfoMessage::has_downsharemonthmoney3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemonthmoney3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ResShareInfoMessage::clear_has_downsharemonthmoney3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ResShareInfoMessage::clear_downsharemonthmoney3() {
  downsharemonthmoney3_ = 0;
  clear_has_downsharemonthmoney3();
}
inline double ResShareInfoMessage::downsharemonthmoney3() const {
  return downsharemonthmoney3_;
}
inline void ResShareInfoMessage::set_downsharemonthmoney3(double value) {
  set_has_downsharemonthmoney3();
  downsharemonthmoney3_ = value;
}

// optional double downShareMonthMoney4 = 15;
inline bool ResShareInfoMessage::has_downsharemonthmoney4() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharemonthmoney4() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ResShareInfoMessage::clear_has_downsharemonthmoney4() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ResShareInfoMessage::clear_downsharemonthmoney4() {
  downsharemonthmoney4_ = 0;
  clear_has_downsharemonthmoney4();
}
inline double ResShareInfoMessage::downsharemonthmoney4() const {
  return downsharemonthmoney4_;
}
inline void ResShareInfoMessage::set_downsharemonthmoney4(double value) {
  set_has_downsharemonthmoney4();
  downsharemonthmoney4_ = value;
}

// optional double downShareDayMoney1 = 16;
inline bool ResShareInfoMessage::has_downsharedaymoney1() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharedaymoney1() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ResShareInfoMessage::clear_has_downsharedaymoney1() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ResShareInfoMessage::clear_downsharedaymoney1() {
  downsharedaymoney1_ = 0;
  clear_has_downsharedaymoney1();
}
inline double ResShareInfoMessage::downsharedaymoney1() const {
  return downsharedaymoney1_;
}
inline void ResShareInfoMessage::set_downsharedaymoney1(double value) {
  set_has_downsharedaymoney1();
  downsharedaymoney1_ = value;
}

// optional double downShareDayMoney2 = 17;
inline bool ResShareInfoMessage::has_downsharedaymoney2() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharedaymoney2() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ResShareInfoMessage::clear_has_downsharedaymoney2() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ResShareInfoMessage::clear_downsharedaymoney2() {
  downsharedaymoney2_ = 0;
  clear_has_downsharedaymoney2();
}
inline double ResShareInfoMessage::downsharedaymoney2() const {
  return downsharedaymoney2_;
}
inline void ResShareInfoMessage::set_downsharedaymoney2(double value) {
  set_has_downsharedaymoney2();
  downsharedaymoney2_ = value;
}

// optional double downShareDayMoney3 = 18;
inline bool ResShareInfoMessage::has_downsharedaymoney3() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharedaymoney3() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ResShareInfoMessage::clear_has_downsharedaymoney3() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ResShareInfoMessage::clear_downsharedaymoney3() {
  downsharedaymoney3_ = 0;
  clear_has_downsharedaymoney3();
}
inline double ResShareInfoMessage::downsharedaymoney3() const {
  return downsharedaymoney3_;
}
inline void ResShareInfoMessage::set_downsharedaymoney3(double value) {
  set_has_downsharedaymoney3();
  downsharedaymoney3_ = value;
}

// optional double downShareDayMoney4 = 19;
inline bool ResShareInfoMessage::has_downsharedaymoney4() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ResShareInfoMessage::set_has_downsharedaymoney4() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ResShareInfoMessage::clear_has_downsharedaymoney4() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ResShareInfoMessage::clear_downsharedaymoney4() {
  downsharedaymoney4_ = 0;
  clear_has_downsharedaymoney4();
}
inline double ResShareInfoMessage::downsharedaymoney4() const {
  return downsharedaymoney4_;
}
inline void ResShareInfoMessage::set_downsharedaymoney4(double value) {
  set_has_downsharedaymoney4();
  downsharedaymoney4_ = value;
}

// -------------------------------------------------------------------

// DownShareDesc

// optional string name = 1;
inline bool DownShareDesc::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownShareDesc::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownShareDesc::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownShareDesc::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DownShareDesc::name() const {
  return *name_;
}
inline void DownShareDesc::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DownShareDesc::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void DownShareDesc::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DownShareDesc::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* DownShareDesc::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional double shareMoney = 2;
inline bool DownShareDesc::has_sharemoney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownShareDesc::set_has_sharemoney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownShareDesc::clear_has_sharemoney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownShareDesc::clear_sharemoney() {
  sharemoney_ = 0;
  clear_has_sharemoney();
}
inline double DownShareDesc::sharemoney() const {
  return sharemoney_;
}
inline void DownShareDesc::set_sharemoney(double value) {
  set_has_sharemoney();
  sharemoney_ = value;
}

// -------------------------------------------------------------------

// ReqPubAuctionMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqPubAuction];
inline bool ReqPubAuctionMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPubAuctionMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPubAuctionMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPubAuctionMessage::clear_msgid() {
  msgid_ = 684;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqPubAuctionMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqPubAuctionMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 pubCount = 2;
inline bool ReqPubAuctionMessage::has_pubcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPubAuctionMessage::set_has_pubcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPubAuctionMessage::clear_has_pubcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPubAuctionMessage::clear_pubcount() {
  pubcount_ = 0;
  clear_has_pubcount();
}
inline ::google::protobuf::int32 ReqPubAuctionMessage::pubcount() const {
  return pubcount_;
}
inline void ReqPubAuctionMessage::set_pubcount(::google::protobuf::int32 value) {
  set_has_pubcount();
  pubcount_ = value;
}

// -------------------------------------------------------------------

// ReqBuyAuctionMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqBuyAuction];
inline bool ReqBuyAuctionMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuyAuctionMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuyAuctionMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuyAuctionMessage::clear_msgid() {
  msgid_ = 685;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqBuyAuctionMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqBuyAuctionMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int64 itemId = 2;
inline bool ReqBuyAuctionMessage::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBuyAuctionMessage::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBuyAuctionMessage::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBuyAuctionMessage::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 ReqBuyAuctionMessage::itemid() const {
  return itemid_;
}
inline void ReqBuyAuctionMessage::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 buyCount = 3;
inline bool ReqBuyAuctionMessage::has_buycount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBuyAuctionMessage::set_has_buycount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBuyAuctionMessage::clear_has_buycount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBuyAuctionMessage::clear_buycount() {
  buycount_ = 0;
  clear_has_buycount();
}
inline ::google::protobuf::int32 ReqBuyAuctionMessage::buycount() const {
  return buycount_;
}
inline void ReqBuyAuctionMessage::set_buycount(::google::protobuf::int32 value) {
  set_has_buycount();
  buycount_ = value;
}

// required int32 page = 4;
inline bool ReqBuyAuctionMessage::has_page() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqBuyAuctionMessage::set_has_page() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqBuyAuctionMessage::clear_has_page() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqBuyAuctionMessage::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ReqBuyAuctionMessage::page() const {
  return page_;
}
inline void ReqBuyAuctionMessage::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// -------------------------------------------------------------------

// ReqAuctionsMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqAuctions];
inline bool ReqAuctionsMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAuctionsMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAuctionsMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAuctionsMessage::clear_msgid() {
  msgid_ = 686;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqAuctionsMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqAuctionsMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 page = 2;
inline bool ReqAuctionsMessage::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqAuctionsMessage::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqAuctionsMessage::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqAuctionsMessage::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ReqAuctionsMessage::page() const {
  return page_;
}
inline void ReqAuctionsMessage::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// required int32 pageShow = 3;
inline bool ReqAuctionsMessage::has_pageshow() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqAuctionsMessage::set_has_pageshow() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqAuctionsMessage::clear_has_pageshow() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqAuctionsMessage::clear_pageshow() {
  pageshow_ = 0;
  clear_has_pageshow();
}
inline ::google::protobuf::int32 ReqAuctionsMessage::pageshow() const {
  return pageshow_;
}
inline void ReqAuctionsMessage::set_pageshow(::google::protobuf::int32 value) {
  set_has_pageshow();
  pageshow_ = value;
}

// -------------------------------------------------------------------

// ResAuctionsMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResAuctions];
inline bool ResAuctionsMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResAuctionsMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResAuctionsMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResAuctionsMessage::clear_msgid() {
  msgid_ = 687;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResAuctionsMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResAuctionsMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int32 page = 2;
inline bool ResAuctionsMessage::has_page() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResAuctionsMessage::set_has_page() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResAuctionsMessage::clear_has_page() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResAuctionsMessage::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ResAuctionsMessage::page() const {
  return page_;
}
inline void ResAuctionsMessage::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}

// required int32 pageTotal = 3;
inline bool ResAuctionsMessage::has_pagetotal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResAuctionsMessage::set_has_pagetotal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResAuctionsMessage::clear_has_pagetotal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResAuctionsMessage::clear_pagetotal() {
  pagetotal_ = 0;
  clear_has_pagetotal();
}
inline ::google::protobuf::int32 ResAuctionsMessage::pagetotal() const {
  return pagetotal_;
}
inline void ResAuctionsMessage::set_pagetotal(::google::protobuf::int32 value) {
  set_has_pagetotal();
  pagetotal_ = value;
}

// repeated .com.game.proto.AuctionEntry entrys = 4;
inline int ResAuctionsMessage::entrys_size() const {
  return entrys_.size();
}
inline void ResAuctionsMessage::clear_entrys() {
  entrys_.Clear();
}
inline const ::com::game::proto::AuctionEntry& ResAuctionsMessage::entrys(int index) const {
  return entrys_.Get(index);
}
inline ::com::game::proto::AuctionEntry* ResAuctionsMessage::mutable_entrys(int index) {
  return entrys_.Mutable(index);
}
inline ::com::game::proto::AuctionEntry* ResAuctionsMessage::add_entrys() {
  return entrys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionEntry >&
ResAuctionsMessage::entrys() const {
  return entrys_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionEntry >*
ResAuctionsMessage::mutable_entrys() {
  return &entrys_;
}

// -------------------------------------------------------------------

// ReqMyAuctionHistorysMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqMyAuctionHistorys];
inline bool ReqMyAuctionHistorysMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMyAuctionHistorysMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMyAuctionHistorysMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMyAuctionHistorysMessage::clear_msgid() {
  msgid_ = 688;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqMyAuctionHistorysMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqMyAuctionHistorysMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// -------------------------------------------------------------------

// ResMyAuctionHistorysMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ResMyAuctionHistorys];
inline bool ResMyAuctionHistorysMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResMyAuctionHistorysMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResMyAuctionHistorysMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResMyAuctionHistorysMessage::clear_msgid() {
  msgid_ = 689;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ResMyAuctionHistorysMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ResMyAuctionHistorysMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// repeated .com.game.proto.AuctionLog logs = 2;
inline int ResMyAuctionHistorysMessage::logs_size() const {
  return logs_.size();
}
inline void ResMyAuctionHistorysMessage::clear_logs() {
  logs_.Clear();
}
inline const ::com::game::proto::AuctionLog& ResMyAuctionHistorysMessage::logs(int index) const {
  return logs_.Get(index);
}
inline ::com::game::proto::AuctionLog* ResMyAuctionHistorysMessage::mutable_logs(int index) {
  return logs_.Mutable(index);
}
inline ::com::game::proto::AuctionLog* ResMyAuctionHistorysMessage::add_logs() {
  return logs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionLog >&
ResMyAuctionHistorysMessage::logs() const {
  return logs_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::game::proto::AuctionLog >*
ResMyAuctionHistorysMessage::mutable_logs() {
  return &logs_;
}

// -------------------------------------------------------------------

// AuctionEntry

// optional int64 id = 1;
inline bool AuctionEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionEntry::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 AuctionEntry::id() const {
  return id_;
}
inline void AuctionEntry::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional int32 itemModelId = 2;
inline bool AuctionEntry::has_itemmodelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionEntry::set_has_itemmodelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionEntry::clear_has_itemmodelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionEntry::clear_itemmodelid() {
  itemmodelid_ = 0;
  clear_has_itemmodelid();
}
inline ::google::protobuf::int32 AuctionEntry::itemmodelid() const {
  return itemmodelid_;
}
inline void AuctionEntry::set_itemmodelid(::google::protobuf::int32 value) {
  set_has_itemmodelid();
  itemmodelid_ = value;
}

// optional int32 itemCount = 3;
inline bool AuctionEntry::has_itemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionEntry::set_has_itemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionEntry::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionEntry::clear_itemcount() {
  itemcount_ = 0;
  clear_has_itemcount();
}
inline ::google::protobuf::int32 AuctionEntry::itemcount() const {
  return itemcount_;
}
inline void AuctionEntry::set_itemcount(::google::protobuf::int32 value) {
  set_has_itemcount();
  itemcount_ = value;
}

// optional int32 itemPrice = 4;
inline bool AuctionEntry::has_itemprice() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionEntry::set_has_itemprice() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionEntry::clear_has_itemprice() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionEntry::clear_itemprice() {
  itemprice_ = 0;
  clear_has_itemprice();
}
inline ::google::protobuf::int32 AuctionEntry::itemprice() const {
  return itemprice_;
}
inline void AuctionEntry::set_itemprice(::google::protobuf::int32 value) {
  set_has_itemprice();
  itemprice_ = value;
}

// optional string owner = 5;
inline bool AuctionEntry::has_owner() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuctionEntry::set_has_owner() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuctionEntry::clear_has_owner() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuctionEntry::clear_owner() {
  if (owner_ != &::google::protobuf::internal::kEmptyString) {
    owner_->clear();
  }
  clear_has_owner();
}
inline const ::std::string& AuctionEntry::owner() const {
  return *owner_;
}
inline void AuctionEntry::set_owner(const ::std::string& value) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(value);
}
inline void AuctionEntry::set_owner(const char* value) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(value);
}
inline void AuctionEntry::set_owner(const char* value, size_t size) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuctionEntry::mutable_owner() {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  return owner_;
}
inline ::std::string* AuctionEntry::release_owner() {
  clear_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = owner_;
    owner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string ownerPhone = 6;
inline bool AuctionEntry::has_ownerphone() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuctionEntry::set_has_ownerphone() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuctionEntry::clear_has_ownerphone() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuctionEntry::clear_ownerphone() {
  if (ownerphone_ != &::google::protobuf::internal::kEmptyString) {
    ownerphone_->clear();
  }
  clear_has_ownerphone();
}
inline const ::std::string& AuctionEntry::ownerphone() const {
  return *ownerphone_;
}
inline void AuctionEntry::set_ownerphone(const ::std::string& value) {
  set_has_ownerphone();
  if (ownerphone_ == &::google::protobuf::internal::kEmptyString) {
    ownerphone_ = new ::std::string;
  }
  ownerphone_->assign(value);
}
inline void AuctionEntry::set_ownerphone(const char* value) {
  set_has_ownerphone();
  if (ownerphone_ == &::google::protobuf::internal::kEmptyString) {
    ownerphone_ = new ::std::string;
  }
  ownerphone_->assign(value);
}
inline void AuctionEntry::set_ownerphone(const char* value, size_t size) {
  set_has_ownerphone();
  if (ownerphone_ == &::google::protobuf::internal::kEmptyString) {
    ownerphone_ = new ::std::string;
  }
  ownerphone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuctionEntry::mutable_ownerphone() {
  set_has_ownerphone();
  if (ownerphone_ == &::google::protobuf::internal::kEmptyString) {
    ownerphone_ = new ::std::string;
  }
  return ownerphone_;
}
inline ::std::string* AuctionEntry::release_ownerphone() {
  clear_has_ownerphone();
  if (ownerphone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ownerphone_;
    ownerphone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional int64 ownerId = 7;
inline bool AuctionEntry::has_ownerid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuctionEntry::set_has_ownerid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuctionEntry::clear_has_ownerid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuctionEntry::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
  clear_has_ownerid();
}
inline ::google::protobuf::int64 AuctionEntry::ownerid() const {
  return ownerid_;
}
inline void AuctionEntry::set_ownerid(::google::protobuf::int64 value) {
  set_has_ownerid();
  ownerid_ = value;
}

// optional double totalPrice = 8;
inline bool AuctionEntry::has_totalprice() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuctionEntry::set_has_totalprice() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuctionEntry::clear_has_totalprice() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuctionEntry::clear_totalprice() {
  totalprice_ = 0;
  clear_has_totalprice();
}
inline double AuctionEntry::totalprice() const {
  return totalprice_;
}
inline void AuctionEntry::set_totalprice(double value) {
  set_has_totalprice();
  totalprice_ = value;
}

// -------------------------------------------------------------------

// AuctionLog

// optional int32 type = 1;
inline bool AuctionLog::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuctionLog::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuctionLog::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuctionLog::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AuctionLog::type() const {
  return type_;
}
inline void AuctionLog::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int64 time = 2;
inline bool AuctionLog::has_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuctionLog::set_has_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuctionLog::clear_has_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuctionLog::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 AuctionLog::time() const {
  return time_;
}
inline void AuctionLog::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// optional int32 itemCount = 3;
inline bool AuctionLog::has_itemcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuctionLog::set_has_itemcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuctionLog::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuctionLog::clear_itemcount() {
  itemcount_ = 0;
  clear_has_itemcount();
}
inline ::google::protobuf::int32 AuctionLog::itemcount() const {
  return itemcount_;
}
inline void AuctionLog::set_itemcount(::google::protobuf::int32 value) {
  set_has_itemcount();
  itemcount_ = value;
}

// optional string owner = 4;
inline bool AuctionLog::has_owner() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuctionLog::set_has_owner() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuctionLog::clear_has_owner() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuctionLog::clear_owner() {
  if (owner_ != &::google::protobuf::internal::kEmptyString) {
    owner_->clear();
  }
  clear_has_owner();
}
inline const ::std::string& AuctionLog::owner() const {
  return *owner_;
}
inline void AuctionLog::set_owner(const ::std::string& value) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(value);
}
inline void AuctionLog::set_owner(const char* value) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(value);
}
inline void AuctionLog::set_owner(const char* value, size_t size) {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  owner_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AuctionLog::mutable_owner() {
  set_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    owner_ = new ::std::string;
  }
  return owner_;
}
inline ::std::string* AuctionLog::release_owner() {
  clear_has_owner();
  if (owner_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = owner_;
    owner_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// ReqCancelAuctionMessage

// optional .com.game.proto.Protos_Login msgID = 1 [default = ReqCancelAuction];
inline bool ReqCancelAuctionMessage::has_msgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCancelAuctionMessage::set_has_msgid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCancelAuctionMessage::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCancelAuctionMessage::clear_msgid() {
  msgid_ = 690;
  clear_has_msgid();
}
inline com::game::proto::Protos_Login ReqCancelAuctionMessage::msgid() const {
  return static_cast< com::game::proto::Protos_Login >(msgid_);
}
inline void ReqCancelAuctionMessage::set_msgid(com::game::proto::Protos_Login value) {
  GOOGLE_DCHECK(com::game::proto::Protos_Login_IsValid(value));
  set_has_msgid();
  msgid_ = value;
}

// required int64 itemId = 2;
inline bool ReqCancelAuctionMessage::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqCancelAuctionMessage::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqCancelAuctionMessage::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqCancelAuctionMessage::clear_itemid() {
  itemid_ = GOOGLE_LONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::int64 ReqCancelAuctionMessage::itemid() const {
  return itemid_;
}
inline void ReqCancelAuctionMessage::set_itemid(::google::protobuf::int64 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 page = 3;
inline bool ReqCancelAuctionMessage::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqCancelAuctionMessage::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqCancelAuctionMessage::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqCancelAuctionMessage::clear_page() {
  page_ = 0;
  clear_has_page();
}
inline ::google::protobuf::int32 ReqCancelAuctionMessage::page() const {
  return page_;
}
inline void ReqCancelAuctionMessage::set_page(::google::protobuf::int32 value) {
  set_has_page();
  page_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace game
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< com::game::proto::Protos_Login>() {
  return com::game::proto::Protos_Login_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_LoginMessage_2eproto__INCLUDED
